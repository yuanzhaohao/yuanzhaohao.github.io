{"version":3,"sources":["webpack:///js/12.1f5a811.js","webpack:///./docs/modal/en-US.md","webpack:///./docs/modal/confirm.md","webpack:///./docs/modal/basic.md","webpack:///./docs/modal/type.md"],"names":["webpackJsonp","3Fsn","module","exports","__webpack_require__","markdown","demos","basic","confirm","type","QkGj","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","_dashkitUi","Modal","content","React","createElement","onConfirm","console","log","onCancel","Button","onClick","QwC5","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","App","_React$Component","_ref","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","state","visible","handleClick","setState","handleClose","onClose","Component","wpgJ","success","info","error","warning","className"],"mappings":"AAAAA,cAAc,GAAG,GAAG,GAAG,KAEjBC,OACA,SAAUC,EAAQC,EAASC,GCHjCF,EAAAC,SACAE,SAAA,uiBACAC,OAASC,MAASH,EAAQ,QAC1BI,QAAWJ,EAAQ,QACnBK,KAAQL,EAAQ,WDSVM,KACA,SAAUR,EAAQC,EAASC,GEdjCF,EAAAC,SAAkBQ,KAAA,sgBAAwgBC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,WAA+BC,UAAaF,QAAA,kDAAAC,QAAA,2GAA4KE,UAAA,IAAgBC,QAAA,WAOhyB,QAAAX,KACAY,EAAAC,MAAAb,SACAM,MAAA,4BACAQ,QAAAC,EAAAC,cACA,MACA,KACAD,EAAAC,cACA,IACA,KACA,oCAEAD,EAAAC,cACA,IACA,KACA,qCAGAC,UAAA,WACAC,QAAAC,IAAA,4BAEAC,SAAA,WACAF,QAAAC,IAAA,6BA3BA,GAAAJ,GAAcnB,EAAQ,QAItBgB,GAFiBhB,EAAQ,QAENA,EAAQ,QA4B3B,OAAAmB,GAAAC,cACAJ,EAAAS,QAEAC,QAAAtB,GAEA,cFsBMuB,KACA,SAAU7B,EAAQC,EAASC,GG7DjCF,EAAAC,SAAkBQ,KAAA,myBAAqyBC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,SAA6BC,UAAaF,QAAA,qDAAAC,QAAA,8DAAkIE,UAAA,IAAgBC,QAAA,WASjhC,QAAAa,GAAAC,EAAAC,GAAmD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE7F,QAAAC,GAAAC,EAAAC,GAAmD,IAAAD,EAAa,SAAAE,gBAAA,4DAAyF,QAAAD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAD,EAAAC,EAEzJ,QAAAE,GAAAC,EAAAC,GAA4C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAP,WAAA,iEAAAO,GAAuGD,GAAAE,UAAAC,OAAAC,OAAAH,KAAAC,WAAyEG,aAAeC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAA6ER,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GAZvX,GAAAnB,GAAcnB,EAAQ,QAItBiD,GAFiBjD,EAAQ,QAEzB,WAAkC,QAAAkD,GAAAC,EAAAC,GAA2C,OAAAC,GAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,GAAAE,GAAAH,EAAAC,EAA2BE,GAAAX,WAAAW,EAAAX,aAAA,EAAwDW,EAAAT,cAAA,EAAgC,SAAAS,OAAAV,UAAA,GAAuDL,OAAAgB,eAAAL,EAAAI,EAAAE,IAAAF,IAA+D,gBAAAzB,EAAA4B,EAAAC,GAA2L,MAAlID,IAAAR,EAAApB,EAAAS,UAAAmB,GAAqEC,GAAAT,EAAApB,EAAA6B,GAA6D7B,OAE1hBd,EAAmBhB,EAAQ,QAQ3B4D,EAAA,SAAAC,GAGA,QAAAD,KACA,GAAAE,GAEAC,EAAAC,EAAAC,CAEArC,GAAAsC,KAAAN,EAEA,QAAAO,GAAAC,UAAAd,OAAAe,EAAAC,MAAAH,GAAAI,EAAA,EAAqEA,EAAAJ,EAAaI,IAClFF,EAAAE,GAAAH,UAAAG,EAGA,OAAAR,GAAAC,EAAAhC,EAAAkC,MAAAJ,EAAAF,EAAAZ,WAAAR,OAAAgC,eAAAZ,IAAA1B,KAAAuC,MAAAX,GAAAI,MAAAQ,OAAAL,KAAAL,EAAAW,OACAC,SAAA,GACOZ,EAAAa,YAAA,WACPb,EAAAc,UACAF,SAAA,KAEOZ,EAAAe,YAAA,WACPf,EAAAc,UACAF,SAAA,KARAX,EAUOF,EAAA/B,EAAAgC,EAAAC,GA6CP,MApEA7B,GAAAwB,EAAAC,GA0BAZ,EAAAW,IACAH,IAAA,SACAd,MAAA,WACA,MAAAxB,GAAAC,cACA,MACA,KACAD,EAAAC,cACAJ,EAAAS,QAEAC,QAAAwC,KAAAW,aAEA,SAEA1D,EAAAC,cACAJ,EAAAC,OAEA2D,QAAAV,KAAAS,MAAAC,QACAlE,MAAA,cACAsE,QAAAd,KAAAa,YACAvD,SAAA0C,KAAAa,YACA1D,UAAA6C,KAAAa,aAEA5D,EAAAC,cACA,IACA,KACA,eAEAD,EAAAC,cACA,IACA,KACA,eAEAD,EAAAC,cACA,IACA,KACA,qBAOAwC,GACGzC,EAAA8D,UAGH,OAAA9D,GAAAC,cAAAwC,EAAA,SHoEMsB,KACA,SAAUpF,EAAQC,EAASC,GI7JjCF,EAAAC,SAAkBQ,KAAA,4hCAA8hCC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,QAA4BC,UAAaF,QAAA,kDAAAC,QAAA,2GAA4KE,UAAA,IAAgBC,QAAA,WAOnzC,QAAAoE,KACAnE,EAAAC,MAAAkE,SACAzE,MAAA,4BACAQ,QAAAC,EAAAC,cACA,MACA,KACAD,EAAAC,cACA,IACA,KACA,oCAEAD,EAAAC,cACA,IACA,KACA,qCAGAC,UAAA,WACAC,QAAAC,IAAA,8BAKA,QAAA6D,KACApE,EAAAC,MAAAmE,MACA1E,MAAA,iCACAQ,QAAA,qCAIA,QAAAmE,KACArE,EAAAC,MAAAoE,OACA3E,MAAA,0BACAQ,QAAA,qCAIA,QAAAoE,KACAtE,EAAAC,MAAAqE,SACA5E,MAAA,4BACAQ,QAAA,qCA9CA,GAAAC,GAAcnB,EAAQ,QAItBgB,GAFiBhB,EAAQ,QAENA,EAAQ,QA8C3B,OAAAmB,GAAAC,cACA,OAEAmE,UAAA,aAEApE,EAAAC,cACAJ,EAAAS,QAEAC,QAAAyD,GAEA,WAEAhE,EAAAC,cACAJ,EAAAS,QAEAC,QAAA0D,GAEA,QAEAjE,EAAAC,cACAJ,EAAAS,QAEAC,QAAA2D,GAEA,SAEAlE,EAAAC,cACAJ,EAAAS,QAEAC,QAAA4D,GAEA","file":"js/12.1f5a811.js","sourcesContent":["webpackJsonp([12,52,53,54],{\n\n/***/ \"3Fsn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  markdown: \"<h1>Modal</h1>\\n<p>Informs users while preserving the current page state.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>onClick</td>\\n<td><code>click</code> event handler</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': __webpack_require__(\"QwC5\"), \n'confirm': __webpack_require__(\"QkGj\"), \n'type': __webpack_require__(\"wpgJ\")}};\n\n/***/ }),\n\n/***/ \"QkGj\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nfunction confirm() {\\n  Modal.confirm({\\n    title: 'This is a confirm message',\\n    content: (\\n      <div>\\n        <p>some messages...some messages...</p>\\n        <p>some messages...some messages...</p>\\n      </div>\\n    ),\\n    onConfirm() {\\n      console.log('call onConfirm callback')\\n    },\\n    onCancel() {\\n      console.log('call onCancel callback')\\n    }\\n  });\\n}\\n\\nReactDOM.render(\\n  <Button onClick={confirm}>Confirm</Button>,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"确认\",\"en-US\":\"Confirm\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  function confirm() {\n    _dashkitUi.Modal.confirm({\n      title: 'This is a confirm message',\n      content: React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        )\n      ),\n      onConfirm: function onConfirm() {\n        console.log('call onConfirm callback');\n      },\n      onCancel: function onCancel() {\n        console.log('call onCancel callback');\n      }\n    });\n  }\n\n  return React.createElement(\n    _dashkitUi.Button,\n    {\n      onClick: confirm\n    },\n    \"Confirm\"\n  );\n},}\n\n/***/ }),\n\n/***/ \"QwC5\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nclass App extends React.Component {\\n  state = {\\n    visible: false,\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={this.handleClick}>Click</Button>\\n        <Modal\\n          visible={this.state.visible}\\n          title=\\\"Modal Title\\\"\\n          onClose={this.handleClose}\\n          onCancel={this.handleClose}\\n          onConfirm={this.handleClose}\\n        >\\n          <p>Contents...</p>\\n          <p>Contents...</p>\\n          <p>Contents...</p>\\n        </Modal>\\n      </div>\\n    );\\n  }\\n\\n  handleClick = () => {\\n    this.setState({\\n      visible: true,\\n    });\\n  }\\n\\n  handleClose = () => {\\n    this.setState({\\n      visible: false,\\n    });\\n  }\\n};\\n\\nReactDOM.render(\\n  <App />,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>visible</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>Use <code>visible</code> to define Modal's style.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var App = function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, App);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        visible: false\n      }, _this.handleClick = function () {\n        _this.setState({\n          visible: true\n        });\n      }, _this.handleClose = function () {\n        _this.setState({\n          visible: false\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(App, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            _dashkitUi.Button,\n            {\n              onClick: this.handleClick\n            },\n            \"Click\"\n          ),\n          React.createElement(\n            _dashkitUi.Modal,\n            {\n              visible: this.state.visible,\n              title: \"Modal Title\",\n              onClose: this.handleClose,\n              onCancel: this.handleClose,\n              onConfirm: this.handleClose\n            },\n            React.createElement(\n              \"p\",\n              null,\n              \"Contents...\"\n            ),\n            React.createElement(\n              \"p\",\n              null,\n              \"Contents...\"\n            ),\n            React.createElement(\n              \"p\",\n              null,\n              \"Contents...\"\n            )\n          )\n        );\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  ;\n  return React.createElement(App, null);\n},}\n\n/***/ }),\n\n/***/ \"wpgJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nfunction success() {\\n  Modal.success({\\n    title: 'This is a success message',\\n    content: (\\n      <div>\\n        <p>some messages...some messages...</p>\\n        <p>some messages...some messages...</p>\\n      </div>\\n    ),\\n    onConfirm() {\\n      console.log('call onConfirm callback')\\n    },\\n  });\\n}\\n\\nfunction info() {\\n  Modal.info({\\n    title: 'This is a notification message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction error() {\\n  Modal.error({\\n    title: 'This is a error message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction warning() {\\n  Modal.warning({\\n    title: 'This is a warning message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nReactDOM.render(\\n  <div className=\\\"modal-btn\\\">\\n    <Button onClick={success}>Success</Button>\\n    <Button onClick={info}>Info</Button>\\n    <Button onClick={error}>Error</Button>\\n    <Button onClick={warning}>Warning</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"类型\",\"en-US\":\"Type\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  function success() {\n    _dashkitUi.Modal.success({\n      title: 'This is a success message',\n      content: React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        )\n      ),\n      onConfirm: function onConfirm() {\n        console.log('call onConfirm callback');\n      }\n    });\n  }\n\n  function info() {\n    _dashkitUi.Modal.info({\n      title: 'This is a notification message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function error() {\n    _dashkitUi.Modal.error({\n      title: 'This is a error message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function warning() {\n    _dashkitUi.Modal.warning({\n      title: 'This is a warning message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"modal-btn\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: success\n      },\n      \"Success\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: info\n      },\n      \"Info\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: error\n      },\n      \"Error\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: warning\n      },\n      \"Warning\"\n    )\n  );\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/12.1f5a811.js","module.exports = {\n  markdown: \"<h1>Modal</h1>\\n<p>Informs users while preserving the current page state.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>onClick</td>\\n<td><code>click</code> event handler</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/modal/basic.md'), \n'confirm': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/modal/confirm.md'), \n'type': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/modal/type.md')}};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/modal/en-US.md\n// module id = 3Fsn\n// module chunks = 12","module.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nfunction confirm() {\\n  Modal.confirm({\\n    title: 'This is a confirm message',\\n    content: (\\n      <div>\\n        <p>some messages...some messages...</p>\\n        <p>some messages...some messages...</p>\\n      </div>\\n    ),\\n    onConfirm() {\\n      console.log('call onConfirm callback')\\n    },\\n    onCancel() {\\n      console.log('call onCancel callback')\\n    }\\n  });\\n}\\n\\nReactDOM.render(\\n  <Button onClick={confirm}>Confirm</Button>,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"确认\",\"en-US\":\"Confirm\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  function confirm() {\n    _dashkitUi.Modal.confirm({\n      title: 'This is a confirm message',\n      content: React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        )\n      ),\n      onConfirm: function onConfirm() {\n        console.log('call onConfirm callback');\n      },\n      onCancel: function onCancel() {\n        console.log('call onCancel callback');\n      }\n    });\n  }\n\n  return React.createElement(\n    _dashkitUi.Button,\n    {\n      onClick: confirm\n    },\n    \"Confirm\"\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/modal/confirm.md\n// module id = QkGj\n// module chunks = 12 53","module.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nclass App extends React.Component {\\n  state = {\\n    visible: false,\\n  };\\n\\n  render() {\\n    return (\\n      <div>\\n        <Button onClick={this.handleClick}>Click</Button>\\n        <Modal\\n          visible={this.state.visible}\\n          title=\\\"Modal Title\\\"\\n          onClose={this.handleClose}\\n          onCancel={this.handleClose}\\n          onConfirm={this.handleClose}\\n        >\\n          <p>Contents...</p>\\n          <p>Contents...</p>\\n          <p>Contents...</p>\\n        </Modal>\\n      </div>\\n    );\\n  }\\n\\n  handleClick = () => {\\n    this.setState({\\n      visible: true,\\n    });\\n  }\\n\\n  handleClose = () => {\\n    this.setState({\\n      visible: false,\\n    });\\n  }\\n};\\n\\nReactDOM.render(\\n  <App />,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>visible</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>Use <code>visible</code> to define Modal's style.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var App = function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, App);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        visible: false\n      }, _this.handleClick = function () {\n        _this.setState({\n          visible: true\n        });\n      }, _this.handleClose = function () {\n        _this.setState({\n          visible: false\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(App, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(\n          \"div\",\n          null,\n          React.createElement(\n            _dashkitUi.Button,\n            {\n              onClick: this.handleClick\n            },\n            \"Click\"\n          ),\n          React.createElement(\n            _dashkitUi.Modal,\n            {\n              visible: this.state.visible,\n              title: \"Modal Title\",\n              onClose: this.handleClose,\n              onCancel: this.handleClose,\n              onConfirm: this.handleClose\n            },\n            React.createElement(\n              \"p\",\n              null,\n              \"Contents...\"\n            ),\n            React.createElement(\n              \"p\",\n              null,\n              \"Contents...\"\n            ),\n            React.createElement(\n              \"p\",\n              null,\n              \"Contents...\"\n            )\n          )\n        );\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  ;\n  return React.createElement(App, null);\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/modal/basic.md\n// module id = QwC5\n// module chunks = 12 54","module.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nfunction success() {\\n  Modal.success({\\n    title: 'This is a success message',\\n    content: (\\n      <div>\\n        <p>some messages...some messages...</p>\\n        <p>some messages...some messages...</p>\\n      </div>\\n    ),\\n    onConfirm() {\\n      console.log('call onConfirm callback')\\n    },\\n  });\\n}\\n\\nfunction info() {\\n  Modal.info({\\n    title: 'This is a notification message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction error() {\\n  Modal.error({\\n    title: 'This is a error message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction warning() {\\n  Modal.warning({\\n    title: 'This is a warning message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nReactDOM.render(\\n  <div className=\\\"modal-btn\\\">\\n    <Button onClick={success}>Success</Button>\\n    <Button onClick={info}>Info</Button>\\n    <Button onClick={error}>Error</Button>\\n    <Button onClick={warning}>Warning</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"类型\",\"en-US\":\"Type\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  function success() {\n    _dashkitUi.Modal.success({\n      title: 'This is a success message',\n      content: React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        )\n      ),\n      onConfirm: function onConfirm() {\n        console.log('call onConfirm callback');\n      }\n    });\n  }\n\n  function info() {\n    _dashkitUi.Modal.info({\n      title: 'This is a notification message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function error() {\n    _dashkitUi.Modal.error({\n      title: 'This is a error message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function warning() {\n    _dashkitUi.Modal.warning({\n      title: 'This is a warning message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"modal-btn\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: success\n      },\n      \"Success\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: info\n      },\n      \"Info\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: error\n      },\n      \"Error\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: warning\n      },\n      \"Warning\"\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/modal/type.md\n// module id = wpgJ\n// module chunks = 12 52"],"sourceRoot":""}