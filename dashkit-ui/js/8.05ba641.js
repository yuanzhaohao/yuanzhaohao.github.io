webpackJsonp([8,62,63,64,65],{JWst:function(e,t,n){e.exports={code:"import { Input } from 'dashkit-ui';\n\nReactDOM.render(\n  <Input placeholder=\"This is a diabled Input\" disabled={true} />,\n  mountNode\n);\n",meta:{order:2,title:{"zh-CN":"禁用","en-US":"Disabled"},subtitle:{"zh-CN":"<p>使用<code>disabled</code>来决定是否禁用输入框，默认值是<code>false</code>。</p>\n","en-US":"<p>Add the <code>disabled</code> property to determine if the input is disabled.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF"));return e.createElement(t.Input,{placeholder:"This is a diabled Input",disabled:!0})}}},XhOd:function(e,t,n){e.exports={markdown:'<h1>Input</h1>\n<p>Dashkit supports all of Bootstrap\'s default form styling in addition to a handful of new input types and features.</p>\n<div id="demos"></div>\n<h3>API</h3>\n<h4>Input</h4>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n',demos:{basic:n("hsT7"),disabled:n("JWst"),"prefix-sufix":n("du2N"),size:n("pLzr")}}},du2N:function(e,t,n){e.exports={code:'import { Input, Tooltip, Icon } from \'dashkit-ui\';\n\nReactDOM.render(\n  <Input\n    placeholder="Enter your username"\n    prefix="user"\n    suffix="info"\n  />,\n  mountNode\n);\n',meta:{order:3,title:{"zh-CN":"前缀后缀","en-US":"prefix and suffix"},subtitle:{"zh-CN":"<p>使用<code>prefix</code>或者<code>suffix</code>来增加前缀或者后缀。</p>\n","en-US":"<p>Add <code>prefix</code> or <code>suffix</code> icons inside input..</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF"));return e.createElement(t.Input,{placeholder:"Enter your username",prefix:"user",suffix:"info"})}}},hsT7:function(e,t,n){e.exports={code:'import { Input } from \'dashkit-ui\';\nconst inputStyle = {\n  marginRight: 10,\n};\nReactDOM.render(\n  <div>\n    <Input defaultValue="Hello." style={inputStyle} />\n    <Input disabled defaultValue="Hello." />\n  </div>,\n  mountNode\n);\n',meta:{order:0,title:{"zh-CN":"基本","en-US":"Basic"},subtitle:{"zh-CN":"<p>基本用法。</p>\n","en-US":"<p>Basic usage.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),i={marginRight:10};return e.createElement("div",null,e.createElement(t.Input,{defaultValue:"Hello.",style:i}),e.createElement(t.Input,{disabled:!0,defaultValue:"Hello."}))}}},pLzr:function(e,t,n){e.exports={code:'import { Input } from \'dashkit-ui\';\nconst inputStyle = {\n  marginRight: 10,\n  marginBottom: 10,\n};\n\nReactDOM.render(\n  <div className="input-list">\n    <Input placeholder="large size" size="large" style={inputStyle} />\n    <Input placeholder="default size" size="default" style={inputStyle} />\n    <Input placeholder="small size" size="small" style={inputStyle} />\n  </div>,\n  mountNode\n);\n',meta:{order:1,title:{"zh-CN":"尺寸","en-US":"Size"},subtitle:{"zh-CN":"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\n","en-US":"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),i={marginRight:10,marginBottom:10};return e.createElement("div",{className:"input-list"},e.createElement(t.Input,{placeholder:"large size",size:"large",style:i}),e.createElement(t.Input,{placeholder:"default size",size:"default",style:i}),e.createElement(t.Input,{placeholder:"small size",size:"small",style:i}))}}}});
//# sourceMappingURL=8.05ba641.js.map