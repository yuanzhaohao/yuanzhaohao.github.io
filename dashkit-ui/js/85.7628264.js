webpackJsonp([85],{"+M4p":function(e,n,t){e.exports={code:"import { Checkbox } from 'dashkit-ui';\n\nconst cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n\nclass App extends React.Component {\n  state = {\n    checkedCities: cityOptions.slice(0, 2),\n    indeterminate: true,\n    checkAll: false,\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"checkbox-checkall\">\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n        <br />\n        <Checkbox.Group\n          options={cityOptions}\n          value={this.state.checkedCities}\n          onChange={this.onGroupChange}\n        >\n          {cityOptions.map((city, index) =>\n            <Checkbox key={index} value={city}>{city}</Checkbox>\n          )}\n        </Checkbox.Group>\n      </div>\n    );\n  }\n\n  onGroupChange = (value) => {\n    const checkedCount = value.length;\n    const citiesLength = cityOptions.length;\n    console.log(value);\n\n    this.setState({\n      checkedCities: value,\n      indeterminate: checkedCount > 0 && checkedCount < citiesLength,\n      checkAll: checkedCount === citiesLength,\n    });\n  }\n\n  onCheckAllChange = (e) => {\n    const { checked } = e.target;\n    const checkedCities = checked ? cityOptions : [];\n\n    this.setState({\n      checkedCities,\n      indeterminate: false,\n      checkAll: checked,\n    });\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n",meta:{order:3,title:{"zh-CN":"多选框组","en-US":"Checkbox Group"},subtitle:{"zh-CN":"<p>适用于多个勾选框绑定到同一个数组的情景，通过是否勾选来表示这一组选项中选中的项。</p>\n","en-US":"<p>It is used for multiple checkboxes which are bound in one group, and indicates whether one option is selected by checking if it is checked.</p>\n"},__content:""},preview:function(){function e(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function n(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function c(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var i=t("GiK3"),o=(t("O27J"),function(){function e(e,n){for(var t=0;t<n.length;t++){var c=n[t];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}return function(n,t,c){return t&&e(n.prototype,t),c&&e(n,c),n}}()),r=t("qMEF"),a=["Shanghai","Beijing","Guangzhou","Shenzhen"],h=function(t){function h(){var t,c,i,o;e(this,h);for(var r=arguments.length,l=Array(r),s=0;s<r;s++)l[s]=arguments[s];return c=i=n(this,(t=h.__proto__||Object.getPrototypeOf(h)).call.apply(t,[this].concat(l))),i.state={checkedCities:a.slice(0,2),indeterminate:!0,checkAll:!1},i.onGroupChange=function(e){var n=e.length,t=a.length;console.log(e),i.setState({checkedCities:e,indeterminate:n>0&&n<t,checkAll:n===t})},i.onCheckAllChange=function(e){var n=e.target.checked,t=n?a:[];i.setState({checkedCities:t,indeterminate:!1,checkAll:n})},o=c,n(i,o)}return c(h,t),o(h,[{key:"render",value:function(){return i.createElement("div",null,i.createElement("div",{className:"checkbox-checkall"},i.createElement(r.Checkbox,{indeterminate:this.state.indeterminate,onChange:this.onCheckAllChange,checked:this.state.checkAll},"Check all")),i.createElement("br",null),i.createElement(r.Checkbox.Group,{options:a,value:this.state.checkedCities,onChange:this.onGroupChange},a.map(function(e,n){return i.createElement(r.Checkbox,{key:n,value:e},e)})))}}]),h}(i.Component);return i.createElement(h,null)}}}});
//# sourceMappingURL=85.7628264.js.map