{"version":3,"sources":["webpack:///js/9.c87509b.js","webpack:///./docs/select/en-US.md","webpack:///./docs/select/filterOption.md","webpack:///./docs/select/group.md","webpack:///./docs/select/basic.md"],"names":["webpackJsonp","Loax","module","exports","__webpack_require__","markdown","demos","basic","filterOption","group","e2Vx","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","onChange","value","console","log","inputValue","itemValue","toLowerCase","indexOf","React","_dashkitUi","Option","Select","OptionGroup","data","stations","Circle Line","East West Line","Demo","createElement","map","color","key","disabled","style","marginLeft","Object","keys","label","station","hN8L","xR03"],"mappings":"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","file":"js/9.c87509b.js","sourcesContent":["webpackJsonp([9,36,37,38],{\n\n/***/ \"Loax\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  markdown: \"<h1>Select</h1>\\n<p>Select component to select value from options.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': __webpack_require__(\"xR03\"), \n'filterOption': __webpack_require__(\"e2Vx\"), \n'group': __webpack_require__(\"hN8L\")}};\n\n/***/ }),\n\n/***/ \"e2Vx\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Select } from 'dashkit-ui';\\nconst { Option, OptionGroup } = Select;\\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1'];\\nconst stations = {\\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\\n  'East West Line': ['Chinese Garden', 'Jurong East'],\\n};\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nfunction filterOption(inputValue, itemValue) {\\n  return itemValue.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\\n}\\nconst Demo = () => (\\n  <div>\\n    <Select onChange={onChange}>\\n      {data.map(color =>\\n        <Option key={color} value={color} filterOption={filterOption}>{color}</Option>\\n      )}\\n      <Option value=\\\"disabled\\\" disabled filterOption={filterOption}>disabled</Option>\\n    </Select>\\n    <Select onChange={onChange} style={{ marginLeft: 10 }}>\\n      {Object.keys(stations).map(key =>\\n        <OptionGroup key={key} label={key}>\\n          {stations[key].map(station =>\\n            <Option key={station} value={station} filterOption={filterOption}>{station}</Option>\\n          )}\\n        </OptionGroup>\\n      )}\\n    </Select>\\n  </div>\\n);\\nReactDOM.render(\\n  <Demo />,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"选项\",\"en-US\":\"FilterOption\"},\"subtitle\":{\"zh-CN\":\"<p>处理选项用法。</p>\\n\",\"en-US\":\"<p>Use <code>filterOption</code> to flilter options.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var Option = _dashkitUi.Select.Option,\n      OptionGroup = _dashkitUi.Select.OptionGroup;\n  var data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1'];\n  var stations = {\n    'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n    'East West Line': ['Chinese Garden', 'Jurong East']\n  };\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  function filterOption(inputValue, itemValue) {\n    return itemValue.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\n  }\n\n  var Demo = function Demo() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange\n        },\n        data.map(function (color) {\n          return React.createElement(\n            Option,\n            {\n              key: color,\n              value: color,\n              filterOption: filterOption\n            },\n            color\n          );\n        }),\n        React.createElement(\n          Option,\n          {\n            value: \"disabled\",\n            disabled: true,\n            filterOption: filterOption\n          },\n          \"disabled\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange,\n          style: {\n            marginLeft: 10\n          }\n        },\n        Object.keys(stations).map(function (key) {\n          return React.createElement(\n            OptionGroup,\n            {\n              key: key,\n              label: key\n            },\n            stations[key].map(function (station) {\n              return React.createElement(\n                Option,\n                {\n                  key: station,\n                  value: station,\n                  filterOption: filterOption\n                },\n                station\n              );\n            })\n          );\n        })\n      )\n    );\n  };\n\n  return React.createElement(Demo, null);\n},}\n\n/***/ }),\n\n/***/ \"hN8L\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Select } from 'dashkit-ui';\\nconst { Option, OptionGroup } = Select;\\nconst data = {\\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\\n  'East West Line': ['Chinese Garden', 'Jurong East'],\\n};\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nReactDOM.render(\\n  <Select onChange={onChange}>\\n    {Object.keys(data).map(key =>\\n      <OptionGroup key={key} label={key}>\\n        {data[key].map(station =>\\n          <Option key={station} value={station}>{station}</Option>\\n        )}\\n      </OptionGroup>\\n    )}\\n  </Select>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"组合\",\"en-US\":\"Group\"},\"subtitle\":{\"zh-CN\":\"<p>组合用法。</p>\\n\",\"en-US\":\"<p>Using <code>OptionGroup</code> to group the options.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var Option = _dashkitUi.Select.Option,\n      OptionGroup = _dashkitUi.Select.OptionGroup;\n  var data = {\n    'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n    'East West Line': ['Chinese Garden', 'Jurong East']\n  };\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  return React.createElement(\n    _dashkitUi.Select,\n    {\n      onChange: onChange\n    },\n    Object.keys(data).map(function (key) {\n      return React.createElement(\n        OptionGroup,\n        {\n          key: key,\n          label: key\n        },\n        data[key].map(function (station) {\n          return React.createElement(\n            Option,\n            {\n              key: station,\n              value: station\n            },\n            station\n          );\n        })\n      );\n    })\n  );\n},}\n\n/***/ }),\n\n/***/ \"xR03\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Select } from 'dashkit-ui';\\nconst { Option } = Select;\\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1']\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nconst Demo = () => (\\n  <div>\\n    <Select onChange={onChange}>\\n      {data.map(color =>\\n        <Option key={color} value={color}>{color}</Option>\\n      )}\\n      <Option value=\\\"disabled\\\" disabled>disabled</Option>\\n    </Select>\\n    <Select onChange={onChange} disabled style={{ marginLeft: 10 }}>\\n      {data.map(color =>\\n        <Option key={color} value={color}>{color}</Option>\\n      )}\\n    </Select>\\n  </div>\\n);\\n\\nReactDOM.render(\\n  <Demo />,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法。</p>\\n\",\"en-US\":\"<p>Select component to select value from options.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var Option = _dashkitUi.Select.Option;\n  var data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1'];\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  var Demo = function Demo() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange\n        },\n        data.map(function (color) {\n          return React.createElement(\n            Option,\n            {\n              key: color,\n              value: color\n            },\n            color\n          );\n        }),\n        React.createElement(\n          Option,\n          {\n            value: \"disabled\",\n            disabled: true\n          },\n          \"disabled\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange,\n          disabled: true,\n          style: {\n            marginLeft: 10\n          }\n        },\n        data.map(function (color) {\n          return React.createElement(\n            Option,\n            {\n              key: color,\n              value: color\n            },\n            color\n          );\n        })\n      )\n    );\n  };\n\n  return React.createElement(Demo, null);\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/9.c87509b.js","module.exports = {\n  markdown: \"<h1>Select</h1>\\n<p>Select component to select value from options.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/select/basic.md'), \n'filterOption': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/select/filterOption.md'), \n'group': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/select/group.md')}};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/select/en-US.md\n// module id = Loax\n// module chunks = 9","module.exports = {code: \"import { Select } from 'dashkit-ui';\\nconst { Option, OptionGroup } = Select;\\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1'];\\nconst stations = {\\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\\n  'East West Line': ['Chinese Garden', 'Jurong East'],\\n};\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nfunction filterOption(inputValue, itemValue) {\\n  return itemValue.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\\n}\\nconst Demo = () => (\\n  <div>\\n    <Select onChange={onChange}>\\n      {data.map(color =>\\n        <Option key={color} value={color} filterOption={filterOption}>{color}</Option>\\n      )}\\n      <Option value=\\\"disabled\\\" disabled filterOption={filterOption}>disabled</Option>\\n    </Select>\\n    <Select onChange={onChange} style={{ marginLeft: 10 }}>\\n      {Object.keys(stations).map(key =>\\n        <OptionGroup key={key} label={key}>\\n          {stations[key].map(station =>\\n            <Option key={station} value={station} filterOption={filterOption}>{station}</Option>\\n          )}\\n        </OptionGroup>\\n      )}\\n    </Select>\\n  </div>\\n);\\nReactDOM.render(\\n  <Demo />,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"选项\",\"en-US\":\"FilterOption\"},\"subtitle\":{\"zh-CN\":\"<p>处理选项用法。</p>\\n\",\"en-US\":\"<p>Use <code>filterOption</code> to flilter options.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var Option = _dashkitUi.Select.Option,\n      OptionGroup = _dashkitUi.Select.OptionGroup;\n  var data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1'];\n  var stations = {\n    'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n    'East West Line': ['Chinese Garden', 'Jurong East']\n  };\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  function filterOption(inputValue, itemValue) {\n    return itemValue.toLowerCase().indexOf(inputValue.toLowerCase()) !== -1;\n  }\n\n  var Demo = function Demo() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange\n        },\n        data.map(function (color) {\n          return React.createElement(\n            Option,\n            {\n              key: color,\n              value: color,\n              filterOption: filterOption\n            },\n            color\n          );\n        }),\n        React.createElement(\n          Option,\n          {\n            value: \"disabled\",\n            disabled: true,\n            filterOption: filterOption\n          },\n          \"disabled\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange,\n          style: {\n            marginLeft: 10\n          }\n        },\n        Object.keys(stations).map(function (key) {\n          return React.createElement(\n            OptionGroup,\n            {\n              key: key,\n              label: key\n            },\n            stations[key].map(function (station) {\n              return React.createElement(\n                Option,\n                {\n                  key: station,\n                  value: station,\n                  filterOption: filterOption\n                },\n                station\n              );\n            })\n          );\n        })\n      )\n    );\n  };\n\n  return React.createElement(Demo, null);\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/select/filterOption.md\n// module id = e2Vx\n// module chunks = 9 37","module.exports = {code: \"import { Select } from 'dashkit-ui';\\nconst { Option, OptionGroup } = Select;\\nconst data = {\\n  'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\\n  'East West Line': ['Chinese Garden', 'Jurong East'],\\n};\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nReactDOM.render(\\n  <Select onChange={onChange}>\\n    {Object.keys(data).map(key =>\\n      <OptionGroup key={key} label={key}>\\n        {data[key].map(station =>\\n          <Option key={station} value={station}>{station}</Option>\\n        )}\\n      </OptionGroup>\\n    )}\\n  </Select>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"组合\",\"en-US\":\"Group\"},\"subtitle\":{\"zh-CN\":\"<p>组合用法。</p>\\n\",\"en-US\":\"<p>Using <code>OptionGroup</code> to group the options.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var Option = _dashkitUi.Select.Option,\n      OptionGroup = _dashkitUi.Select.OptionGroup;\n  var data = {\n    'Circle Line': ['Buona Vista', 'Kent Ridge', 'Bishan', 'Dhoby Ghaut'],\n    'East West Line': ['Chinese Garden', 'Jurong East']\n  };\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  return React.createElement(\n    _dashkitUi.Select,\n    {\n      onChange: onChange\n    },\n    Object.keys(data).map(function (key) {\n      return React.createElement(\n        OptionGroup,\n        {\n          key: key,\n          label: key\n        },\n        data[key].map(function (station) {\n          return React.createElement(\n            Option,\n            {\n              key: station,\n              value: station\n            },\n            station\n          );\n        })\n      );\n    })\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/select/group.md\n// module id = hN8L\n// module chunks = 9 36","module.exports = {code: \"import { Select } from 'dashkit-ui';\\nconst { Option } = Select;\\nconst data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1']\\n\\nfunction onChange(value) {\\n  console.log(`value: ${value}`);\\n}\\n\\nconst Demo = () => (\\n  <div>\\n    <Select onChange={onChange}>\\n      {data.map(color =>\\n        <Option key={color} value={color}>{color}</Option>\\n      )}\\n      <Option value=\\\"disabled\\\" disabled>disabled</Option>\\n    </Select>\\n    <Select onChange={onChange} disabled style={{ marginLeft: 10 }}>\\n      {data.map(color =>\\n        <Option key={color} value={color}>{color}</Option>\\n      )}\\n    </Select>\\n  </div>\\n);\\n\\nReactDOM.render(\\n  <Demo />,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法。</p>\\n\",\"en-US\":\"<p>Select component to select value from options.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var Option = _dashkitUi.Select.Option;\n  var data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'red1', 'orange1', 'yellow1', 'green1', 'cyan1', 'blue1', 'violet1'];\n\n  function onChange(value) {\n    console.log(\"value: \" + value);\n  }\n\n  var Demo = function Demo() {\n    return React.createElement(\n      \"div\",\n      null,\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange\n        },\n        data.map(function (color) {\n          return React.createElement(\n            Option,\n            {\n              key: color,\n              value: color\n            },\n            color\n          );\n        }),\n        React.createElement(\n          Option,\n          {\n            value: \"disabled\",\n            disabled: true\n          },\n          \"disabled\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Select,\n        {\n          onChange: onChange,\n          disabled: true,\n          style: {\n            marginLeft: 10\n          }\n        },\n        data.map(function (color) {\n          return React.createElement(\n            Option,\n            {\n              key: color,\n              value: color\n            },\n            color\n          );\n        })\n      )\n    );\n  };\n\n  return React.createElement(Demo, null);\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/select/basic.md\n// module id = xR03\n// module chunks = 9 38"],"sourceRoot":""}