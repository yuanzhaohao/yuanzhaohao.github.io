webpackJsonp([15,93,94,95],{"0sm6":function(t,e,n){t.exports={code:'import { Button } from \'dashkit-ui\';\n\nReactDOM.render(\n  <div className="button-list">\n    <Button size="large">Large</Button>\n    <Button size="default">Default</Button>\n    <Button size="small">Small</Button>\n    <Button type="primary" size="large" round icon="search">Large</Button>\n    <Button type="primary" size="default" round icon="search">Default</Button>\n    <Button type="primary" size="small" round icon="search">Small</Button>\n  </div>,\n  mountNode\n);\n',meta:{order:1,title:{"zh-CN":"尺寸","en-US":"Sizes"},subtitle:{"zh-CN":"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\n","en-US":"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\n"},__content:""},preview:function(){var t=n("GiK3"),e=(n("O27J"),n("qMEF"));return t.createElement("div",{className:"button-list"},t.createElement(e.Button,{size:"large"},"Large"),t.createElement(e.Button,{size:"default"},"Default"),t.createElement(e.Button,{size:"small"},"Small"),t.createElement(e.Button,{type:"primary",size:"large",round:!0,icon:"search"},"Large"),t.createElement(e.Button,{type:"primary",size:"default",round:!0,icon:"search"},"Default"),t.createElement(e.Button,{type:"primary",size:"small",round:!0,icon:"search"},"Small"))}}},JoXn:function(t,e,n){t.exports={markdown:"<h1>Button</h1>\n<p>Buttons for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\n<div id=\"demos\"></div>\n<h2>API</h2>\n<h3>Button</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>size</td>\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>type</td>\n<td>button type, can be set to <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code> <code>info</code> <code>link</code> or ommited</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>outline</td>\n<td>determine whether it's a outline button</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>round</td>\n<td>determine whether it's a round button</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>disable the button</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>determine whether it's loading</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>button icon, see <code>Icon</code> component</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td><code>click</code> event handler</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Button.Group</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>Default selected value</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>size</td>\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td><code>change</code> event handler</td>\n<td><code>Function(e: event)</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n",demos:{basic:n("qHnS"),disabled:n("Kiv3"),size:n("0sm6")}}},Kiv3:function(t,e,n){t.exports={code:'import { Button } from \'dashkit-ui\';\n\nReactDOM.render(\n  <div className="button-wrapper">\n    <div className="button-list">\n      <Button>Default</Button>\n      <Button disabled={true}>Default Disabled</Button>\n    </div>\n    <div className="button-list">\n      <Button type="primary">Primary</Button>\n      <Button type="primary" disabled>Default Disabled</Button>\n    </div>\n    <div className="button-list">\n      <Button type="success">Success</Button>\n      <Button type="success" disabled>Success Disabled</Button>\n    </div>\n    <div className="button-list">\n      <Button type="warning">Warning</Button>\n      <Button type="warning" disabled>Warning Disabled</Button>\n    </div>\n    <div className="button-list">\n      <Button type="danger">Danger</Button>\n      <Button type="danger" disabled>Danger Disabled</Button>\n    </div>\n    <div className="button-list">\n      <Button type="info">Info</Button>\n      <Button type="info" disabled>Info Disabled</Button>\n    </div>\n    <div className="button-list">\n      <Button type="link">Link</Button>\n      <Button type="link" disabled>Link Disabled</Button>\n    </div>\n  </div>,\n  mountNode\n);\n',meta:{order:2,title:{"zh-CN":"禁用","en-US":"Disabled"},subtitle:{"zh-CN":"<p>使用<code>disabled</code>来决定是否禁用按钮，默认值是<code>false</code>。</p>\n","en-US":"<p>Add the <code>disabled</code> property to determine if the button is disabled.</p>\n"},__content:""},preview:function(){var t=n("GiK3"),e=(n("O27J"),n("qMEF"));return t.createElement("div",{className:"button-wrapper"},t.createElement("div",{className:"button-list"},t.createElement(e.Button,null,"Default"),t.createElement(e.Button,{disabled:!0},"Default Disabled")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{type:"primary"},"Primary"),t.createElement(e.Button,{type:"primary",disabled:!0},"Default Disabled")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{type:"success"},"Success"),t.createElement(e.Button,{type:"success",disabled:!0},"Success Disabled")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{type:"warning"},"Warning"),t.createElement(e.Button,{type:"warning",disabled:!0},"Warning Disabled")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{type:"danger"},"Danger"),t.createElement(e.Button,{type:"danger",disabled:!0},"Danger Disabled")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{type:"info"},"Info"),t.createElement(e.Button,{type:"info",disabled:!0},"Info Disabled")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{type:"link"},"Link"),t.createElement(e.Button,{type:"link",disabled:!0},"Link Disabled")))}}},qHnS:function(t,e,n){t.exports={code:'import { Button } from \'dashkit-ui\';\n\nReactDOM.render(\n  <div className="button-wrapper">\n    <div className="button-list">\n      <Button>Default</Button>\n      <Button type="primary">Primary</Button>\n      <Button type="success">Success</Button>\n      <Button type="warning">Warning</Button>\n      <Button type="danger">Danger</Button>\n      <Button type="info">Info</Button>\n      <Button type="link">Link</Button>\n    </div>\n\n    <div className="button-list">\n      <Button outline>Outline</Button>\n      <Button type="primary" outline>Primary</Button>\n      <Button type="success" outline>Success</Button>\n      <Button type="warning" outline>Warning</Button>\n      <Button type="danger" outline>Danger</Button>\n      <Button type="info" outline>Info</Button>\n    </div>\n\n    <div className="button-list">\n      <Button round>Round</Button>\n      <Button type="primary" round>Primary</Button>\n      <Button type="success" round>Success</Button>\n      <Button type="warning" round>Warning</Button>\n      <Button type="danger" round>Danger</Button>\n      <Button type="info" round>Info</Button>\n    </div>\n\n    <div className="button-list">\n      <Button round icon="search" />\n      <Button round type="primary" icon="download" />\n      <Button round type="success" icon="check-circle" />\n      <Button round type="warning" icon="x-circle" />\n      <Button round type="danger" icon="alert-circle" />\n      <Button round type="info" icon="info" />\n    </div>\n  </div>,\n  mountNode\n);\n',meta:{order:0,title:{"zh-CN":"基本","en-US":"Basic"},subtitle:{"zh-CN":"<p>基本用法，可以用<code>type</code>、<code>outline</code>、 <code>round</code> 和 <code>circle</code>来定义button的样式。</p>\n","en-US":"<p>Use <code>type</code>, <code>outline</code>, <code>round</code> and <code>circle</code> to define Button's style.</p>\n"},__content:""},preview:function(){var t=n("GiK3"),e=(n("O27J"),n("qMEF"));return t.createElement("div",{className:"button-wrapper"},t.createElement("div",{className:"button-list"},t.createElement(e.Button,null,"Default"),t.createElement(e.Button,{type:"primary"},"Primary"),t.createElement(e.Button,{type:"success"},"Success"),t.createElement(e.Button,{type:"warning"},"Warning"),t.createElement(e.Button,{type:"danger"},"Danger"),t.createElement(e.Button,{type:"info"},"Info"),t.createElement(e.Button,{type:"link"},"Link")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{outline:!0},"Outline"),t.createElement(e.Button,{type:"primary",outline:!0},"Primary"),t.createElement(e.Button,{type:"success",outline:!0},"Success"),t.createElement(e.Button,{type:"warning",outline:!0},"Warning"),t.createElement(e.Button,{type:"danger",outline:!0},"Danger"),t.createElement(e.Button,{type:"info",outline:!0},"Info")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{round:!0},"Round"),t.createElement(e.Button,{type:"primary",round:!0},"Primary"),t.createElement(e.Button,{type:"success",round:!0},"Success"),t.createElement(e.Button,{type:"warning",round:!0},"Warning"),t.createElement(e.Button,{type:"danger",round:!0},"Danger"),t.createElement(e.Button,{type:"info",round:!0},"Info")),t.createElement("div",{className:"button-list"},t.createElement(e.Button,{round:!0,icon:"search"}),t.createElement(e.Button,{round:!0,type:"primary",icon:"download"}),t.createElement(e.Button,{round:!0,type:"success",icon:"check-circle"}),t.createElement(e.Button,{round:!0,type:"warning",icon:"x-circle"}),t.createElement(e.Button,{round:!0,type:"danger",icon:"alert-circle"}),t.createElement(e.Button,{round:!0,type:"info",icon:"info"})))}}}});
//# sourceMappingURL=15.3c2be45.js.map