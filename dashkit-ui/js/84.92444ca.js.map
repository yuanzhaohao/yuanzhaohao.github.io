{"version":3,"sources":["webpack:///js/84.92444ca.js","webpack:///./docs/checkbox/min-max.md"],"names":["webpackJsonp","lCT9","module","exports","__webpack_require__","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_dashkitUi","cityOptions","App","_React$Component","_ref","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","state","checkedCities","slice","indeterminate","checkAll","onGroupChange","checkedCount","citiesLength","setState","createElement","Checkbox","Group","options","onChange","max","min","map","city","index","Component"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjCF,EAAAC,SAAkBE,KAAA,o9BAAs9BC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,QAAAC,QAAA,qBAA4CC,UAAaF,QAAA,2DAAAC,QAAA,oHAA8LE,UAAA,IAAgBC,QAAA,WAS7wC,QAAAC,GAAAC,EAAAC,GAAmD,KAAAD,YAAAC,IAA0C,SAAAC,WAAA,qCAE7F,QAAAC,GAAAC,EAAAC,GAAmD,IAAAD,EAAa,SAAAE,gBAAA,4DAAyF,QAAAD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAD,EAAAC,EAEzJ,QAAAE,GAAAC,EAAAC,GAA4C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAP,WAAA,iEAAAO,GAAuGD,GAAAE,UAAAC,OAAAC,OAAAH,KAAAC,WAAyEG,aAAeC,MAAAN,EAAAO,YAAA,EAAAC,UAAA,EAAAC,cAAA,KAA6ER,IAAAE,OAAAO,eAAAP,OAAAO,eAAAV,EAAAC,GAAAD,EAAAW,UAAAV,GAZvX,GAAAW,GAAc/B,EAAQ,QAItBgC,GAFiBhC,EAAQ,QAEzB,WAAkC,QAAAiC,GAAAC,EAAAC,GAA2C,OAAAC,GAAA,EAAgBA,EAAAD,EAAAE,OAAkBD,IAAA,CAAO,GAAAE,GAAAH,EAAAC,EAA2BE,GAAAZ,WAAAY,EAAAZ,aAAA,EAAwDY,EAAAV,cAAA,EAAgC,SAAAU,OAAAX,UAAA,GAAuDL,OAAAiB,eAAAL,EAAAI,EAAAE,IAAAF,IAA+D,gBAAA1B,EAAA6B,EAAAC,GAA2L,MAAlID,IAAAR,EAAArB,EAAAS,UAAAoB,GAAqEC,GAAAT,EAAArB,EAAA8B,GAA6D9B,OAE1hB+B,EAAmB3C,EAAQ,QAQ3B4C,GAAA,6CAEAC,EAAA,SAAAC,GAGA,QAAAD,KACA,GAAAE,GAEAC,EAAAC,EAAAC,CAEAxC,GAAAyC,KAAAN,EAEA,QAAAO,GAAAC,UAAAhB,OAAAiB,EAAAC,MAAAH,GAAAI,EAAA,EAAqEA,EAAAJ,EAAaI,IAClFF,EAAAE,GAAAH,UAAAG,EAGA,OAAAR,GAAAC,EAAAnC,EAAAqC,MAAAJ,EAAAF,EAAAf,WAAAR,OAAAmC,eAAAZ,IAAA7B,KAAA0C,MAAAX,GAAAI,MAAAQ,OAAAL,KAAAL,EAAAW,OACAC,cAAAjB,EAAAkB,MAAA,KACAC,eAAA,EACAC,UAAA,GACOf,EAAAgB,cAAA,SAAAxC,GACP,GAAAyC,GAAAzC,EAAAY,OACA8B,EAAAvB,EAAAP,MAEAY,GAAAmB,UACAP,cAAApC,EACAsC,cAAAG,EAAA,GAAAA,EAAAC,EACAH,SAAAE,IAAAC,KAXAjB,EAaOF,EAAAlC,EAAAmC,EAAAC,GA6BP,MAvDAhC,GAAA2B,EAAAC,GA6BAd,EAAAa,IACAL,IAAA,SACAf,MAAA,WACA,MAAAM,GAAAsC,cACA1B,EAAA2B,SAAAC,OAEAC,QAAA5B,EACAnB,MAAA0B,KAAAS,MAAAC,cACAY,SAAAtB,KAAAc,cACAS,IAAA,EACAC,IAAA,GAEA/B,EAAAgC,IAAA,SAAAC,EAAAC,GACA,MAAA/C,GAAAsC,cACA1B,EAAA2B,UAEA9B,IAAAsC,EACArD,MAAAoD,GAEAA,UAOAhC,GACGd,EAAAgD,UAEH,OAAAhD,GAAAsC,cAAAxB,EAAA","file":"js/84.92444ca.js","sourcesContent":["webpackJsonp([84],{\n\n/***/ \"lCT9\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Checkbox } from 'dashkit-ui';\\n\\nconst cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\\n\\nclass App extends React.Component {\\n  state = {\\n    checkedCities: cityOptions.slice(0, 2),\\n    indeterminate: true,\\n    checkAll: false,\\n  };\\n\\n  render() {\\n    return (\\n      <Checkbox.Group\\n        options={cityOptions}\\n        value={this.state.checkedCities}\\n        onChange={this.onGroupChange}\\n        max={2}\\n        min={1}\\n      >\\n        {cityOptions.map((city, index) =>\\n          <Checkbox key={index} value={city}>{city}</Checkbox>\\n        )}\\n      </Checkbox.Group>\\n    );\\n  }\\n\\n  onGroupChange = (value) => {\\n    const checkedCount = value.length;\\n    const citiesLength = cityOptions.length;\\n\\n    this.setState({\\n      checkedCities: value,\\n      indeterminate: checkedCount > 0 && checkedCount < citiesLength,\\n      checkAll: checkedCount === citiesLength,\\n    });\\n  }\\n}\\n\\nReactDOM.render(<App />, mountNode);\\n\",meta: {\"order\":4,\"title\":{\"zh-CN\":\"数量的限制\",\"en-US\":\"Minimum / Maximum\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>min</code>和<code>max</code>能实现最多以及最少选项。</p>\\n\",\"en-US\":\"<p>The <code>min</code> and <code>max</code> properties can help you to limit the number of checked items.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n\n  var App = function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, App);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        checkedCities: cityOptions.slice(0, 2),\n        indeterminate: true,\n        checkAll: false\n      }, _this.onGroupChange = function (value) {\n        var checkedCount = value.length;\n        var citiesLength = cityOptions.length;\n\n        _this.setState({\n          checkedCities: value,\n          indeterminate: checkedCount > 0 && checkedCount < citiesLength,\n          checkAll: checkedCount === citiesLength\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(App, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(\n          _dashkitUi.Checkbox.Group,\n          {\n            options: cityOptions,\n            value: this.state.checkedCities,\n            onChange: this.onGroupChange,\n            max: 2,\n            min: 1\n          },\n          cityOptions.map(function (city, index) {\n            return React.createElement(\n              _dashkitUi.Checkbox,\n              {\n                key: index,\n                value: city\n              },\n              city\n            );\n          })\n        );\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  return React.createElement(App, null);\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/84.92444ca.js","module.exports = {code: \"import { Checkbox } from 'dashkit-ui';\\n\\nconst cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\\n\\nclass App extends React.Component {\\n  state = {\\n    checkedCities: cityOptions.slice(0, 2),\\n    indeterminate: true,\\n    checkAll: false,\\n  };\\n\\n  render() {\\n    return (\\n      <Checkbox.Group\\n        options={cityOptions}\\n        value={this.state.checkedCities}\\n        onChange={this.onGroupChange}\\n        max={2}\\n        min={1}\\n      >\\n        {cityOptions.map((city, index) =>\\n          <Checkbox key={index} value={city}>{city}</Checkbox>\\n        )}\\n      </Checkbox.Group>\\n    );\\n  }\\n\\n  onGroupChange = (value) => {\\n    const checkedCount = value.length;\\n    const citiesLength = cityOptions.length;\\n\\n    this.setState({\\n      checkedCities: value,\\n      indeterminate: checkedCount > 0 && checkedCount < citiesLength,\\n      checkAll: checkedCount === citiesLength,\\n    });\\n  }\\n}\\n\\nReactDOM.render(<App />, mountNode);\\n\",meta: {\"order\":4,\"title\":{\"zh-CN\":\"数量的限制\",\"en-US\":\"Minimum / Maximum\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>min</code>和<code>max</code>能实现最多以及最少选项。</p>\\n\",\"en-US\":\"<p>The <code>min</code> and <code>max</code> properties can help you to limit the number of checked items.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n\n  var App = function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, App);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        checkedCities: cityOptions.slice(0, 2),\n        indeterminate: true,\n        checkAll: false\n      }, _this.onGroupChange = function (value) {\n        var checkedCount = value.length;\n        var citiesLength = cityOptions.length;\n\n        _this.setState({\n          checkedCities: value,\n          indeterminate: checkedCount > 0 && checkedCount < citiesLength,\n          checkAll: checkedCount === citiesLength\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(App, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(\n          _dashkitUi.Checkbox.Group,\n          {\n            options: cityOptions,\n            value: this.state.checkedCities,\n            onChange: this.onGroupChange,\n            max: 2,\n            min: 1\n          },\n          cityOptions.map(function (city, index) {\n            return React.createElement(\n              _dashkitUi.Checkbox,\n              {\n                key: index,\n                value: city\n              },\n              city\n            );\n          })\n        );\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  return React.createElement(App, null);\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/checkbox/min-max.md\n// module id = lCT9\n// module chunks = 2 84"],"sourceRoot":""}