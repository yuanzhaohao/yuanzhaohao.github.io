{"version":3,"sources":["webpack:///js/13.c2161b1.js","webpack:///./docs/message/en-US.md","webpack:///./docs/message/duration.md","webpack:///./docs/message/basic.md","webpack:///./docs/message/callback.md"],"names":["webpackJsonp","BptB","module","exports","__webpack_require__","markdown","demos","basic","callback","duration","Tl6M","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","React","_dashkitUi","show","Message","createElement","Button","onClick","jt2I","success","error","info","warning","className","vYRd"],"mappings":"AAAAA,cAAc,GAAG,GAAG,GAAG,KAEjBC,KACA,SAAUC,EAAQC,EAASC,GCHjCF,EAAAC,SACAE,SAAA,qqBACAC,OAASC,MAASH,EAAQ,QAC1BI,SAAYJ,EAAQ,QACpBK,SAAYL,EAAQ,WDSdM,KACA,SAAUR,EAAQC,EAASC,GEdjCF,EAAAC,SAAkBQ,KAAA,qOAAuOC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,YAAgCC,UAAaF,QAAA,6CAAAC,QAAA,+DAA2HE,UAAA,IAAgBC,QAAA,WAC/c,GAAAC,GAAchB,EAAQ,QAItBiB,GAFiBjB,EAAQ,QAENA,EAAQ,SAE3BkB,EAAA,WACAD,EAAAE,QAAAD,KAAA,iCAGA,OAAAF,GAAAI,cACAH,EAAAI,QAEAC,QAAAJ,GAEA,iCFsBMK,KACA,SAAUzB,EAAQC,EAASC,GGvCjCF,EAAAC,SAAkBQ,KAAA,8uBAAgvBC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,SAA6BC,UAAaF,QAAA,uHAAAC,QAAA,iJAAuRE,UAAA,IAAgBC,QAAA,WACjnC,GAAAC,GAAchB,EAAQ,QAItBiB,GAFiBjB,EAAQ,QAENA,EAAQ,SAE3BkB,EAAA,WACAD,EAAAE,QAAAD,KAAA,8BAGAM,EAAA,WACAP,EAAAE,QAAAK,QAAA,iCAGAC,EAAA,WACAR,EAAAE,QAAAM,MAAA,+BAGAC,EAAA,WACAT,EAAAE,QAAAO,KAAA,8BAGAC,EAAA,WACAV,EAAAE,QAAAQ,QAAA,8BAGA,OAAAX,GAAAI,cACA,OAEAQ,UAAA,mBAEAZ,EAAAI,cACAH,EAAAI,QAEAC,QAAAJ,GAEA,QAEAF,EAAAI,cACAH,EAAAI,QAEAC,QAAAE,GAEA,WAEAR,EAAAI,cACAH,EAAAI,QAEAC,QAAAG,GAEA,SAEAT,EAAAI,cACAH,EAAAI,QAEAC,QAAAI,GAEA,QAEAV,EAAAI,cACAH,EAAAI,QAEAC,QAAAK,GAEA,eHgDME,KACA,SAAU/B,EAAQC,EAASC,GIlHjCF,EAAAC,SAAkBQ,KAAA,4QAA8QC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,YAAgCC,UAAaF,QAAA,yCAAAC,QAAA,+DAAuHE,UAAA,IAAgBC,QAAA,WAClf,GAAAC,GAAchB,EAAQ,QAItBiB,GAFiBjB,EAAQ,QAENA,EAAQ,SAE3BkB,EAAA,WACAD,EAAAE,QAAAD,KAAA,2CACA,MAAAD,GAAAE,QAAAK,QAAA,4BAIA,OAAAR,GAAAI,cACAH,EAAAI,QAEAC,QAAAJ,GAEA","file":"js/13.c2161b1.js","sourcesContent":["webpackJsonp([13,55,56,57],{\n\n/***/ \"BptB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  markdown: \"<h1>Message</h1>\\n<p>A message is displayed at top and center and will be dismissed automatically.</p>\\n<div id=\\\"demos\\\"></div>\\n<h3>API</h3>\\n<p>This components provides some static methods, with usage and arguments as following:</p>\\n<ul>\\n<li><code>message.success(content, [duration], onClose)</code></li>\\n<li><code>message.error(content, [duration], onClose)</code></li>\\n<li><code>message.info(content, [duration], onClose)</code></li>\\n<li><code>message.warning(content, [duration], onClose)</code></li>\\n<li><code>message.warn(content, [duration], onClose)</code> // alias of warning</li>\\n<li><code>message.loading(content, [duration], onClose)</code></li>\\n</ul>\\n\",\n demos: {'basic': __webpack_require__(\"jt2I\"), \n'callback': __webpack_require__(\"vYRd\"), \n'duration': __webpack_require__(\"Tl6M\")}};\n\n/***/ }),\n\n/***/ \"Tl6M\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Message, Button } from 'dashkit-ui';\\n\\nconst show = () => {\\n  Message.show('Display a 10s time message', 10);\\n};\\n\\nReactDOM.render(\\n  <Button onClick={show}>Display a 10s time message</Button>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"时间\",\"en-US\":\"Duration\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>duration</code>控制展示的时间。</p>\\n\",\"en-US\":\"<p>Use <code>duration</code> to control display time.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var show = function show() {\n    _dashkitUi.Message.show('Display a 10s time message', 10);\n  };\n\n  return React.createElement(\n    _dashkitUi.Button,\n    {\n      onClick: show\n    },\n    \"Display a 10s time message\"\n  );\n},}\n\n/***/ }),\n\n/***/ \"jt2I\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Message, Button } from 'dashkit-ui';\\n\\nconst show = () => {\\n  Message.show('This is a message of show');\\n};\\n\\nconst success = () => {\\n  Message.success('This is a message of success');\\n};\\n\\nconst error = () => {\\n  Message.error('This is a message of error');\\n};\\n\\nconst info = () => {\\n  Message.info('This is a message of info');\\n};\\n\\nconst warning = () => {\\n  Message.warning('This is message of warning');\\n};\\n\\nReactDOM.render(\\n  <div className=\\\"message-wrapper\\\">\\n    <Button onClick={show}>Show</Button>\\n    <Button onClick={success}>Success</Button>\\n    <Button onClick={error}>Error</Button>\\n    <Button onClick={info}>Info</Button>\\n    <Button onClick={warning}>Warning</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>show</code>、<code>success</code>、<code>error</code>、<code>info</code>、<code>warning</code>来展示不同的消息。</p>\\n\",\"en-US\":\"<p>Use <code>show</code>, <code>success</code>, <code>error</code>, <code>info</code>, <code>warning</code> to show different messages.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var show = function show() {\n    _dashkitUi.Message.show('This is a message of show');\n  };\n\n  var success = function success() {\n    _dashkitUi.Message.success('This is a message of success');\n  };\n\n  var error = function error() {\n    _dashkitUi.Message.error('This is a message of error');\n  };\n\n  var info = function info() {\n    _dashkitUi.Message.info('This is a message of info');\n  };\n\n  var warning = function warning() {\n    _dashkitUi.Message.warning('This is message of warning');\n  };\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"message-wrapper\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: show\n      },\n      \"Show\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: success\n      },\n      \"Success\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: error\n      },\n      \"Error\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: info\n      },\n      \"Info\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: warning\n      },\n      \"Warning\"\n    )\n  );\n},}\n\n/***/ }),\n\n/***/ \"vYRd\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Message, Button } from 'dashkit-ui';\\n\\nconst show = () => {\\n  Message.show('Setup a callback function', 1.5, () => Message.success('Callback successfully!'))\\n};\\n\\nReactDOM.render(\\n  <Button onClick={show}>Set up a callback</Button>,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"回调\",\"en-US\":\"Callback\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>onClose</code>回调函数。</p>\\n\",\"en-US\":\"<p>Use <code>onClose</code> to set callback Function.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var show = function show() {\n    _dashkitUi.Message.show('Setup a callback function', 1.5, function () {\n      return _dashkitUi.Message.success('Callback successfully!');\n    });\n  };\n\n  return React.createElement(\n    _dashkitUi.Button,\n    {\n      onClick: show\n    },\n    \"Set up a callback\"\n  );\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/13.c2161b1.js","module.exports = {\n  markdown: \"<h1>Message</h1>\\n<p>A message is displayed at top and center and will be dismissed automatically.</p>\\n<div id=\\\"demos\\\"></div>\\n<h3>API</h3>\\n<p>This components provides some static methods, with usage and arguments as following:</p>\\n<ul>\\n<li><code>message.success(content, [duration], onClose)</code></li>\\n<li><code>message.error(content, [duration], onClose)</code></li>\\n<li><code>message.info(content, [duration], onClose)</code></li>\\n<li><code>message.warning(content, [duration], onClose)</code></li>\\n<li><code>message.warn(content, [duration], onClose)</code> // alias of warning</li>\\n<li><code>message.loading(content, [duration], onClose)</code></li>\\n</ul>\\n\",\n demos: {'basic': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/message/basic.md'), \n'callback': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/message/callback.md'), \n'duration': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/message/duration.md')}};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/message/en-US.md\n// module id = BptB\n// module chunks = 13","module.exports = {code: \"import { Message, Button } from 'dashkit-ui';\\n\\nconst show = () => {\\n  Message.show('Display a 10s time message', 10);\\n};\\n\\nReactDOM.render(\\n  <Button onClick={show}>Display a 10s time message</Button>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"时间\",\"en-US\":\"Duration\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>duration</code>控制展示的时间。</p>\\n\",\"en-US\":\"<p>Use <code>duration</code> to control display time.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var show = function show() {\n    _dashkitUi.Message.show('Display a 10s time message', 10);\n  };\n\n  return React.createElement(\n    _dashkitUi.Button,\n    {\n      onClick: show\n    },\n    \"Display a 10s time message\"\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/message/duration.md\n// module id = Tl6M\n// module chunks = 13 55","module.exports = {code: \"import { Message, Button } from 'dashkit-ui';\\n\\nconst show = () => {\\n  Message.show('This is a message of show');\\n};\\n\\nconst success = () => {\\n  Message.success('This is a message of success');\\n};\\n\\nconst error = () => {\\n  Message.error('This is a message of error');\\n};\\n\\nconst info = () => {\\n  Message.info('This is a message of info');\\n};\\n\\nconst warning = () => {\\n  Message.warning('This is message of warning');\\n};\\n\\nReactDOM.render(\\n  <div className=\\\"message-wrapper\\\">\\n    <Button onClick={show}>Show</Button>\\n    <Button onClick={success}>Success</Button>\\n    <Button onClick={error}>Error</Button>\\n    <Button onClick={info}>Info</Button>\\n    <Button onClick={warning}>Warning</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>show</code>、<code>success</code>、<code>error</code>、<code>info</code>、<code>warning</code>来展示不同的消息。</p>\\n\",\"en-US\":\"<p>Use <code>show</code>, <code>success</code>, <code>error</code>, <code>info</code>, <code>warning</code> to show different messages.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var show = function show() {\n    _dashkitUi.Message.show('This is a message of show');\n  };\n\n  var success = function success() {\n    _dashkitUi.Message.success('This is a message of success');\n  };\n\n  var error = function error() {\n    _dashkitUi.Message.error('This is a message of error');\n  };\n\n  var info = function info() {\n    _dashkitUi.Message.info('This is a message of info');\n  };\n\n  var warning = function warning() {\n    _dashkitUi.Message.warning('This is message of warning');\n  };\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"message-wrapper\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: show\n      },\n      \"Show\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: success\n      },\n      \"Success\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: error\n      },\n      \"Error\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: info\n      },\n      \"Info\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: warning\n      },\n      \"Warning\"\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/message/basic.md\n// module id = jt2I\n// module chunks = 13 57","module.exports = {code: \"import { Message, Button } from 'dashkit-ui';\\n\\nconst show = () => {\\n  Message.show('Setup a callback function', 1.5, () => Message.success('Callback successfully!'))\\n};\\n\\nReactDOM.render(\\n  <Button onClick={show}>Set up a callback</Button>,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"回调\",\"en-US\":\"Callback\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>onClose</code>回调函数。</p>\\n\",\"en-US\":\"<p>Use <code>onClose</code> to set callback Function.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var show = function show() {\n    _dashkitUi.Message.show('Setup a callback function', 1.5, function () {\n      return _dashkitUi.Message.success('Callback successfully!');\n    });\n  };\n\n  return React.createElement(\n    _dashkitUi.Button,\n    {\n      onClick: show\n    },\n    \"Set up a callback\"\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/message/callback.md\n// module id = vYRd\n// module chunks = 13 56"],"sourceRoot":""}