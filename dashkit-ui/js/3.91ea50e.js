webpackJsonp([3,44,45,46,47],{"+M4p":function(e,t,n){e.exports={code:"import { Checkbox } from 'dashkit-ui';\n\nconst cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n\nclass App extends React.Component {\n  state = {\n    checkedCities: ['Shanghai', 'Beijing'],\n    indeterminate: true,\n    checkAll: false,\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"checkbox-checkall\">\n          <Checkbox\n            indeterminate={this.state.indeterminate}\n            onChange={this.onCheckAllChange}\n            checked={this.state.checkAll}\n          >\n            Check all\n          </Checkbox>\n        </div>\n        <br />\n        <Checkbox.Group\n          options={cityOptions}\n          value={this.state.checkedCities}\n          onChange={this.onGroupChange}\n        >\n          {cityOptions.map((city, index) =>\n            <Checkbox key={index} label={city} />\n          )}\n        </Checkbox.Group>\n      </div>\n    );\n  }\n\n  onGroupChange = (value) => {\n    const checkedCount = value.length;\n    const citiesLength = cityOptions.length;\n\n    this.setState({\n      checkedCities: value,\n      indeterminate: checkedCount > 0 && checkedCount < citiesLength,\n      checkAll: checkedCount === citiesLength,\n    });\n  }\n\n  onCheckAllChange = (e) => {\n    const { checked } = e.target;\n    const checkedCities = checked ? cityOptions : [];\n\n    console.log(checkedCities)\n    this.setState({\n      checkedCities,\n      indeterminate: false,\n      checkAll: checked,\n    });\n  }\n}\n\nReactDOM.render(<App />, mountNode);\n",meta:{order:3,title:{"zh-CN":"全选","en-US":"Group"},subtitle:{"zh-CN":"<p>在实现全选效果时，你可能会用到 <code>indeterminate</code> 属性。</p>\n","en-US":"<p>The <code>indeterminate</code> property can help you to achieve a 'check all' effect.</p>\n"},__content:""},preview:function(){function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var o=n("GiK3"),d=(n("O27J"),function(){function e(e,t){for(var n=0;n<t.length;n++){var c=t[n];c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(e,c.key,c)}}return function(t,n,c){return n&&e(t.prototype,n),c&&e(t,c),t}}()),a=n("qMEF"),i=["Shanghai","Beijing","Guangzhou","Shenzhen"],h=function(n){function h(){var n,c,o,d;e(this,h);for(var a=arguments.length,r=Array(a),l=0;l<a;l++)r[l]=arguments[l];return c=o=t(this,(n=h.__proto__||Object.getPrototypeOf(h)).call.apply(n,[this].concat(r))),o.state={checkedCities:["Shanghai","Beijing"],indeterminate:!0,checkAll:!1},o.onGroupChange=function(e){var t=e.length,n=i.length;o.setState({checkedCities:e,indeterminate:t>0&&t<n,checkAll:t===n})},o.onCheckAllChange=function(e){var t=e.target.checked,n=t?i:[];console.log(n),o.setState({checkedCities:n,indeterminate:!1,checkAll:t})},d=c,t(o,d)}return c(h,n),d(h,[{key:"render",value:function(){return o.createElement("div",null,o.createElement("div",{className:"checkbox-checkall"},o.createElement(a.Checkbox,{indeterminate:this.state.indeterminate,onChange:this.onCheckAllChange,checked:this.state.checkAll},"Check all")),o.createElement("br",null),o.createElement(a.Checkbox.Group,{options:i,value:this.state.checkedCities,onChange:this.onGroupChange},i.map(function(e,t){return o.createElement(a.Checkbox,{key:t,label:e})})))}}]),h}(o.Component);return o.createElement(h,null)}}},"1Yhh":function(e,t,n){e.exports={markdown:'<h1>Checkbox</h1>\n<p>Buttons for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\n<div id="demos"></div>\n<h2>API</h2>\n<h3>Checkbox</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>style</td>\n<td>style of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>disable the checkbox</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>checked</td>\n<td>value of checkbox</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultChecked</td>\n<td>default value</td>\n<td>boolean</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td><code>change</code> event handler</td>\n<td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Checkbox.Group</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>Default selected value</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>size</td>\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td><code>change</code> event handler</td>\n<td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n',demos:{basic:n("hAUj"),checked:n("CDLT"),disabled:n("CQ58"),group:n("+M4p")}}},CDLT:function(e,t,n){e.exports={code:"import { Checkbox } from 'dashkit-ui';\n\nReactDOM.render(\n  <div className=\"checkbox-list\">\n    <Checkbox checked={false}>checked false</Checkbox>\n    <Checkbox checked={true}>checked true</Checkbox>\n    <Checkbox indeterminate>checked indeterminate</Checkbox>\n  </div>\n  ,\n  mountNode\n);\n",meta:{order:1,title:{"zh-CN":"状态","en-US":"Checked"},subtitle:{"zh-CN":"<p>使用<code>checked</code>设置受控组件.</p>\n","en-US":"<p>Use <code>disabled</code> to defined Controlled component.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF"));return e.createElement("div",{className:"checkbox-list"},e.createElement(t.Checkbox,{checked:!1},"checked false"),e.createElement(t.Checkbox,{checked:!0},"checked true"),e.createElement(t.Checkbox,{indeterminate:!0},"checked indeterminate"))}}},CQ58:function(e,t,n){e.exports={code:"import { Checkbox } from 'dashkit-ui';\n\nReactDOM.render(\n  <div className=\"checkbox-list\">\n    <Checkbox disabled>Disabled 1</Checkbox>\n    <Checkbox defaultChecked disabled>Disabled 2</Checkbox>\n  </div>\n  ,\n  mountNode\n);\n",meta:{order:2,title:{"zh-CN":"禁用","en-US":"Disabled"},subtitle:{"zh-CN":"<p>使用<code>disabled</code>禁用checkbox.</p>\n","en-US":"<p>Use <code>disabled</code> to disable Checkbox.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF"));return e.createElement("div",{className:"checkbox-list"},e.createElement(t.Checkbox,{disabled:!0},"Disabled 1"),e.createElement(t.Checkbox,{defaultChecked:!0,disabled:!0},"Disabled 2"))}}},hAUj:function(e,t,n){e.exports={code:"import { Checkbox } from 'dashkit-ui';\n\nfunction onChange(e) {\n  console.log(`change to ${e.target.checked}`)\n}\n\nReactDOM.render(\n  <Checkbox defaultChecked onChange={onChange}>Option</Checkbox>,\n  mountNode\n);\n",meta:{order:0,title:{"zh-CN":"基本","en-US":"Basic"},subtitle:{"zh-CN":"<p>基本用法，可以用<code>defaultChecked</code>来定义checkbox默认的值。</p>\n","en-US":"<p>Use <code>defaultChecked</code> to define Checkbox's value.</p>\n"},__content:""},preview:function(){function e(e){console.log("change to "+e.target.checked)}var t=n("GiK3"),c=(n("O27J"),n("qMEF"));return t.createElement(c.Checkbox,{defaultChecked:!0,onChange:e},"Option")}}}});
//# sourceMappingURL=3.91ea50e.js.map