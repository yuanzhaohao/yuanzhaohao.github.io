webpackJsonp([16,96,97,98],{Y9lr:function(e,t,n){e.exports={code:'import { Alert } from \'dashkit-ui\';\n\nReactDOM.render(\n  <div className="alert-wrapper">\n    <Alert icon>A simple success alert—check it out!</Alert>\n    <Alert type="success" icon>A simple success alert—check it out!</Alert>\n    <Alert type="warning" icon>A simple warning alert—check it out!</Alert>\n    <Alert type="info" icon closable>A simple info alert—check it out!</Alert>\n    <Alert type="error" icon closable>A simple error alert—check it out!</Alert>\n  </div>,\n  mountNode\n);\n',meta:{order:2,title:{"zh-CN":"图标","en-US":"Icon"},subtitle:{"zh-CN":"<p>图标，<code>icon</code>来决定是否使用图标。</p>\n","en-US":"<p>Use <code>icon</code> to use icon.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF"));return e.createElement("div",{className:"alert-wrapper"},e.createElement(t.Alert,{icon:!0},"A simple success alert—check it out!"),e.createElement(t.Alert,{type:"success",icon:!0},"A simple success alert—check it out!"),e.createElement(t.Alert,{type:"warning",icon:!0},"A simple warning alert—check it out!"),e.createElement(t.Alert,{type:"info",icon:!0,closable:!0},"A simple info alert—check it out!"),e.createElement(t.Alert,{type:"error",icon:!0,closable:!0},"A simple error alert—check it out!"))}}},"jaG+":function(e,t,n){e.exports={markdown:'<h1>Alert</h1>\n<p>Provide contextual feedback messages for typical user actions with the handful of available and flexible alert messages.</p>\n<div id="demos"></div>\n<h3>API</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>alert type, can be set to <code>success</code> <code>warning</code> <code>danger</code> <code>info</code> or ommited</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>duration</td>\n<td>action time</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>closable</td>\n<td>determine whether it\'s a closable alert</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>onClose</td>\n<td>event handler</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n',demos:{basic:n("oKfT"),closable:n("sA6h"),icon:n("Y9lr")}}},oKfT:function(e,t,n){e.exports={code:'import { Alert } from \'dashkit-ui\';\n\nReactDOM.render(\n  <div className="alert-wrapper">\n    <Alert>A simple default alert—check it out!</Alert>\n    <Alert type="info">A simple info alert—check it out!</Alert>\n    <Alert type="success">\n      <h4>Well done!</h4>\n      Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\n      <hr />\n      Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n    </Alert>\n    <Alert type="warning">A simple warning alert—check it out!</Alert>\n    <Alert type="error">A simple error alert—check it out!</Alert>\n  </div>,\n  mountNode\n);\n',meta:{order:0,title:{"zh-CN":"基本","en-US":"Basic"},subtitle:{"zh-CN":"<p>基本用法，可以用<code>type</code>来定义Alert的样式。</p>\n","en-US":"<p>Use <code>type</code> to define the style of Alert.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF"));return e.createElement("div",{className:"alert-wrapper"},e.createElement(t.Alert,null,"A simple default alert—check it out!"),e.createElement(t.Alert,{type:"info"},"A simple info alert—check it out!"),e.createElement(t.Alert,{type:"success"},e.createElement("h4",null,"Well done!"),"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.",e.createElement("hr",null),"Whenever you need to, be sure to use margin utilities to keep things nice and tidy."),e.createElement(t.Alert,{type:"warning"},"A simple warning alert—check it out!"),e.createElement(t.Alert,{type:"error"},"A simple error alert—check it out!"))}}},sA6h:function(e,t,n){e.exports={code:'import { Alert } from \'dashkit-ui\';\n\nconst onClose = function (e) {\n  window.alert(\'I was closed.\');\n};\n\nReactDOM.render(\n  <div className="alert-wrapper">\n    <Alert type="info" closable>A simple info alert with close button!</Alert>\n    <Alert type="success" closable onClose={onClose}>\n      <h4>Well done!</h4>\n      Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\n      <hr />\n      Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\n    </Alert>\n  </div>,\n  mountNode\n);\n',meta:{order:1,title:{"zh-CN":"关闭","en-US":"Closable"},subtitle:{"zh-CN":"<p>可关闭，可以用<code>closable</code>控制展示关闭按钮。</p>\n","en-US":"<p>Can be closable. Use <code>Closable</code> to close the Alert.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),r=function(e){window.alert("I was closed.")};return e.createElement("div",{className:"alert-wrapper"},e.createElement(t.Alert,{type:"info",closable:!0},"A simple info alert with close button!"),e.createElement(t.Alert,{type:"success",closable:!0,onClose:r},e.createElement("h4",null,"Well done!"),"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.",e.createElement("hr",null),"Whenever you need to, be sure to use margin utilities to keep things nice and tidy."))}}}});
//# sourceMappingURL=16.f8e168c.js.map