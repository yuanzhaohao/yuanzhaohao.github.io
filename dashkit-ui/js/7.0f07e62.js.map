{"version":3,"sources":["webpack:///js/7.0f07e62.js","webpack:///./docs/button/size.md","webpack:///./docs/button/en-US.md","webpack:///./docs/button/disabled.md","webpack:///./docs/button/basic.md"],"names":["webpackJsonp","0sm6","module","exports","__webpack_require__","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","React","_dashkitUi","createElement","className","Button","size","type","round","JoXn","markdown","demos","basic","disabled","Kiv3","qHnS","outline"],"mappings":"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","file":"js/7.0f07e62.js","sourcesContent":["webpackJsonp([7,51,52,53],{\n\n/***/ \"0sm6\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-list\\\">\\n    <Button size=\\\"large\\\">Large</Button>\\n    <Button size=\\\"default\\\">Default</Button>\\n    <Button size=\\\"small\\\">Small</Button>\\n    <Button type=\\\"primary\\\" size=\\\"large\\\" round={true}>Large</Button>\\n    <Button type=\\\"primary\\\" size=\\\"default\\\" round={true}>Default</Button>\\n    <Button type=\\\"primary\\\" size=\\\"small\\\" round={true}>Small</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Sizes\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"button-list\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        size: \"large\"\n      },\n      \"Large\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        size: \"default\"\n      },\n      \"Default\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        size: \"small\"\n      },\n      \"Small\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        type: \"primary\",\n        size: \"large\",\n        round: true\n      },\n      \"Large\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        type: \"primary\",\n        size: \"default\",\n        round: true\n      },\n      \"Default\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        type: \"primary\",\n        size: \"small\",\n        round: true\n      },\n      \"Small\"\n    )\n  );\n},}\n\n/***/ }),\n\n/***/ \"JoXn\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  markdown: \"<h1>Button</h1>\\n<p>Buttons for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<h3>Button</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>button type, can be set to <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code> <code>info</code> <code>link</code> or ommited</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>outline</td>\\n<td>determine whether it's a outline button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>round</td>\\n<td>determine whether it's a round button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>loading</td>\\n<td>determine whether it's loading</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>icon</td>\\n<td>button icon, see <code>Icon</code> component</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onClick</td>\\n<td><code>click</code> event handler</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3>Button.Group</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>defaultValue</td>\\n<td>Default selected value</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>onChange</td>\\n<td><code>change</code> event handler</td>\\n<td><code>Function(e: event)</code></td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': __webpack_require__(\"qHnS\"), \n'disabled': __webpack_require__(\"Kiv3\"), \n'size': __webpack_require__(\"0sm6\")}};\n\n/***/ }),\n\n/***/ \"Kiv3\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button disabled={true}>Default Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"primary\\\" disabled>Default Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"success\\\" disabled>Success Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"warning\\\" disabled>Warning Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"danger\\\" disabled>Danger Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"info\\\" disabled>Info Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"link\\\">Link</Button>\\n      <Button type=\\\"link\\\" disabled>Link Disabled</Button>\\n    </div>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"禁用\",\"en-US\":\"Disabled\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>disabled</code>来决定是否禁用按钮，默认值是<code>false</code>。</p>\\n\",\"en-US\":\"<p>Add the <code>disabled</code> property to determine if the button is disabled.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"button-wrapper\"\n    },\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        null,\n        \"Default\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          disabled: true\n        },\n        \"Default Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\"\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\",\n          disabled: true\n        },\n        \"Default Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\"\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\",\n          disabled: true\n        },\n        \"Success Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\"\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\",\n          disabled: true\n        },\n        \"Warning Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\"\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\",\n          disabled: true\n        },\n        \"Danger Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\"\n        },\n        \"Info\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\",\n          disabled: true\n        },\n        \"Info Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"link\"\n        },\n        \"Link\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"link\",\n          disabled: true\n        },\n        \"Link Disabled\"\n      )\n    )\n  );\n},}\n\n/***/ }),\n\n/***/ \"qHnS\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"link\\\">Link</Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button outline>Outline</Button>\\n      <Button type=\\\"primary\\\" outline>Primary</Button>\\n      <Button type=\\\"success\\\" outline>Success</Button>\\n      <Button type=\\\"warning\\\" outline>Warning</Button>\\n      <Button type=\\\"danger\\\" outline>Danger</Button>\\n      <Button type=\\\"info\\\" outline>Info</Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button round>Round</Button>\\n      <Button type=\\\"primary\\\" round>Primary</Button>\\n      <Button type=\\\"success\\\" round>Success</Button>\\n      <Button type=\\\"warning\\\" round>Warning</Button>\\n      <Button type=\\\"danger\\\" round>Danger</Button>\\n      <Button type=\\\"info\\\" round>Info</Button>\\n    </div>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，可以用<code>type</code>、<code>outline</code>、 <code>round</code> 和 <code>circle</code>来定义button的样式。</p>\\n\",\"en-US\":\"<p>Use <code>type</code>, <code>outline</code>, <code>round</code> and <code>circle</code> to define Button's style.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"button-wrapper\"\n    },\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        null,\n        \"Default\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\"\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\"\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\"\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\"\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\"\n        },\n        \"Info\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"link\"\n        },\n        \"Link\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          outline: true\n        },\n        \"Outline\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\",\n          outline: true\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\",\n          outline: true\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\",\n          outline: true\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\",\n          outline: true\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\",\n          outline: true\n        },\n        \"Info\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          round: true\n        },\n        \"Round\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\",\n          round: true\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\",\n          round: true\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\",\n          round: true\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\",\n          round: true\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\",\n          round: true\n        },\n        \"Info\"\n      )\n    )\n  );\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/7.0f07e62.js","module.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-list\\\">\\n    <Button size=\\\"large\\\">Large</Button>\\n    <Button size=\\\"default\\\">Default</Button>\\n    <Button size=\\\"small\\\">Small</Button>\\n    <Button type=\\\"primary\\\" size=\\\"large\\\" round={true}>Large</Button>\\n    <Button type=\\\"primary\\\" size=\\\"default\\\" round={true}>Default</Button>\\n    <Button type=\\\"primary\\\" size=\\\"small\\\" round={true}>Small</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"尺寸\",\"en-US\":\"Sizes\"},\"subtitle\":{\"zh-CN\":\"<p>可以设置<code>size</code>属性来定义尺寸，属性值包括<code>large</code>、<code>default</code>、<code>small</code>，默认是<code>default</code>。</p>\\n\",\"en-US\":\"<p>If a large or small button is desired, set the size property to either <code>large</code> or <code>small</code> respectively. Omit the <code>size</code> property for a button with the default size.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"button-list\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        size: \"large\"\n      },\n      \"Large\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        size: \"default\"\n      },\n      \"Default\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        size: \"small\"\n      },\n      \"Small\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        type: \"primary\",\n        size: \"large\",\n        round: true\n      },\n      \"Large\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        type: \"primary\",\n        size: \"default\",\n        round: true\n      },\n      \"Default\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        type: \"primary\",\n        size: \"small\",\n        round: true\n      },\n      \"Small\"\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/button/size.md\n// module id = 0sm6\n// module chunks = 7 51","module.exports = {\n  markdown: \"<h1>Button</h1>\\n<p>Buttons for actions in forms, dialogs, and more with support for multiple sizes, states, and more.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<h3>Button</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>type</td>\\n<td>button type, can be set to <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code> <code>info</code> <code>link</code> or ommited</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>outline</td>\\n<td>determine whether it's a outline button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>round</td>\\n<td>determine whether it's a round button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>disabled</td>\\n<td>disable the button</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>loading</td>\\n<td>determine whether it's loading</td>\\n<td>boolean</td>\\n<td>false</td>\\n</tr>\\n<tr>\\n<td>icon</td>\\n<td>button icon, see <code>Icon</code> component</td>\\n<td>string</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>onClick</td>\\n<td><code>click</code> event handler</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n<h3>Button.Group</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>defaultValue</td>\\n<td>Default selected value</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>size</td>\\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\\n<td>string</td>\\n<td>default</td>\\n</tr>\\n<tr>\\n<td>onChange</td>\\n<td><code>change</code> event handler</td>\\n<td><code>Function(e: event)</code></td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': require('/Users/sevenyuan/Sites/github/dashkit-ui/docs/button/basic.md'), \n'disabled': require('/Users/sevenyuan/Sites/github/dashkit-ui/docs/button/disabled.md'), \n'size': require('/Users/sevenyuan/Sites/github/dashkit-ui/docs/button/size.md')}};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/button/en-US.md\n// module id = JoXn\n// module chunks = 7","module.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button disabled={true}>Default Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"primary\\\" disabled>Default Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"success\\\" disabled>Success Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"warning\\\" disabled>Warning Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"danger\\\" disabled>Danger Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"info\\\" disabled>Info Disabled</Button>\\n    </div>\\n    <div className=\\\"button-list\\\">\\n      <Button type=\\\"link\\\">Link</Button>\\n      <Button type=\\\"link\\\" disabled>Link Disabled</Button>\\n    </div>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"禁用\",\"en-US\":\"Disabled\"},\"subtitle\":{\"zh-CN\":\"<p>使用<code>disabled</code>来决定是否禁用按钮，默认值是<code>false</code>。</p>\\n\",\"en-US\":\"<p>Add the <code>disabled</code> property to determine if the button is disabled.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"button-wrapper\"\n    },\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        null,\n        \"Default\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          disabled: true\n        },\n        \"Default Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\"\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\",\n          disabled: true\n        },\n        \"Default Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\"\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\",\n          disabled: true\n        },\n        \"Success Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\"\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\",\n          disabled: true\n        },\n        \"Warning Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\"\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\",\n          disabled: true\n        },\n        \"Danger Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\"\n        },\n        \"Info\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\",\n          disabled: true\n        },\n        \"Info Disabled\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"link\"\n        },\n        \"Link\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"link\",\n          disabled: true\n        },\n        \"Link Disabled\"\n      )\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/button/disabled.md\n// module id = Kiv3\n// module chunks = 7 52","module.exports = {code: \"import { Button } from 'dashkit-ui';\\n\\nReactDOM.render(\\n  <div className=\\\"button-wrapper\\\">\\n    <div className=\\\"button-list\\\">\\n      <Button>Default</Button>\\n      <Button type=\\\"primary\\\">Primary</Button>\\n      <Button type=\\\"success\\\">Success</Button>\\n      <Button type=\\\"warning\\\">Warning</Button>\\n      <Button type=\\\"danger\\\">Danger</Button>\\n      <Button type=\\\"info\\\">Info</Button>\\n      <Button type=\\\"link\\\">Link</Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button outline>Outline</Button>\\n      <Button type=\\\"primary\\\" outline>Primary</Button>\\n      <Button type=\\\"success\\\" outline>Success</Button>\\n      <Button type=\\\"warning\\\" outline>Warning</Button>\\n      <Button type=\\\"danger\\\" outline>Danger</Button>\\n      <Button type=\\\"info\\\" outline>Info</Button>\\n    </div>\\n\\n    <div className=\\\"button-list\\\">\\n      <Button round>Round</Button>\\n      <Button type=\\\"primary\\\" round>Primary</Button>\\n      <Button type=\\\"success\\\" round>Success</Button>\\n      <Button type=\\\"warning\\\" round>Warning</Button>\\n      <Button type=\\\"danger\\\" round>Danger</Button>\\n      <Button type=\\\"info\\\" round>Info</Button>\\n    </div>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，可以用<code>type</code>、<code>outline</code>、 <code>round</code> 和 <code>circle</code>来定义button的样式。</p>\\n\",\"en-US\":\"<p>Use <code>type</code>, <code>outline</code>, <code>round</code> and <code>circle</code> to define Button's style.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"button-wrapper\"\n    },\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        null,\n        \"Default\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\"\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\"\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\"\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\"\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\"\n        },\n        \"Info\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"link\"\n        },\n        \"Link\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          outline: true\n        },\n        \"Outline\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\",\n          outline: true\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\",\n          outline: true\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\",\n          outline: true\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\",\n          outline: true\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\",\n          outline: true\n        },\n        \"Info\"\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"button-list\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          round: true\n        },\n        \"Round\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\",\n          round: true\n        },\n        \"Primary\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"success\",\n          round: true\n        },\n        \"Success\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"warning\",\n          round: true\n        },\n        \"Warning\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"danger\",\n          round: true\n        },\n        \"Danger\"\n      ),\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"info\",\n          round: true\n        },\n        \"Info\"\n      )\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/button/basic.md\n// module id = qHnS\n// module chunks = 7 53"],"sourceRoot":""}