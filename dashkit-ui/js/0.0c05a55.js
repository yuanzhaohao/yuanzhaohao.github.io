webpackJsonp([0,74,75,76,77,78,79,80,81,82],{"4Pmf":function(e,n,t){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xs={12} />\n    </Row>\n    <Row>\n      <Col xs={1} />\n      <Col xs={11} />\n    </Row>\n    <Row>\n      <Col xs={2} />\n      <Col xs={10} />\n    </Row>\n    <Row>\n      <Col xs={3} />\n      <Col xs={9} />\n    </Row>\n    <Row>\n      <Col xs={4} />\n      <Col xs={8} />\n    </Row>\n    <Row>\n      <Col xs={5} />\n      <Col xs={7} />\n    </Row>\n    <Row>\n      <Col xs={6} />\n      <Col xs={6} />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:1,title:{"zh-CN":"流式布局","en-US":"Fluid Layout"},subtitle:{"zh-CN":"<p>流式布局.</p>\n","en-US":"<p>Percent based widths allow fluid resizing of columns and rows.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(s,null,e.createElement(r,{xs:12})),e.createElement(s,null,e.createElement(r,{xs:1}),e.createElement(r,{xs:11})),e.createElement(s,null,e.createElement(r,{xs:2}),e.createElement(r,{xs:10})),e.createElement(s,null,e.createElement(r,{xs:3}),e.createElement(r,{xs:9})),e.createElement(s,null,e.createElement(r,{xs:4}),e.createElement(r,{xs:8})),e.createElement(s,null,e.createElement(r,{xs:5}),e.createElement(r,{xs:7})),e.createElement(s,null,e.createElement(r,{xs:6}),e.createElement(r,{xs:6})))}}},"8FfA":function(e,n,t){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xs={12} sm={3} md={2} lg={1} />\n      <Col xs={6} sm={6} md={8} lg={10} />\n      <Col xs={6} sm={3} md={2} lg={1} />\n    </Row>\n\n    <Row>\n      <Col xs={12} sm={3} md={2} lg={1} />\n      <Col xs={12} sm={9} md={10} lg={11} />\n    </Row>\n\n    <Row>\n      <Col xs={10} sm={6} md={8} lg={10} />\n      <Col xs={2} sm={6} md={4} lg={2} />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:0,title:{"zh-CN":"响应式布局","en-US":"Responsive Layout"},subtitle:{"zh-CN":"<p>基本用法。</p>\n","en-US":"<p>Responsive modifiers enable specifying different column sizes, offsets, alignment and distribution at xs, sm, md &amp; lg viewport widths.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(s,null,e.createElement(r,{xs:12,sm:3,md:2,lg:1}),e.createElement(r,{xs:6,sm:6,md:8,lg:10}),e.createElement(r,{xs:6,sm:3,md:2,lg:1})),e.createElement(s,null,e.createElement(r,{xs:12,sm:3,md:2,lg:1}),e.createElement(r,{xs:12,sm:9,md:10,lg:11})),e.createElement(s,null,e.createElement(r,{xs:10,sm:6,md:8,lg:10}),e.createElement(r,{xs:2,sm:6,md:4,lg:2})))}}},"9PhR":function(e,n,t){e.exports={markdown:'<h1>Grid</h1>\n<p>A grid system based on the flex display property, which refer to <a href="http://flexboxgrid.com/">Flexbox Grid</a>.</p>\n<div id="demos"></div>\n<h2>API</h2>\n<h3>Grid</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>fluid</td>\n<td>is fluid</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<h3>Grid.Row</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>xs</td>\n<td>grid size</td>\n<td>number</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Grid.Col</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n',demos:{alignment:t("xWk8"),"auto-width":t("IGsB"),distribution:t("KylI"),fluid:t("4Pmf"),nested:t("rGi/"),offset:t("zBCS"),reordering:t("WuL/"),response:t("8FfA"),reversing:t("Ek3o")}}},Ek3o:function(e,n,t){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-alignment">\n    <h4 className="grid-title grid-title-first">.reverse-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row reverse>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested">1</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested">2</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested">3</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested">4</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested">5</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested">6</div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n  </div>,\n  mountNode\n);\n',meta:{order:7,title:{"zh-CN":"反向","en-US":"Reversing"},subtitle:{"zh-CN":"<p>可以使用<code>reverse</code>设置反向。</p>\n","en-US":"<p>Use <code>reverse</code> to reverse.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-alignment"},e.createElement("h4",{className:"grid-title grid-title-first"},".reverse-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,{reverse:!0},e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"},"1")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"},"2")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"},"3")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"},"4")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"},"5")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"},"6")))))))}}},IGsB:function(e,n,t){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xs />\n      <Col xs />\n    </Row>\n    <Row>\n      <Col xs />\n      <Col xs />\n      <Col xs />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:3,title:{"zh-CN":"自动撑满","en-US":"Auto width"},subtitle:{"zh-CN":"<p>自动等分</p>\n","en-US":"<p>Add any number of auto sizing columns to a row. Let the grid figure it out.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(s,null,e.createElement(r,{xs:!0}),e.createElement(r,{xs:!0})),e.createElement(s,null,e.createElement(r,{xs:!0}),e.createElement(r,{xs:!0}),e.createElement(r,{xs:!0})))}}},KylI:function(e,n,t){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-alignment">\n    <h4 className="grid-title grid-title-first">.around-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row around="xs">\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.between-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row between="xs">\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n  </div>,\n  mountNode\n);\n',meta:{order:6,title:{"zh-CN":"分布","en-US":"Distribution"},subtitle:{"zh-CN":"<p>可以使用<code>around</code> <code>between</code>, 将元素对齐到行开头或结尾以及列的顶部、底部或中心</p>\n","en-US":"<p>Use <code>around</code> <code>between</code> to distribute the contents of a row or column.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-alignment"},e.createElement("h4",{className:"grid-title grid-title-first"},".around-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,{around:"xs"},e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title"},".between-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,{between:"xs"},e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})))))))}}},"WuL/":function(e,n,t){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-alignment">\n    <h4 className="grid-title grid-title-first">.first-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">1</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">2</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">3</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">4</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">5</div>\n            </Col>\n            <Col xs={2} first="xs">\n              <div className="grid-box grid-box-nested">6</div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.last-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={2} last="xs">\n              <div className="grid-box grid-box-nested">1</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">2</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">3</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">4</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">5</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">6</div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n  </div>,\n  mountNode\n);\n',meta:{order:6,title:{"zh-CN":"位置","en-US":"Reordering"},subtitle:{"zh-CN":"<p>可以使用<code>first</code> <code>last</code>控制位置。</p>\n","en-US":"<p>Use <code>first</code> <code>last</code> to reorder columns.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-alignment"},e.createElement("h4",{className:"grid-title grid-title-first"},".first-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,null,e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"1")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"2")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"3")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"4")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"5")),e.createElement(r,{xs:2,first:"xs"},e.createElement("div",{className:"grid-box grid-box-nested"},"6")))))),e.createElement("h4",{className:"grid-title"},".last-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,null,e.createElement(r,{xs:2,last:"xs"},e.createElement("div",{className:"grid-box grid-box-nested"},"1")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"2")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"3")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"4")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"5")),e.createElement(r,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"6")))))))}}},"rGi/":function(e,n,t){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-nested">\n    <Row>\n      <Col xs={7}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={9}>\n              <div className="grid-box grid-box-first">\n                <Row>\n                  <Col xs={4}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                  <Col xs={8}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col xs={3}>\n              <div className="grid-box grid-box-first">\n                <Row>\n                  <Col xs>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n      <Col xs={5}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={12}>\n              <div className="grid-box grid-box-first">\n                <Row>\n                  <Col xs={6}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                  <Col xs={6}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n  </div>,\n  mountNode\n);\n',meta:{order:4,title:{"zh-CN":"嵌套","en-US":"Nested Grids"},subtitle:{"zh-CN":"<p>在网格中嵌套网格。</p>\n","en-US":"<p>Nest grids inside grids inside grids.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-nested"},e.createElement(s,null,e.createElement(r,{xs:7},e.createElement("div",{className:"grid-box"},e.createElement(s,null,e.createElement(r,{xs:9},e.createElement("div",{className:"grid-box grid-box-first"},e.createElement(s,null,e.createElement(r,{xs:4},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(r,{xs:8},e.createElement("div",{className:"grid-box grid-box-nested"}))))),e.createElement(r,{xs:3},e.createElement("div",{className:"grid-box grid-box-first"},e.createElement(s,null,e.createElement(r,{xs:!0},e.createElement("div",{className:"grid-box grid-box-nested"})))))))),e.createElement(r,{xs:5},e.createElement("div",{className:"grid-box"},e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box grid-box-first"},e.createElement(s,null,e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"}))))))))))}}},xWk8:function(e,n,t){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-alignment">\n    <h4 className="grid-title grid-title-first">.start-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row start="xs">\n            <Col xs={6}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.center-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row center="xs">\n            <Col xs={6}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.end-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row centender="xs">\n            <Col xs={6}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.top-</h4>\n    <Row top="xs">\n      <Col xs={6}>\n        <div className="grid-box grid-box-large" />\n      </Col>\n      <Col xs={6}>\n        <div className="grid-box" />\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.middle-</h4>\n    <Row middle="xs">\n      <Col xs={6}>\n        <div className="grid-box grid-box-large" />\n      </Col>\n      <Col xs={6}>\n        <div className="grid-box" />\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.bottom-</h4>\n    <Row bottom="xs">\n      <Col xs={6}>\n        <div className="grid-box grid-box-large" />\n      </Col>\n      <Col xs={6}>\n        <div className="grid-box" />\n      </Col>\n    </Row>\n\n  </div>,\n  mountNode\n);\n',meta:{order:5,title:{"zh-CN":"对齐","en-US":"Alignment"},subtitle:{"zh-CN":"<p>可以使用<code>start</code> <code>middle</code> <code>end</code>, <code>center</code>, <code>top</code>, 将元素对齐到行开头或结尾以及列的顶部、底部或中心</p>\n","en-US":"<p>Add classes to align elements to the start or end of row as well as the top, bottom, or center of a column.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-alignment"},e.createElement("h4",{className:"grid-title grid-title-first"},".start-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,{start:"xs"},e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title"},".center-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,{center:"xs"},e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title"},".end-"),e.createElement(s,null,e.createElement(r,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(s,{centender:"xs"},e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title"},".top-"),e.createElement(s,{top:"xs"},e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-large"})),e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box"}))),e.createElement("h4",{className:"grid-title"},".middle-"),e.createElement(s,{middle:"xs"},e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-large"})),e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box"}))),e.createElement("h4",{className:"grid-title"},".bottom-"),e.createElement(s,{bottom:"xs"},e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box grid-box-large"})),e.createElement(r,{xs:6},e.createElement("div",{className:"grid-box"}))))}}},zBCS:function(e,n,t){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xsOffset={11} xs={1} />\n      <Col xsOffset={10} xs={2} />\n      <Col xsOffset={9} xs={3} />\n      <Col xsOffset={8} xs={4} />\n      <Col xsOffset={7} xs={5} />\n      <Col xsOffset={6} xs={6} />\n      <Col xsOffset={5} xs={7} />\n      <Col xsOffset={4} xs={8} />\n      <Col xsOffset={3} xs={9} />\n      <Col xsOffset={2} xs={10} />\n      <Col xsOffset={1} xs={11} />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:2,title:{"zh-CN":"偏移","en-US":"Offsets"},subtitle:{"zh-CN":"<p>偏移，通过设置<code>offset</code>参数.</p>\n","en-US":"<p>Offset a column.</p>\n"},__content:""},preview:function(){var e=t("GiK3"),n=(t("O27J"),t("qMEF")),s=n.Grid.Row,r=n.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(s,null,e.createElement(r,{xsOffset:11,xs:1}),e.createElement(r,{xsOffset:10,xs:2}),e.createElement(r,{xsOffset:9,xs:3}),e.createElement(r,{xsOffset:8,xs:4}),e.createElement(r,{xsOffset:7,xs:5}),e.createElement(r,{xsOffset:6,xs:6}),e.createElement(r,{xsOffset:5,xs:7}),e.createElement(r,{xsOffset:4,xs:8}),e.createElement(r,{xsOffset:3,xs:9}),e.createElement(r,{xsOffset:2,xs:10}),e.createElement(r,{xsOffset:1,xs:11})))}}}});
//# sourceMappingURL=0.0c05a55.js.map