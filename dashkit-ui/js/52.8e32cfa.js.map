{"version":3,"sources":["webpack:///js/52.8e32cfa.js","webpack:///./docs/modal/type.md"],"names":["webpackJsonp","wpgJ","module","exports","__webpack_require__","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","success","_dashkitUi","Modal","content","React","createElement","onConfirm","console","log","info","error","warning","className","Button","onClick"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCHjCF,EAAAC,SAAkBE,KAAA,4hCAA8hCC,MAAWC,MAAA,EAAAC,OAAmBC,QAAA,KAAAC,QAAA,QAA4BC,UAAaF,QAAA,kDAAAC,QAAA,2GAA4KE,UAAA,IAAgBC,QAAA,WAOnzC,QAAAC,KACAC,EAAAC,MAAAF,SACAN,MAAA,4BACAS,QAAAC,EAAAC,cACA,MACA,KACAD,EAAAC,cACA,IACA,KACA,oCAEAD,EAAAC,cACA,IACA,KACA,qCAGAC,UAAA,WACAC,QAAAC,IAAA,8BAKA,QAAAC,KACAR,EAAAC,MAAAO,MACAf,MAAA,iCACAS,QAAA,qCAIA,QAAAO,KACAT,EAAAC,MAAAQ,OACAhB,MAAA,0BACAS,QAAA,qCAIA,QAAAQ,KACAV,EAAAC,MAAAS,SACAjB,MAAA,4BACAS,QAAA,qCA9CA,GAAAC,GAAcd,EAAQ,QAItBW,GAFiBX,EAAQ,QAENA,EAAQ,QA8C3B,OAAAc,GAAAC,cACA,OAEAO,UAAA,aAEAR,EAAAC,cACAJ,EAAAY,QAEAC,QAAAd,GAEA,WAEAI,EAAAC,cACAJ,EAAAY,QAEAC,QAAAL,GAEA,QAEAL,EAAAC,cACAJ,EAAAY,QAEAC,QAAAJ,GAEA,SAEAN,EAAAC,cACAJ,EAAAY,QAEAC,QAAAH,GAEA","file":"js/52.8e32cfa.js","sourcesContent":["webpackJsonp([52],{\n\n/***/ \"wpgJ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nfunction success() {\\n  Modal.success({\\n    title: 'This is a success message',\\n    content: (\\n      <div>\\n        <p>some messages...some messages...</p>\\n        <p>some messages...some messages...</p>\\n      </div>\\n    ),\\n    onConfirm() {\\n      console.log('call onConfirm callback')\\n    },\\n  });\\n}\\n\\nfunction info() {\\n  Modal.info({\\n    title: 'This is a notification message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction error() {\\n  Modal.error({\\n    title: 'This is a error message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction warning() {\\n  Modal.warning({\\n    title: 'This is a warning message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nReactDOM.render(\\n  <div className=\\\"modal-btn\\\">\\n    <Button onClick={success}>Success</Button>\\n    <Button onClick={info}>Info</Button>\\n    <Button onClick={error}>Error</Button>\\n    <Button onClick={warning}>Warning</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"类型\",\"en-US\":\"Type\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  function success() {\n    _dashkitUi.Modal.success({\n      title: 'This is a success message',\n      content: React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        )\n      ),\n      onConfirm: function onConfirm() {\n        console.log('call onConfirm callback');\n      }\n    });\n  }\n\n  function info() {\n    _dashkitUi.Modal.info({\n      title: 'This is a notification message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function error() {\n    _dashkitUi.Modal.error({\n      title: 'This is a error message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function warning() {\n    _dashkitUi.Modal.warning({\n      title: 'This is a warning message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"modal-btn\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: success\n      },\n      \"Success\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: info\n      },\n      \"Info\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: error\n      },\n      \"Error\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: warning\n      },\n      \"Warning\"\n    )\n  );\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/52.8e32cfa.js","module.exports = {code: \"import { Modal, Button } from 'dashkit-ui';\\n\\nfunction success() {\\n  Modal.success({\\n    title: 'This is a success message',\\n    content: (\\n      <div>\\n        <p>some messages...some messages...</p>\\n        <p>some messages...some messages...</p>\\n      </div>\\n    ),\\n    onConfirm() {\\n      console.log('call onConfirm callback')\\n    },\\n  });\\n}\\n\\nfunction info() {\\n  Modal.info({\\n    title: 'This is a notification message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction error() {\\n  Modal.error({\\n    title: 'This is a error message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nfunction warning() {\\n  Modal.warning({\\n    title: 'This is a warning message',\\n    content: 'some messages...some messages...',\\n  });\\n}\\n\\nReactDOM.render(\\n  <div className=\\\"modal-btn\\\">\\n    <Button onClick={success}>Success</Button>\\n    <Button onClick={info}>Info</Button>\\n    <Button onClick={error}>Error</Button>\\n    <Button onClick={warning}>Warning</Button>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"类型\",\"en-US\":\"Type\"},\"subtitle\":{\"zh-CN\":\"<p>基本用法，使用<code>type</code>来控制是否打开dialog。</p>\\n\",\"en-US\":\"<p>In the various types of information modal dialog, only one button to close dialog is provided.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  function success() {\n    _dashkitUi.Modal.success({\n      title: 'This is a success message',\n      content: React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        ),\n        React.createElement(\n          \"p\",\n          null,\n          \"some messages...some messages...\"\n        )\n      ),\n      onConfirm: function onConfirm() {\n        console.log('call onConfirm callback');\n      }\n    });\n  }\n\n  function info() {\n    _dashkitUi.Modal.info({\n      title: 'This is a notification message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function error() {\n    _dashkitUi.Modal.error({\n      title: 'This is a error message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  function warning() {\n    _dashkitUi.Modal.warning({\n      title: 'This is a warning message',\n      content: 'some messages...some messages...'\n    });\n  }\n\n  return React.createElement(\n    \"div\",\n    {\n      className: \"modal-btn\"\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: success\n      },\n      \"Success\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: info\n      },\n      \"Info\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: error\n      },\n      \"Error\"\n    ),\n    React.createElement(\n      _dashkitUi.Button,\n      {\n        onClick: warning\n      },\n      \"Warning\"\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/modal/type.md\n// module id = wpgJ\n// module chunks = 12 52"],"sourceRoot":""}