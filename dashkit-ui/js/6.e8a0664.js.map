{"version":3,"sources":["webpack:///js/6.e8a0664.js","webpack:///./docs/popover/placement.md","webpack:///./docs/popover/trigger.md","webpack:///./docs/popover/basic.md","webpack:///./docs/popover/en-US.md","webpack:///./docs/popover/controlled.md"],"names":["webpackJsonp","UCuY","module","exports","__webpack_require__","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","React","_dashkitUi","createElement","content","className","Popover","placement","trigger","Button","Y9Zo","type","style","marginLeft","bkki","cXBp","markdown","demos","basic","controlled","oFJZ","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","App","_React$Component","_ref","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","state","visible","handleClick","setState","hide","onClick","cursor","Component"],"mappings":"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","file":"js/6.e8a0664.js","sourcesContent":["webpackJsonp([6,44,45,46,47],{\n\n/***/ \"UCuY\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\n\\nconst title = <span>Title</span>;\\nconst content = (\\n  <div>\\n    <p>Content</p>\\n    <p>Content</p>\\n  </div>\\n);\\n\\nReactDOM.render(\\n  <div className=\\\"popover-box\\\">\\n    <div className=\\\"popover-box-top\\\">\\n      <Popover content={content} title={title} placement=\\\"top-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">top-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"top\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">top</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"top-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">top-end</Button>\\n      </Popover>\\n    </div>\\n    <div className=\\\"popover-box-left\\\">\\n      <Popover content={content} title={title} placement=\\\"left-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">left-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"left\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">left</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"left-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">left-end</Button>\\n      </Popover>\\n    </div>\\n    <div className=\\\"popover-box-right\\\">\\n      <Popover content={content} title={title} placement=\\\"right-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">right-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"right\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">right</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"right-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">right-end</Button>\\n      </Popover>\\n    </div>\\n    <div className=\\\"popover-box-bottom\\\">\\n      <Popover content={content} title={title} placement=\\\"bottom-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">bottom-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"bottom\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">bottom</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"bottom-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">bottom-end</Button>\\n      </Popover>\\n    </div>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"位置\",\"en-US\":\"Placement\"},\"subtitle\":{\"zh-CN\":\"<p>位置</p>\\n\",\"en-US\":\"<p>The attribute <code>placement</code> determines the position of the popover. Its value is <code>[orientation]-[alignment]</code> with four orientations <code>top</code>, <code>left</code>, <code>right</code>, <code>bottom</code> and three alignments <code>start</code>, <code>end</code>, <code>null</code>, and the default alignment is null.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var title = React.createElement(\n    \"span\",\n    null,\n    \"Title\"\n  );\n  var content = React.createElement(\n    \"div\",\n    null,\n    React.createElement(\n      \"p\",\n      null,\n      \"Content\"\n    ),\n    React.createElement(\n      \"p\",\n      null,\n      \"Content\"\n    )\n  );\n  return React.createElement(\n    \"div\",\n    {\n      className: \"popover-box\"\n    },\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-top\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"top-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"top-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"top\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"top\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"top-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"top-end\"\n        )\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-left\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"left-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"left-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"left\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"left\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"left-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"left-end\"\n        )\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-right\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"right-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"right-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"right\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"right\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"right-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"right-end\"\n        )\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-bottom\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"bottom-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"bottom-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"bottom\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"bottom\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"bottom-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"bottom-end\"\n        )\n      )\n    )\n  );\n},}\n\n/***/ }),\n\n/***/ \"Y9Zo\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\nconst title = <span>Title</span>;\\n\\nReactDOM.render(\\n  <div>\\n    <Popover content=\\\"hover event\\\" title={title} trigger=\\\"hover\\\">\\n      <Button type=\\\"primary\\\">Hover me</Button>\\n    </Popover>\\n    <Popover content=\\\"click event\\\" title={title} trigger=\\\"click\\\">\\n      <Button style={{marginLeft: 10}} type=\\\"primary\\\">Click me</Button>\\n    </Popover>\\n    <Popover content=\\\"focus event\\\" title={title} trigger=\\\"focus\\\">\\n      <Button style={{marginLeft: 10}} type=\\\"primary\\\">Focus me</Button>\\n    </Popover>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":3,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Trigger\"},\"subtitle\":{\"zh-CN\":\"<p>事件触发, <code>hover</code>, <code>click</code>, <code>focus</code></p>\\n\",\"en-US\":\"<p>Trigger events.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var title = React.createElement(\n    \"span\",\n    null,\n    \"Title\"\n  );\n  return React.createElement(\n    \"div\",\n    null,\n    React.createElement(\n      _dashkitUi.Popover,\n      {\n        content: \"hover event\",\n        title: title,\n        trigger: \"hover\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\"\n        },\n        \"Hover me\"\n      )\n    ),\n    React.createElement(\n      _dashkitUi.Popover,\n      {\n        content: \"click event\",\n        title: title,\n        trigger: \"click\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          style: {\n            marginLeft: 10\n          },\n          type: \"primary\"\n        },\n        \"Click me\"\n      )\n    ),\n    React.createElement(\n      _dashkitUi.Popover,\n      {\n        content: \"focus event\",\n        title: title,\n        trigger: \"focus\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          style: {\n            marginLeft: 10\n          },\n          type: \"primary\"\n        },\n        \"Focus me\"\n      )\n    )\n  );\n},}\n\n/***/ }),\n\n/***/ \"bkki\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\nconst title = <span>Title</span>;\\n\\nReactDOM.render(\\n  <Popover content=\\\"prompt text\\\" title={title}>\\n    <Button>click me</Button>\\n  </Popover>,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本的使用。</p>\\n\",\"en-US\":\"<p>The most basic usage.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  var title = React.createElement(\n    \"span\",\n    null,\n    \"Title\"\n  );\n  return React.createElement(\n    _dashkitUi.Popover,\n    {\n      content: \"prompt text\",\n      title: title\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      null,\n      \"click me\"\n    )\n  );\n},}\n\n/***/ }),\n\n/***/ \"cXBp\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  markdown: \"<h1>Popover</h1>\\n<p>A simple popup menu to provide extra information or operations.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>total</td>\\n<td>total number of pages</td>\\n<td>number</td>\\n<td>0</td>\\n</tr>\\n<tr>\\n<td>current</td>\\n<td>current page</td>\\n<td>number</td>\\n<td>1</td>\\n</tr>\\n<tr>\\n<td>pageSize</td>\\n<td>number of each page</td>\\n<td>number</td>\\n<td>20</td>\\n</tr>\\n<tr>\\n<td>range</td>\\n<td>number of display pages</td>\\n<td>number</td>\\n<td>7</td>\\n</tr>\\n<tr>\\n<td>onChange</td>\\n<td><code>change</code> event handler</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': __webpack_require__(\"bkki\"), \n'controlled': __webpack_require__(\"oFJZ\"), \n'placement': __webpack_require__(\"UCuY\"), \n'trigger': __webpack_require__(\"Y9Zo\")}};\n\n/***/ }),\n\n/***/ \"oFJZ\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\n\\nclass App extends React.Component {\\n  state = {\\n    visible: false,\\n  }\\n\\n  render() {\\n    return (\\n      <Popover\\n        content={<a onClick={this.hide} style={{cursor: 'pointer'}}>Close</a>}\\n        title=\\\"Title\\\"\\n        trigger=\\\"click\\\"\\n        visible={this.state.visible}\\n      >\\n        <Button onClick={this.handleClick}>Click me</Button>\\n      </Popover>\\n    );\\n  }\\n\\n  handleClick = () => {\\n    const { visible } = this.state;\\n    this.setState({\\n      visible: !visible\\n    });\\n  }\\n\\n  hide = () => {\\n    this.setState({\\n      visible: false,\\n    });\\n  }\\n}\\n\\nReactDOM.render(\\n  <App />,\\n  mountNode\\n);\\n\",meta: {\"order\":3,\"title\":{\"zh-CN\":\"受控组件\",\"en-US\":\"Controlled Component\"},\"subtitle\":{\"zh-CN\":\"<p>受控组件的用法</p>\\n\",\"en-US\":\"<p>Controlled Component usage.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var App = function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, App);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        visible: false\n      }, _this.handleClick = function () {\n        var visible = _this.state.visible;\n\n        _this.setState({\n          visible: !visible\n        });\n      }, _this.hide = function () {\n        _this.setState({\n          visible: false\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(App, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(\n          _dashkitUi.Popover,\n          {\n            content: React.createElement(\n              \"a\",\n              {\n                onClick: this.hide,\n                style: {\n                  cursor: 'pointer'\n                }\n              },\n              \"Close\"\n            ),\n            title: \"Title\",\n            trigger: \"click\",\n            visible: this.state.visible\n          },\n          React.createElement(\n            _dashkitUi.Button,\n            {\n              onClick: this.handleClick\n            },\n            \"Click me\"\n          )\n        );\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  return React.createElement(App, null);\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/6.e8a0664.js","module.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\n\\nconst title = <span>Title</span>;\\nconst content = (\\n  <div>\\n    <p>Content</p>\\n    <p>Content</p>\\n  </div>\\n);\\n\\nReactDOM.render(\\n  <div className=\\\"popover-box\\\">\\n    <div className=\\\"popover-box-top\\\">\\n      <Popover content={content} title={title} placement=\\\"top-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">top-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"top\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">top</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"top-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">top-end</Button>\\n      </Popover>\\n    </div>\\n    <div className=\\\"popover-box-left\\\">\\n      <Popover content={content} title={title} placement=\\\"left-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">left-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"left\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">left</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"left-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">left-end</Button>\\n      </Popover>\\n    </div>\\n    <div className=\\\"popover-box-right\\\">\\n      <Popover content={content} title={title} placement=\\\"right-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">right-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"right\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">right</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"right-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">right-end</Button>\\n      </Popover>\\n    </div>\\n    <div className=\\\"popover-box-bottom\\\">\\n      <Popover content={content} title={title} placement=\\\"bottom-start\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">bottom-start</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"bottom\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">bottom</Button>\\n      </Popover>\\n      <Popover content={content} title={title} placement=\\\"bottom-end\\\" trigger=\\\"focus\\\">\\n        <Button className=\\\"popover-button\\\">bottom-end</Button>\\n      </Popover>\\n    </div>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":1,\"title\":{\"zh-CN\":\"位置\",\"en-US\":\"Placement\"},\"subtitle\":{\"zh-CN\":\"<p>位置</p>\\n\",\"en-US\":\"<p>The attribute <code>placement</code> determines the position of the popover. Its value is <code>[orientation]-[alignment]</code> with four orientations <code>top</code>, <code>left</code>, <code>right</code>, <code>bottom</code> and three alignments <code>start</code>, <code>end</code>, <code>null</code>, and the default alignment is null.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var title = React.createElement(\n    \"span\",\n    null,\n    \"Title\"\n  );\n  var content = React.createElement(\n    \"div\",\n    null,\n    React.createElement(\n      \"p\",\n      null,\n      \"Content\"\n    ),\n    React.createElement(\n      \"p\",\n      null,\n      \"Content\"\n    )\n  );\n  return React.createElement(\n    \"div\",\n    {\n      className: \"popover-box\"\n    },\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-top\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"top-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"top-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"top\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"top\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"top-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"top-end\"\n        )\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-left\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"left-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"left-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"left\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"left\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"left-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"left-end\"\n        )\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-right\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"right-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"right-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"right\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"right\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"right-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"right-end\"\n        )\n      )\n    ),\n    React.createElement(\n      \"div\",\n      {\n        className: \"popover-box-bottom\"\n      },\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"bottom-start\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"bottom-start\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"bottom\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"bottom\"\n        )\n      ),\n      React.createElement(\n        _dashkitUi.Popover,\n        {\n          content: content,\n          title: title,\n          placement: \"bottom-end\",\n          trigger: \"focus\"\n        },\n        React.createElement(\n          _dashkitUi.Button,\n          {\n            className: \"popover-button\"\n          },\n          \"bottom-end\"\n        )\n      )\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/popover/placement.md\n// module id = UCuY\n// module chunks = 6 45","module.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\nconst title = <span>Title</span>;\\n\\nReactDOM.render(\\n  <div>\\n    <Popover content=\\\"hover event\\\" title={title} trigger=\\\"hover\\\">\\n      <Button type=\\\"primary\\\">Hover me</Button>\\n    </Popover>\\n    <Popover content=\\\"click event\\\" title={title} trigger=\\\"click\\\">\\n      <Button style={{marginLeft: 10}} type=\\\"primary\\\">Click me</Button>\\n    </Popover>\\n    <Popover content=\\\"focus event\\\" title={title} trigger=\\\"focus\\\">\\n      <Button style={{marginLeft: 10}} type=\\\"primary\\\">Focus me</Button>\\n    </Popover>\\n  </div>,\\n  mountNode\\n);\\n\",meta: {\"order\":3,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Trigger\"},\"subtitle\":{\"zh-CN\":\"<p>事件触发, <code>hover</code>, <code>click</code>, <code>focus</code></p>\\n\",\"en-US\":\"<p>Trigger events.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var title = React.createElement(\n    \"span\",\n    null,\n    \"Title\"\n  );\n  return React.createElement(\n    \"div\",\n    null,\n    React.createElement(\n      _dashkitUi.Popover,\n      {\n        content: \"hover event\",\n        title: title,\n        trigger: \"hover\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          type: \"primary\"\n        },\n        \"Hover me\"\n      )\n    ),\n    React.createElement(\n      _dashkitUi.Popover,\n      {\n        content: \"click event\",\n        title: title,\n        trigger: \"click\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          style: {\n            marginLeft: 10\n          },\n          type: \"primary\"\n        },\n        \"Click me\"\n      )\n    ),\n    React.createElement(\n      _dashkitUi.Popover,\n      {\n        content: \"focus event\",\n        title: title,\n        trigger: \"focus\"\n      },\n      React.createElement(\n        _dashkitUi.Button,\n        {\n          style: {\n            marginLeft: 10\n          },\n          type: \"primary\"\n        },\n        \"Focus me\"\n      )\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/popover/trigger.md\n// module id = Y9Zo\n// module chunks = 6 44","module.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\nconst title = <span>Title</span>;\\n\\nReactDOM.render(\\n  <Popover content=\\\"prompt text\\\" title={title}>\\n    <Button>click me</Button>\\n  </Popover>,\\n  mountNode\\n);\\n\",meta: {\"order\":0,\"title\":{\"zh-CN\":\"基本\",\"en-US\":\"Basic\"},\"subtitle\":{\"zh-CN\":\"<p>基本的使用。</p>\\n\",\"en-US\":\"<p>The most basic usage.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  var title = React.createElement(\n    \"span\",\n    null,\n    \"Title\"\n  );\n  return React.createElement(\n    _dashkitUi.Popover,\n    {\n      content: \"prompt text\",\n      title: title\n    },\n    React.createElement(\n      _dashkitUi.Button,\n      null,\n      \"click me\"\n    )\n  );\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/popover/basic.md\n// module id = bkki\n// module chunks = 6 47","module.exports = {\n  markdown: \"<h1>Popover</h1>\\n<p>A simple popup menu to provide extra information or operations.</p>\\n<div id=\\\"demos\\\"></div>\\n<h2>API</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Property</th>\\n<th>Description</th>\\n<th>Type</th>\\n<th>Default</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>className</td>\\n<td>className of the component</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n<tr>\\n<td>total</td>\\n<td>total number of pages</td>\\n<td>number</td>\\n<td>0</td>\\n</tr>\\n<tr>\\n<td>current</td>\\n<td>current page</td>\\n<td>number</td>\\n<td>1</td>\\n</tr>\\n<tr>\\n<td>pageSize</td>\\n<td>number of each page</td>\\n<td>number</td>\\n<td>20</td>\\n</tr>\\n<tr>\\n<td>range</td>\\n<td>number of display pages</td>\\n<td>number</td>\\n<td>7</td>\\n</tr>\\n<tr>\\n<td>onChange</td>\\n<td><code>change</code> event handler</td>\\n<td>-</td>\\n<td>-</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\n demos: {'basic': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/popover/basic.md'), \n'controlled': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/popover/controlled.md'), \n'placement': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/popover/placement.md'), \n'trigger': require('/Users/zhaohao.yuan/Sites/github/dashkit-ui/docs/popover/trigger.md')}};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/popover/en-US.md\n// module id = cXBp\n// module chunks = 6","module.exports = {code: \"import { Popover, Button } from 'dashkit-ui';\\n\\nclass App extends React.Component {\\n  state = {\\n    visible: false,\\n  }\\n\\n  render() {\\n    return (\\n      <Popover\\n        content={<a onClick={this.hide} style={{cursor: 'pointer'}}>Close</a>}\\n        title=\\\"Title\\\"\\n        trigger=\\\"click\\\"\\n        visible={this.state.visible}\\n      >\\n        <Button onClick={this.handleClick}>Click me</Button>\\n      </Popover>\\n    );\\n  }\\n\\n  handleClick = () => {\\n    const { visible } = this.state;\\n    this.setState({\\n      visible: !visible\\n    });\\n  }\\n\\n  hide = () => {\\n    this.setState({\\n      visible: false,\\n    });\\n  }\\n}\\n\\nReactDOM.render(\\n  <App />,\\n  mountNode\\n);\\n\",meta: {\"order\":3,\"title\":{\"zh-CN\":\"受控组件\",\"en-US\":\"Controlled Component\"},\"subtitle\":{\"zh-CN\":\"<p>受控组件的用法</p>\\n\",\"en-US\":\"<p>Controlled Component usage.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var App = function (_React$Component) {\n    _inherits(App, _React$Component);\n\n    function App() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, App);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = App.__proto__ || Object.getPrototypeOf(App)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        visible: false\n      }, _this.handleClick = function () {\n        var visible = _this.state.visible;\n\n        _this.setState({\n          visible: !visible\n        });\n      }, _this.hide = function () {\n        _this.setState({\n          visible: false\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(App, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(\n          _dashkitUi.Popover,\n          {\n            content: React.createElement(\n              \"a\",\n              {\n                onClick: this.hide,\n                style: {\n                  cursor: 'pointer'\n                }\n              },\n              \"Close\"\n            ),\n            title: \"Title\",\n            trigger: \"click\",\n            visible: this.state.visible\n          },\n          React.createElement(\n            _dashkitUi.Button,\n            {\n              onClick: this.handleClick\n            },\n            \"Click me\"\n          )\n        );\n      }\n    }]);\n\n    return App;\n  }(React.Component);\n\n  return React.createElement(App, null);\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/popover/controlled.md\n// module id = oFJZ\n// module chunks = 6 46"],"sourceRoot":""}