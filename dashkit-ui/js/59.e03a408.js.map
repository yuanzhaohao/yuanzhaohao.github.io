{"version":3,"sources":["webpack:///js/59.e03a408.js","webpack:///./docs/menu/theme.md"],"names":["webpackJsonp","jj1g","module","exports","__webpack_require__","code","meta","order","title","zh-CN","en-US","subtitle","__content","preview","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","key","protoProps","staticProps","_dashkitUi","Item","Menu","SubMenu","MenuDemo","_React$Component","_ref","_temp","_this","_ret","this","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","state","theme","handleSwitchChange","checked","setState","createElement","className","Switch","onChange","checkedChildren","unCheckedChildren","defaultActive","defaultOpeneds","icon","index","disabled","Component"],"mappings":"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","file":"js/59.e03a408.js","sourcesContent":["webpackJsonp([59],{\n\n/***/ \"jj1g\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {code: \"import { Menu, Switch } from 'dashkit-ui';\\nconst { Item, SubMenu } = Menu;\\n\\nclass MenuDemo extends React.Component {\\n  state = {\\n    theme: 'light',\\n  };\\n  render() {\\n    const { theme } = this.state;\\n    return (\\n      <div className=\\\"menu-theme\\\">\\n        <Switch\\n          className=\\\"menu-theme-switch\\\"\\n          checked={theme === 'dark'}\\n          onChange={this.handleSwitchChange}\\n          checkedChildren=\\\"Dark\\\"\\n          unCheckedChildren=\\\"Light\\\"\\n        />\\n\\n        <Menu defaultActive=\\\"Dashboard\\\" defaultOpeneds={['Layouts', 'Menu']} theme={theme}>\\n          <Item icon=\\\"home\\\" index=\\\"Dashboard\\\">Dashboard</Item>\\n          <Item icon=\\\"clipboard\\\" index=\\\"Getting started\\\">Getting started</Item>\\n          <SubMenu icon=\\\"book-open\\\" title=\\\"Components\\\" index=\\\"Components\\\">\\n            <Item index=\\\"Alert\\\">Alert</Item>\\n            <Item index=\\\"button\\\">Button</Item>\\n            <Item index=\\\"input\\\">Input</Item>\\n            <Item index=\\\"Layout\\\">Layout</Item>\\n            <SubMenu title=\\\"Menu\\\" index=\\\"Menu\\\">\\n              <Item index=\\\"MenuItem\\\">MenuItem</Item>\\n              <Item index=\\\"MenuSubmenu\\\">MenuSubmenu</Item>\\n            </SubMenu>\\n          </SubMenu>\\n          <Item icon=\\\"git-branch\\\" index=\\\"Changelog\\\" disabled>Changelog</Item>\\n          <SubMenu icon=\\\"layout\\\" index=\\\"Layouts\\\" title=\\\"Layouts\\\">\\n            <Item index=\\\"Slidenav\\\">Slidenav</Item>\\n            <Item index=\\\"Topnav\\\">Topnav</Item>\\n          </SubMenu>\\n          <SubMenu icon=\\\"file\\\" index=\\\"Empty submenu\\\" title=\\\"Empty submenu\\\">\\n          </SubMenu>\\n        </Menu>\\n      </div>\\n    );\\n  }\\n\\n  handleSwitchChange = (checked) => {\\n    this.setState({\\n      theme: checked ? 'dark' : 'light',\\n    });\\n  }\\n}\\n\\nReactDOM.render(\\n  <MenuDemo />,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"主题\",\"en-US\":\"Theme\"},\"subtitle\":{\"zh-CN\":\"<p>主题。</p>\\n\",\"en-US\":\"<p>Provides <code>light</code> and <code>dark</code> themes.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = __webpack_require__(\"GiK3\");\n\n  var ReactDOM = __webpack_require__(\"O27J\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = __webpack_require__(\"qMEF\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Item = _dashkitUi.Menu.Item,\n      SubMenu = _dashkitUi.Menu.SubMenu;\n\n  var MenuDemo = function (_React$Component) {\n    _inherits(MenuDemo, _React$Component);\n\n    function MenuDemo() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, MenuDemo);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MenuDemo.__proto__ || Object.getPrototypeOf(MenuDemo)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        theme: 'light'\n      }, _this.handleSwitchChange = function (checked) {\n        _this.setState({\n          theme: checked ? 'dark' : 'light'\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(MenuDemo, [{\n      key: \"render\",\n      value: function render() {\n        var theme = this.state.theme;\n        return React.createElement(\n          \"div\",\n          {\n            className: \"menu-theme\"\n          },\n          React.createElement(_dashkitUi.Switch, {\n            className: \"menu-theme-switch\",\n            checked: theme === 'dark',\n            onChange: this.handleSwitchChange,\n            checkedChildren: \"Dark\",\n            unCheckedChildren: \"Light\"\n          }),\n          React.createElement(\n            _dashkitUi.Menu,\n            {\n              defaultActive: \"Dashboard\",\n              defaultOpeneds: ['Layouts', 'Menu'],\n              theme: theme\n            },\n            React.createElement(\n              Item,\n              {\n                icon: \"home\",\n                index: \"Dashboard\"\n              },\n              \"Dashboard\"\n            ),\n            React.createElement(\n              Item,\n              {\n                icon: \"clipboard\",\n                index: \"Getting started\"\n              },\n              \"Getting started\"\n            ),\n            React.createElement(\n              SubMenu,\n              {\n                icon: \"book-open\",\n                title: \"Components\",\n                index: \"Components\"\n              },\n              React.createElement(\n                Item,\n                {\n                  index: \"Alert\"\n                },\n                \"Alert\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"button\"\n                },\n                \"Button\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"input\"\n                },\n                \"Input\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"Layout\"\n                },\n                \"Layout\"\n              ),\n              React.createElement(\n                SubMenu,\n                {\n                  title: \"Menu\",\n                  index: \"Menu\"\n                },\n                React.createElement(\n                  Item,\n                  {\n                    index: \"MenuItem\"\n                  },\n                  \"MenuItem\"\n                ),\n                React.createElement(\n                  Item,\n                  {\n                    index: \"MenuSubmenu\"\n                  },\n                  \"MenuSubmenu\"\n                )\n              )\n            ),\n            React.createElement(\n              Item,\n              {\n                icon: \"git-branch\",\n                index: \"Changelog\",\n                disabled: true\n              },\n              \"Changelog\"\n            ),\n            React.createElement(\n              SubMenu,\n              {\n                icon: \"layout\",\n                index: \"Layouts\",\n                title: \"Layouts\"\n              },\n              React.createElement(\n                Item,\n                {\n                  index: \"Slidenav\"\n                },\n                \"Slidenav\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"Topnav\"\n                },\n                \"Topnav\"\n              )\n            ),\n            React.createElement(SubMenu, {\n              icon: \"file\",\n              index: \"Empty submenu\",\n              title: \"Empty submenu\"\n            })\n          )\n        );\n      }\n    }]);\n\n    return MenuDemo;\n  }(React.Component);\n\n  return React.createElement(MenuDemo, null);\n},}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/59.e03a408.js","module.exports = {code: \"import { Menu, Switch } from 'dashkit-ui';\\nconst { Item, SubMenu } = Menu;\\n\\nclass MenuDemo extends React.Component {\\n  state = {\\n    theme: 'light',\\n  };\\n  render() {\\n    const { theme } = this.state;\\n    return (\\n      <div className=\\\"menu-theme\\\">\\n        <Switch\\n          className=\\\"menu-theme-switch\\\"\\n          checked={theme === 'dark'}\\n          onChange={this.handleSwitchChange}\\n          checkedChildren=\\\"Dark\\\"\\n          unCheckedChildren=\\\"Light\\\"\\n        />\\n\\n        <Menu defaultActive=\\\"Dashboard\\\" defaultOpeneds={['Layouts', 'Menu']} theme={theme}>\\n          <Item icon=\\\"home\\\" index=\\\"Dashboard\\\">Dashboard</Item>\\n          <Item icon=\\\"clipboard\\\" index=\\\"Getting started\\\">Getting started</Item>\\n          <SubMenu icon=\\\"book-open\\\" title=\\\"Components\\\" index=\\\"Components\\\">\\n            <Item index=\\\"Alert\\\">Alert</Item>\\n            <Item index=\\\"button\\\">Button</Item>\\n            <Item index=\\\"input\\\">Input</Item>\\n            <Item index=\\\"Layout\\\">Layout</Item>\\n            <SubMenu title=\\\"Menu\\\" index=\\\"Menu\\\">\\n              <Item index=\\\"MenuItem\\\">MenuItem</Item>\\n              <Item index=\\\"MenuSubmenu\\\">MenuSubmenu</Item>\\n            </SubMenu>\\n          </SubMenu>\\n          <Item icon=\\\"git-branch\\\" index=\\\"Changelog\\\" disabled>Changelog</Item>\\n          <SubMenu icon=\\\"layout\\\" index=\\\"Layouts\\\" title=\\\"Layouts\\\">\\n            <Item index=\\\"Slidenav\\\">Slidenav</Item>\\n            <Item index=\\\"Topnav\\\">Topnav</Item>\\n          </SubMenu>\\n          <SubMenu icon=\\\"file\\\" index=\\\"Empty submenu\\\" title=\\\"Empty submenu\\\">\\n          </SubMenu>\\n        </Menu>\\n      </div>\\n    );\\n  }\\n\\n  handleSwitchChange = (checked) => {\\n    this.setState({\\n      theme: checked ? 'dark' : 'light',\\n    });\\n  }\\n}\\n\\nReactDOM.render(\\n  <MenuDemo />,\\n  mountNode\\n);\\n\",meta: {\"order\":2,\"title\":{\"zh-CN\":\"主题\",\"en-US\":\"Theme\"},\"subtitle\":{\"zh-CN\":\"<p>主题。</p>\\n\",\"en-US\":\"<p>Provides <code>light</code> and <code>dark</code> themes.</p>\\n\"},\"__content\":\"\"},preview: function previewer() {\n  var React = require(\"react\");\n\n  var ReactDOM = require(\"react-dom\");\n\n  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n  var _dashkitUi = require(\"dashkit-ui\");\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n  var Item = _dashkitUi.Menu.Item,\n      SubMenu = _dashkitUi.Menu.SubMenu;\n\n  var MenuDemo = function (_React$Component) {\n    _inherits(MenuDemo, _React$Component);\n\n    function MenuDemo() {\n      var _ref;\n\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, MenuDemo);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MenuDemo.__proto__ || Object.getPrototypeOf(MenuDemo)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n        theme: 'light'\n      }, _this.handleSwitchChange = function (checked) {\n        _this.setState({\n          theme: checked ? 'dark' : 'light'\n        });\n      }, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(MenuDemo, [{\n      key: \"render\",\n      value: function render() {\n        var theme = this.state.theme;\n        return React.createElement(\n          \"div\",\n          {\n            className: \"menu-theme\"\n          },\n          React.createElement(_dashkitUi.Switch, {\n            className: \"menu-theme-switch\",\n            checked: theme === 'dark',\n            onChange: this.handleSwitchChange,\n            checkedChildren: \"Dark\",\n            unCheckedChildren: \"Light\"\n          }),\n          React.createElement(\n            _dashkitUi.Menu,\n            {\n              defaultActive: \"Dashboard\",\n              defaultOpeneds: ['Layouts', 'Menu'],\n              theme: theme\n            },\n            React.createElement(\n              Item,\n              {\n                icon: \"home\",\n                index: \"Dashboard\"\n              },\n              \"Dashboard\"\n            ),\n            React.createElement(\n              Item,\n              {\n                icon: \"clipboard\",\n                index: \"Getting started\"\n              },\n              \"Getting started\"\n            ),\n            React.createElement(\n              SubMenu,\n              {\n                icon: \"book-open\",\n                title: \"Components\",\n                index: \"Components\"\n              },\n              React.createElement(\n                Item,\n                {\n                  index: \"Alert\"\n                },\n                \"Alert\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"button\"\n                },\n                \"Button\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"input\"\n                },\n                \"Input\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"Layout\"\n                },\n                \"Layout\"\n              ),\n              React.createElement(\n                SubMenu,\n                {\n                  title: \"Menu\",\n                  index: \"Menu\"\n                },\n                React.createElement(\n                  Item,\n                  {\n                    index: \"MenuItem\"\n                  },\n                  \"MenuItem\"\n                ),\n                React.createElement(\n                  Item,\n                  {\n                    index: \"MenuSubmenu\"\n                  },\n                  \"MenuSubmenu\"\n                )\n              )\n            ),\n            React.createElement(\n              Item,\n              {\n                icon: \"git-branch\",\n                index: \"Changelog\",\n                disabled: true\n              },\n              \"Changelog\"\n            ),\n            React.createElement(\n              SubMenu,\n              {\n                icon: \"layout\",\n                index: \"Layouts\",\n                title: \"Layouts\"\n              },\n              React.createElement(\n                Item,\n                {\n                  index: \"Slidenav\"\n                },\n                \"Slidenav\"\n              ),\n              React.createElement(\n                Item,\n                {\n                  index: \"Topnav\"\n                },\n                \"Topnav\"\n              )\n            ),\n            React.createElement(SubMenu, {\n              icon: \"file\",\n              index: \"Empty submenu\",\n              title: \"Empty submenu\"\n            })\n          )\n        );\n      }\n    }]);\n\n    return MenuDemo;\n  }(React.Component);\n\n  return React.createElement(MenuDemo, null);\n},}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./docs/menu/theme.md\n// module id = jj1g\n// module chunks = 14 59"],"sourceRoot":""}