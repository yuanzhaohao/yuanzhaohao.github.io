webpackJsonp([0,32,33,34,35,36,37,38,39],{"4Pmf":function(e,t,n){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xs={12} />\n    </Row>\n    <Row>\n      <Col xs={1} />\n      <Col xs={11} />\n    </Row>\n    <Row>\n      <Col xs={2} />\n      <Col xs={10} />\n    </Row>\n    <Row>\n      <Col xs={3} />\n      <Col xs={9} />\n    </Row>\n    <Row>\n      <Col xs={4} />\n      <Col xs={8} />\n    </Row>\n    <Row>\n      <Col xs={5} />\n      <Col xs={7} />\n    </Row>\n    <Row>\n      <Col xs={6} />\n      <Col xs={6} />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:1,title:{"zh-CN":"流式布局","en-US":"Fluid Layout"},subtitle:{"zh-CN":"<p>流式布局.</p>\n","en-US":"<p>Percent based widths allow fluid resizing of columns and rows.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(d,null,e.createElement(s,{xs:12})),e.createElement(d,null,e.createElement(s,{xs:1}),e.createElement(s,{xs:11})),e.createElement(d,null,e.createElement(s,{xs:2}),e.createElement(s,{xs:10})),e.createElement(d,null,e.createElement(s,{xs:3}),e.createElement(s,{xs:9})),e.createElement(d,null,e.createElement(s,{xs:4}),e.createElement(s,{xs:8})),e.createElement(d,null,e.createElement(s,{xs:5}),e.createElement(s,{xs:7})),e.createElement(d,null,e.createElement(s,{xs:6}),e.createElement(s,{xs:6})))}}},"7XTx":function(e,t,n){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-alignment">\n    <h4 className="grid-title grid-title-first">.first-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">1</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">2</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">3</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">4</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">5</div>\n            </Col>\n            <Col xs={2} first="xs">\n              <div className="grid-box grid-box-nested">6</div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title grid-title">.last-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={2} last="xs">\n              <div className="grid-box grid-box-nested">1</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">2</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">3</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">4</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">5</div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-first">6</div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n  </div>,\n  mountNode\n);\n',meta:{order:6,title:{"zh-CN":"位置","en-US":"Reordering"},subtitle:{"zh-CN":"<p>可以使用<code>first</code> <code>last</code>控制位置。</p>\n","en-US":"<p>Use <code>first</code> <code>last</code> to reorder columns.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-alignment"},e.createElement("h4",{className:"grid-title grid-title-first"},".first-"),e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(d,null,e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"1")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"2")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"3")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"4")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"5")),e.createElement(s,{xs:2,first:"xs"},e.createElement("div",{className:"grid-box grid-box-nested"},"6")))))),e.createElement("h4",{className:"grid-title grid-title"},".last-"),e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(d,null,e.createElement(s,{xs:2,last:"xs"},e.createElement("div",{className:"grid-box grid-box-nested"},"1")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"2")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"3")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"4")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"5")),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-first"},"6")))))))}}},"8FfA":function(e,t,n){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xs={12} sm={3} md={2} lg={1} />\n      <Col xs={6} sm={6} md={8} lg={10} />\n      <Col xs={6} sm={3} md={2} lg={1} />\n    </Row>\n\n    <Row>\n      <Col xs={12} sm={3} md={2} lg={1} />\n      <Col xs={12} sm={9} md={10} lg={11} />\n    </Row>\n\n    <Row>\n      <Col xs={10} sm={6} md={8} lg={10} />\n      <Col xs={2} sm={6} md={4} lg={2} />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:0,title:{"zh-CN":"响应式布局","en-US":"Responsive Layout"},subtitle:{"zh-CN":"<p>基本用法。</p>\n","en-US":"<p>Responsive modifiers enable specifying different column sizes, offsets, alignment and distribution at xs, sm, md &amp; lg viewport widths.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(d,null,e.createElement(s,{xs:12,sm:3,md:2,lg:1}),e.createElement(s,{xs:6,sm:6,md:8,lg:10}),e.createElement(s,{xs:6,sm:3,md:2,lg:1})),e.createElement(d,null,e.createElement(s,{xs:12,sm:3,md:2,lg:1}),e.createElement(s,{xs:12,sm:9,md:10,lg:11})),e.createElement(d,null,e.createElement(s,{xs:10,sm:6,md:8,lg:10}),e.createElement(s,{xs:2,sm:6,md:4,lg:2})))}}},"9PhR":function(e,t,n){e.exports={markdown:'<h1>Grid</h1>\n<p>A grid system based on the flex display property, which refer to <a href="http://flexboxgrid.com/">Flexbox Grid</a>.</p>\n<div id="demos"></div>\n<h3>API</h3>\n<h4>Grid.Row</h4>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>size</td>\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>type</td>\n<td>button type, can be set to <code>primary</code> <code>success</code> <code>warning</code> <code>danger</code> <code>info</code> <code>link</code> or ommited</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>outline</td>\n<td>determine whether it\'s a outline button</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>round</td>\n<td>determine whether it\'s a round button</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>disable the button</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>determine whether it\'s loading</td>\n<td>boolean</td>\n<td>false</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>button icon, see <code>Icon</code> component</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td><code>click</code> event handler</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>Grid.Col</h4>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td>className of the component</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>defaultValue</td>\n<td>Default selected value</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>size</td>\n<td>button size, can be set to <code>small</code> <code>large</code> or omitted</td>\n<td>string</td>\n<td>default</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td><code>change</code> event handler</td>\n<td><code>Function(e: event)</code></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n',demos:{alignment:n("xWk8"),"auto-width":n("IGsB"),distribution:n("KylI"),fluid:n("4Pmf"),nested:n("rGi/"),offset:n("zBCS"),recording:n("7XTx"),response:n("8FfA")}}},IGsB:function(e,t,n){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xs />\n      <Col xs />\n    </Row>\n    <Row>\n      <Col xs />\n      <Col xs />\n      <Col xs />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:3,title:{"zh-CN":"自动撑满","en-US":"Auto width"},subtitle:{"zh-CN":"<p>自动等分</p>\n","en-US":"<p>Add any number of auto sizing columns to a row. Let the grid figure it out.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(d,null,e.createElement(s,{xs:!0}),e.createElement(s,{xs:!0})),e.createElement(d,null,e.createElement(s,{xs:!0}),e.createElement(s,{xs:!0}),e.createElement(s,{xs:!0})))}}},KylI:function(e,t,n){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-alignment">\n    <h4 className="grid-title grid-title-first">.around-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row around="xs">\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title grid-title-first">.between-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row between="xs">\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n            <Col xs={2}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n  </div>,\n  mountNode\n);\n',meta:{order:6,title:{"zh-CN":"分布","en-US":"Distribution"},subtitle:{"zh-CN":"<p>可以使用<code>around</code> <code>between</code>, 将元素对齐到行开头或结尾以及列的顶部、底部或中心</p>\n","en-US":"<p>Use <code>around</code> <code>between</code> to distribute the contents of a row or column.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-alignment"},e.createElement("h4",{className:"grid-title grid-title-first"},".around-"),e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(d,{around:"xs"},e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title grid-title-first"},".between-"),e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(d,{between:"xs"},e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(s,{xs:2},e.createElement("div",{className:"grid-box grid-box-nested"})))))))}}},"rGi/":function(e,t,n){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-nested">\n    <Row>\n      <Col xs={7}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={9}>\n              <div className="grid-box grid-box-first">\n                <Row>\n                  <Col xs={4}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                  <Col xs={8}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col xs={3}>\n              <div className="grid-box grid-box-first">\n                <Row>\n                  <Col xs>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n      <Col xs={5}>\n        <div className="grid-box">\n          <Row>\n            <Col xs={12}>\n              <div className="grid-box grid-box-first">\n                <Row>\n                  <Col xs={6}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                  <Col xs={6}>\n                    <div className="grid-box grid-box-nested"></div>\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n  </div>,\n  mountNode\n);\n',meta:{order:4,title:{"zh-CN":"嵌套","en-US":"Nested Grids"},subtitle:{"zh-CN":"<p>在网格中嵌套网格。</p>\n","en-US":"<p>Nest grids inside grids inside grids.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-nested"},e.createElement(d,null,e.createElement(s,{xs:7},e.createElement("div",{className:"grid-box"},e.createElement(d,null,e.createElement(s,{xs:9},e.createElement("div",{className:"grid-box grid-box-first"},e.createElement(d,null,e.createElement(s,{xs:4},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(s,{xs:8},e.createElement("div",{className:"grid-box grid-box-nested"}))))),e.createElement(s,{xs:3},e.createElement("div",{className:"grid-box grid-box-first"},e.createElement(d,null,e.createElement(s,{xs:!0},e.createElement("div",{className:"grid-box grid-box-nested"})))))))),e.createElement(s,{xs:5},e.createElement("div",{className:"grid-box"},e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box grid-box-first"},e.createElement(d,null,e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})),e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"}))))))))))}}},xWk8:function(e,t,n){e.exports={code:'import { Grid } from \'dashkit-ui\';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className="grid-alignment">\n    <h4 className="grid-title grid-title-first">.start-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row start="xs">\n            <Col xs={6}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.center-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row center="xs">\n            <Col xs={6}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.end-</h4>\n    <Row>\n      <Col xs={12}>\n        <div className="grid-box">\n          <Row centender="xs">\n            <Col xs={6}>\n              <div className="grid-box grid-box-nested"></div>\n            </Col>\n          </Row>\n        </div>\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.top-</h4>\n    <Row top="xs">\n      <Col xs={6}>\n        <div className="grid-box grid-box-large" />\n      </Col>\n      <Col xs={6}>\n        <div className="grid-box" />\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.middle-</h4>\n    <Row middle="xs">\n      <Col xs={6}>\n        <div className="grid-box grid-box-large" />\n      </Col>\n      <Col xs={6}>\n        <div className="grid-box" />\n      </Col>\n    </Row>\n\n    <h4 className="grid-title">.bottom-</h4>\n    <Row bottom="xs">\n      <Col xs={6}>\n        <div className="grid-box grid-box-large" />\n      </Col>\n      <Col xs={6}>\n        <div className="grid-box" />\n      </Col>\n    </Row>\n\n  </div>,\n  mountNode\n);\n',meta:{order:5,title:{"zh-CN":"对齐","en-US":"Alignment"},subtitle:{"zh-CN":"<p>可以使用<code>start</code> <code>middle</code> <code>end</code>, <code>center</code>, <code>top</code>, 将元素对齐到行开头或结尾以及列的顶部、底部或中心</p>\n","en-US":"<p>Add classes to align elements to the start or end of row as well as the top, bottom, or center of a column</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-alignment"},e.createElement("h4",{className:"grid-title grid-title-first"},".start-"),e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(d,{start:"xs"},e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title"},".center-"),e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(d,{center:"xs"},e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title"},".end-"),e.createElement(d,null,e.createElement(s,{xs:12},e.createElement("div",{className:"grid-box"},e.createElement(d,{centender:"xs"},e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-nested"})))))),e.createElement("h4",{className:"grid-title"},".top-"),e.createElement(d,{top:"xs"},e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-large"})),e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box"}))),e.createElement("h4",{className:"grid-title"},".middle-"),e.createElement(d,{middle:"xs"},e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-large"})),e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box"}))),e.createElement("h4",{className:"grid-title"},".bottom-"),e.createElement(d,{bottom:"xs"},e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box grid-box-large"})),e.createElement(s,{xs:6},e.createElement("div",{className:"grid-box"}))))}}},zBCS:function(e,t,n){e.exports={code:"import { Grid } from 'dashkit-ui';\nconst { Row, Col } = Grid;\n\nReactDOM.render(\n  <div className=\"grid-list\">\n    <Row>\n      <Col xsOffset={11} xs={1} />\n      <Col xsOffset={10} xs={2} />\n      <Col xsOffset={9} xs={3} />\n      <Col xsOffset={8} xs={4} />\n      <Col xsOffset={7} xs={5} />\n      <Col xsOffset={6} xs={6} />\n      <Col xsOffset={5} xs={7} />\n      <Col xsOffset={4} xs={8} />\n      <Col xsOffset={3} xs={9} />\n      <Col xsOffset={2} xs={10} />\n      <Col xsOffset={1} xs={11} />\n    </Row>\n  </div>,\n  mountNode\n);\n",meta:{order:2,title:{"zh-CN":"偏移","en-US":"Offsets"},subtitle:{"zh-CN":"<p>偏移，通过设置<code>offset</code>参数.</p>\n","en-US":"<p>Offset a column.</p>\n"},__content:""},preview:function(){var e=n("GiK3"),t=(n("O27J"),n("qMEF")),d=t.Grid.Row,s=t.Grid.Col;return e.createElement("div",{className:"grid-list"},e.createElement(d,null,e.createElement(s,{xsOffset:11,xs:1}),e.createElement(s,{xsOffset:10,xs:2}),e.createElement(s,{xsOffset:9,xs:3}),e.createElement(s,{xsOffset:8,xs:4}),e.createElement(s,{xsOffset:7,xs:5}),e.createElement(s,{xsOffset:6,xs:6}),e.createElement(s,{xsOffset:5,xs:7}),e.createElement(s,{xsOffset:4,xs:8}),e.createElement(s,{xsOffset:3,xs:9}),e.createElement(s,{xsOffset:2,xs:10}),e.createElement(s,{xsOffset:1,xs:11})))}}}});
//# sourceMappingURL=0.4f6fd82.js.map