{"version":3,"sources":["webpack:///js/1.17a2dfe.js","webpack:///./src/component/index/index.less?cf39","webpack:///./src/lib/three-ply.js","webpack:///./src/lib/PLYLoader.js","webpack:///./src/component/index/index.tsx","webpack:///./src/component/index/index.less"],"names":["webpackJsonp","4dK/","module","exports","__webpack_require__","content","i","options","hmr","transform","insertInto","undefined","locals","Ajwm","PLY","container","filePath","onWindowResize","camera","aspect","clientWidth","clientHeight","renderer","setSize","animate","requestAnimationFrame","render","timer","Date","now","position","x","Math","sin","z","cos","lookAt","cameraTarget","scene","THREE","PerspectiveCamera","window","innerWidth","innerHeight","set","Vector3","Scene","background","Color","fog","Fog","plane","Mesh","PlaneBufferGeometry","MeshPhongMaterial","color","specular","rotation","PI","y","add","receiveShadow","PLYLoader","load","geometry","computeVertexNormals","material","MeshStandardMaterial","mesh","scale","multiplyScalar","castShadow","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","appendChild","domElement","addEventListener","HemisphereLight","Object","defineProperty","value","default","HVQN","manager","this","DefaultLoadingManager","propertyNameMapping","prototype","constructor","url","onLoad","onProgress","onError","scope","loader","FileLoader","setResponseType","text","parse","setPropertyNameMapping","mapping","data","parseHeader","patternHeader","headerText","headerLength","result","exec","length","currentElement","lineType","lineValues","header","comments","elements","lines","split","line","trim","shift","join","format","version","push","name","count","parseInt","properties","propertValues","property","type","countType","itemType","console","log","parseASCIINumber","n","parseFloat","parseASCIIElement","values","element","list","j","parseASCII","buffer","indices","vertices","normals","uvs","colors","patternBody","body","currentElementCount","handleElement","postProcess","BufferGeometry","setIndex","addAttribute","Float32BufferAttribute","computeBoundingSphere","elementName","nx","ny","nz","s","t","red","green","blue","vertex_indices","vertex_index","binaryRead","dataview","at","little_endian","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","binaryReadElement","read","ArrayBuffer","LoaderUtils","decodeText","Uint8Array","DataView","loc","UpER","__webpack_exports__","mapStateToProps","state","index","__WEBPACK_IMPORTED_MODULE_0__index_less__","__WEBPACK_IMPORTED_MODULE_1_react__","__WEBPACK_IMPORTED_MODULE_2_react_redux__","__WEBPACK_IMPORTED_MODULE_3__lib_three_ply__","__WEBPACK_IMPORTED_MODULE_3__lib_three_ply___default","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","create","mapDispatchToProps","Index","_super","props","_this","call","threeApp","componentDidMount","a","refs","className","ref","u7lB"],"mappings":"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","file":"js/1.17a2dfe.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ \"4dK/\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(\"u7lB\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(\"MTIv\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n\n/***/ \"Ajwm\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(\"HVQN\");\n\nfunction PLY(container, filePath) {\n\n  var camera, cameraTarget, scene, renderer;\n\n  init();\n  animate();\n\n  function init() {\n\n    camera = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 1, 5);\n    camera.position.set(1, 0, 1);\n\n    cameraTarget = new THREE.Vector3(0, 0, 0);\n\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xffffff);\n    scene.fog = new THREE.Fog(0xffffff, 0, 15);\n\n    // Ground\n\n    var plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(40, 40), new THREE.MeshPhongMaterial({\n      color: 0xffffff,\n      specular: 0xffffff\n    }));\n    plane.rotation.x = -Math.PI / 2;\n    plane.position.y = -0.3;\n    scene.add(plane);\n\n    plane.receiveShadow = true;\n\n    // PLY file\n\n    var loader = new THREE.PLYLoader();\n    loader.load(filePath, function (geometry) {\n\n      geometry.computeVertexNormals();\n\n      var material = new THREE.MeshStandardMaterial({\n        color: 0xffffff\n        // flatShading: true\n      });\n      var mesh = new THREE.Mesh(geometry, material);\n      mesh.scale.multiplyScalar(0.0004);\n\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n\n      scene.add(mesh);\n    });\n\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    container.appendChild(renderer.domElement);\n\n    window.addEventListener('resize', onWindowResize, false);\n  }\n\n  scene.add(new THREE.HemisphereLight(0xffffff));\n\n  function onWindowResize() {\n\n    camera.aspect = container.clientWidth / container.clientHeight;\n\n    renderer.setSize(container.clientWidth, container.clientHeight);\n  }\n\n  function animate() {\n\n    requestAnimationFrame(animate);\n\n    render();\n  }\n\n  function render() {\n\n    var timer = Date.now() * 0.0005;\n\n    camera.position.x = Math.sin(timer) * 2.5;\n    camera.position.z = Math.cos(timer) * 2.5;\n\n    camera.lookAt(cameraTarget);\n\n    renderer.render(scene, camera);\n  }\n}\n\nexports.default = PLY;\n\n/***/ }),\n\n/***/ \"HVQN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @author Wei Meng / http://about.me/menway\n *\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tvar loader = new THREE.PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n */\n\nTHREE.PLYLoader = function (manager) {\n\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\n  this.propertyNameMapping = {};\n};\n\nTHREE.PLYLoader.prototype = {\n\n  constructor: THREE.PLYLoader,\n\n  load: function load(url, onLoad, onProgress, onError) {\n\n    var scope = this;\n\n    var loader = new THREE.FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (text) {\n\n      onLoad(scope.parse(text));\n    }, onProgress, onError);\n  },\n\n  setPropertyNameMapping: function setPropertyNameMapping(mapping) {\n\n    this.propertyNameMapping = mapping;\n  },\n\n  parse: function parse(data) {\n\n    function parseHeader(data) {\n\n      var patternHeader = /ply([\\s\\S]*)end_header\\s/;\n      var headerText = '';\n      var headerLength = 0;\n      var result = patternHeader.exec(data);\n\n      if (result !== null) {\n\n        headerText = result[1];\n        headerLength = result[0].length;\n      }\n\n      var header = {\n        comments: [],\n        elements: [],\n        headerLength: headerLength\n      };\n\n      var lines = headerText.split('\\n');\n      var currentElement;\n      var lineType, lineValues;\n\n      function make_ply_element_property(propertValues, propertyNameMapping) {\n\n        var property = {\n          type: propertValues[0]\n        };\n\n        if (property.type === 'list') {\n\n          property.name = propertValues[3];\n          property.countType = propertValues[1];\n          property.itemType = propertValues[2];\n        } else {\n\n          property.name = propertValues[1];\n        }\n\n        if (property.name in propertyNameMapping) {\n\n          property.name = propertyNameMapping[property.name];\n        }\n\n        return property;\n      }\n\n      for (var i = 0; i < lines.length; i++) {\n\n        var line = lines[i];\n        line = line.trim();\n\n        if (line === '') continue;\n\n        lineValues = line.split(/\\s+/);\n        lineType = lineValues.shift();\n        line = lineValues.join(' ');\n\n        switch (lineType) {\n\n          case 'format':\n\n            header.format = lineValues[0];\n            header.version = lineValues[1];\n\n            break;\n\n          case 'comment':\n\n            header.comments.push(line);\n\n            break;\n\n          case 'element':\n\n            if (currentElement !== undefined) {\n\n              header.elements.push(currentElement);\n            }\n\n            currentElement = {};\n            currentElement.name = lineValues[0];\n            currentElement.count = parseInt(lineValues[1]);\n            currentElement.properties = [];\n\n            break;\n\n          case 'property':\n\n            currentElement.properties.push(make_ply_element_property(lineValues, scope.propertyNameMapping));\n\n            break;\n\n          default:\n\n            console.log('unhandled', lineType, lineValues);\n\n        }\n      }\n\n      if (currentElement !== undefined) {\n\n        header.elements.push(currentElement);\n      }\n\n      return header;\n    }\n\n    function parseASCIINumber(n, type) {\n\n      switch (type) {\n\n        case 'char':\n        case 'uchar':\n        case 'short':\n        case 'ushort':\n        case 'int':\n        case 'uint':\n        case 'int8':\n        case 'uint8':\n        case 'int16':\n        case 'uint16':\n        case 'int32':\n        case 'uint32':\n\n          return parseInt(n);\n\n        case 'float':\n        case 'double':\n        case 'float32':\n        case 'float64':\n\n          return parseFloat(n);\n\n      }\n    }\n\n    function parseASCIIElement(properties, line) {\n\n      var values = line.split(/\\s+/);\n\n      var element = {};\n\n      for (var i = 0; i < properties.length; i++) {\n\n        if (properties[i].type === 'list') {\n\n          var list = [];\n          var n = parseASCIINumber(values.shift(), properties[i].countType);\n\n          for (var j = 0; j < n; j++) {\n\n            list.push(parseASCIINumber(values.shift(), properties[i].itemType));\n          }\n\n          element[properties[i].name] = list;\n        } else {\n\n          element[properties[i].name] = parseASCIINumber(values.shift(), properties[i].type);\n        }\n      }\n\n      return element;\n    }\n\n    function parseASCII(data, header) {\n\n      // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n      var buffer = {\n        indices: [],\n        vertices: [],\n        normals: [],\n        uvs: [],\n        colors: []\n      };\n\n      var result;\n\n      var patternBody = /end_header\\s([\\s\\S]*)$/;\n      var body = '';\n      if ((result = patternBody.exec(data)) !== null) {\n\n        body = result[1];\n      }\n\n      var lines = body.split('\\n');\n      var currentElement = 0;\n      var currentElementCount = 0;\n\n      for (var i = 0; i < lines.length; i++) {\n\n        var line = lines[i];\n        line = line.trim();\n        if (line === '') {\n\n          continue;\n        }\n\n        if (currentElementCount >= header.elements[currentElement].count) {\n\n          currentElement++;\n          currentElementCount = 0;\n        }\n\n        var element = parseASCIIElement(header.elements[currentElement].properties, line);\n\n        handleElement(buffer, header.elements[currentElement].name, element);\n\n        currentElementCount++;\n      }\n\n      return postProcess(buffer);\n    }\n\n    function postProcess(buffer) {\n\n      var geometry = new THREE.BufferGeometry();\n\n      // mandatory buffer data\n\n      if (buffer.indices.length > 0) {\n\n        geometry.setIndex(buffer.indices);\n      }\n\n      geometry.addAttribute('position', new THREE.Float32BufferAttribute(buffer.vertices, 3));\n\n      // optional buffer data\n\n      if (buffer.normals.length > 0) {\n\n        geometry.addAttribute('normal', new THREE.Float32BufferAttribute(buffer.normals, 3));\n      }\n\n      if (buffer.uvs.length > 0) {\n\n        geometry.addAttribute('uv', new THREE.Float32BufferAttribute(buffer.uvs, 2));\n      }\n\n      if (buffer.colors.length > 0) {\n\n        geometry.addAttribute('color', new THREE.Float32BufferAttribute(buffer.colors, 3));\n      }\n\n      geometry.computeBoundingSphere();\n\n      return geometry;\n    }\n\n    function handleElement(buffer, elementName, element) {\n\n      if (elementName === 'vertex') {\n\n        buffer.vertices.push(element.x, element.y, element.z);\n\n        if ('nx' in element && 'ny' in element && 'nz' in element) {\n\n          buffer.normals.push(element.nx, element.ny, element.nz);\n        }\n\n        if ('s' in element && 't' in element) {\n\n          buffer.uvs.push(element.s, element.t);\n        }\n\n        if ('red' in element && 'green' in element && 'blue' in element) {\n\n          buffer.colors.push(element.red / 255.0, element.green / 255.0, element.blue / 255.0);\n        }\n      } else if (elementName === 'face') {\n\n        var vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\n        if (vertex_indices.length === 3) {\n\n          buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[2]);\n        } else if (vertex_indices.length === 4) {\n\n          buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[3]);\n          buffer.indices.push(vertex_indices[1], vertex_indices[2], vertex_indices[3]);\n        }\n      }\n    }\n\n    function binaryRead(dataview, at, type, little_endian) {\n\n      switch (type) {\n\n        // corespondences for non-specific length types here match rply:\n        case 'int8':\n        case 'char':\n          return [dataview.getInt8(at), 1];\n        case 'uint8':\n        case 'uchar':\n          return [dataview.getUint8(at), 1];\n        case 'int16':\n        case 'short':\n          return [dataview.getInt16(at, little_endian), 2];\n        case 'uint16':\n        case 'ushort':\n          return [dataview.getUint16(at, little_endian), 2];\n        case 'int32':\n        case 'int':\n          return [dataview.getInt32(at, little_endian), 4];\n        case 'uint32':\n        case 'uint':\n          return [dataview.getUint32(at, little_endian), 4];\n        case 'float32':\n        case 'float':\n          return [dataview.getFloat32(at, little_endian), 4];\n        case 'float64':\n        case 'double':\n          return [dataview.getFloat64(at, little_endian), 8];\n\n      }\n    }\n\n    function binaryReadElement(dataview, at, properties, little_endian) {\n\n      var element = {};\n      var result,\n          read = 0;\n\n      for (var i = 0; i < properties.length; i++) {\n\n        if (properties[i].type === 'list') {\n\n          var list = [];\n\n          result = binaryRead(dataview, at + read, properties[i].countType, little_endian);\n          var n = result[0];\n          read += result[1];\n\n          for (var j = 0; j < n; j++) {\n\n            result = binaryRead(dataview, at + read, properties[i].itemType, little_endian);\n            list.push(result[0]);\n            read += result[1];\n          }\n\n          element[properties[i].name] = list;\n        } else {\n\n          result = binaryRead(dataview, at + read, properties[i].type, little_endian);\n          element[properties[i].name] = result[0];\n          read += result[1];\n        }\n      }\n\n      return [element, read];\n    }\n\n    function parseBinary(data, header) {\n\n      var buffer = {\n        indices: [],\n        vertices: [],\n        normals: [],\n        uvs: [],\n        colors: []\n      };\n\n      var little_endian = header.format === 'binary_little_endian';\n      var body = new DataView(data, header.headerLength);\n      var result,\n          loc = 0;\n\n      for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\n\n        for (var currentElementCount = 0; currentElementCount < header.elements[currentElement].count; currentElementCount++) {\n\n          result = binaryReadElement(body, loc, header.elements[currentElement].properties, little_endian);\n          loc += result[1];\n          var element = result[0];\n\n          handleElement(buffer, header.elements[currentElement].name, element);\n        }\n      }\n\n      return postProcess(buffer);\n    }\n\n    //\n\n    var geometry;\n    var scope = this;\n\n    if (data instanceof ArrayBuffer) {\n\n      var text = THREE.LoaderUtils.decodeText(new Uint8Array(data));\n      var header = parseHeader(text);\n\n      geometry = header.format === 'ascii' ? parseASCII(text, header) : parseBinary(data, header);\n    } else {\n\n      geometry = parseASCII(data, parseHeader(data));\n    }\n\n    return geometry;\n  }\n\n};\n\n/***/ }),\n\n/***/ \"UpER\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_less__ = __webpack_require__(\"4dK/\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_less___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__index_less__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(\"GiK3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(\"RH2O\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_three_ply__ = __webpack_require__(\"Ajwm\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_three_ply___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__lib_three_ply__);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n;\nvar mapDispatchToProps = {};\nvar Index = /** @class */ (function (_super) {\n    __extends(Index, _super);\n    function Index(props) {\n        var _this = _super.call(this, props) || this;\n        _this.threeApp = 0;\n        return _this;\n    }\n    Index.prototype.componentDidMount = function () {\n        this.threeApp = new __WEBPACK_IMPORTED_MODULE_3__lib_three_ply___default.a(this.refs['three-canvas'], './static/Lucy100k.ply');\n    };\n    Index.prototype.render = function () {\n        return (__WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"index-container\" },\n            __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"index-inner\", ref: \"three-canvas\" })));\n    };\n    return Index;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]));\nfunction mapStateToProps(state) {\n    return state.index;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps, mapDispatchToProps)(Index));\n\n\n/***/ }),\n\n/***/ \"u7lB\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".index-container {\\n  width: 100%;\\n}\\n.index-inner {\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: #fff;\\n  overflow: hidden;\\n}[data-rem=\\\"true\\\"] .index-inner {\\n  width: 10rem\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/1.17a2dfe.js","\nvar content = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./index.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./index.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./index.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/component/index/index.less\n// module id = 4dK/\n// module chunks = 1","import './PLYLoader';\n\nfunction PLY(container, filePath) {\n  \n  var camera, cameraTarget, scene, renderer;\n\n  init();\n  animate();\n\n  function init() {\n\n    camera = new THREE.PerspectiveCamera(20, window.innerWidth / window.innerHeight, 1, 5);\n    camera.position.set(1, 0, 1);\n\n    cameraTarget = new THREE.Vector3(0, 0, 0);\n\n    scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xffffff);\n    scene.fog = new THREE.Fog(0xffffff, 0, 15);\n\n\n    // Ground\n\n    var plane = new THREE.Mesh(\n      new THREE.PlaneBufferGeometry(40, 40),\n      new THREE.MeshPhongMaterial({\n        color: 0xffffff,\n        specular: 0xffffff\n      })\n    );\n    plane.rotation.x = -Math.PI / 2;\n    plane.position.y = -0.3;\n    scene.add(plane);\n\n    plane.receiveShadow = true;\n\n\n    // PLY file\n\n    var loader = new THREE.PLYLoader();\n    loader.load(filePath, function (geometry) {\n      \n      geometry.computeVertexNormals();\n\n      var material = new THREE.MeshStandardMaterial({\n        color: 0xffffff,\n        // flatShading: true\n      });\n      var mesh = new THREE.Mesh(geometry, material);\n      mesh.scale.multiplyScalar(0.0004);\n\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n\n      scene.add(mesh);\n    });\n\n    renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    container.appendChild(renderer.domElement);\n\n    window.addEventListener('resize', onWindowResize, false);\n\n  }\n\n  scene.add(new THREE.HemisphereLight(0xffffff));\n\n\n  function onWindowResize() {\n\n    camera.aspect = container.clientWidth / container.clientHeight;\n\n    renderer.setSize(container.clientWidth, container.clientHeight);\n\n  }\n\n  function animate() {\n\n    requestAnimationFrame(animate);\n\n    render();\n  }\n\n  function render() {\n\n    var timer = Date.now() * 0.0005;\n\n    camera.position.x = Math.sin(timer) * 2.5;\n    camera.position.z = Math.cos(timer) * 2.5;\n\n    camera.lookAt(cameraTarget);\n\n    renderer.render(scene, camera);\n\n  }\n}\n\n\nexport default PLY;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ply.js","/**\n * @author Wei Meng / http://about.me/menway\n *\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\n * File Format or the Stanford Triangle Format).\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *\tvar loader = new THREE.PLYLoader();\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *\t\tscene.add( new THREE.Mesh( geometry ) );\n *\n *\t} );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *\tdiffuse_red: 'red',\n *\tdiffuse_green: 'green',\n *\tdiffuse_blue: 'blue'\n * } );\n *\n */\n\n\nTHREE.PLYLoader = function (manager) {\n\n  this.manager = (manager !== undefined) ? manager : THREE.DefaultLoadingManager;\n\n  this.propertyNameMapping = {};\n\n};\n\nTHREE.PLYLoader.prototype = {\n\n  constructor: THREE.PLYLoader,\n\n  load: function (url, onLoad, onProgress, onError) {\n\n    var scope = this;\n\n    var loader = new THREE.FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (text) {\n\n      onLoad(scope.parse(text));\n\n    }, onProgress, onError);\n\n  },\n\n  setPropertyNameMapping: function (mapping) {\n\n    this.propertyNameMapping = mapping;\n\n  },\n\n  parse: function (data) {\n\n    function parseHeader(data) {\n\n      var patternHeader = /ply([\\s\\S]*)end_header\\s/;\n      var headerText = '';\n      var headerLength = 0;\n      var result = patternHeader.exec(data);\n\n      if (result !== null) {\n\n        headerText = result[1];\n        headerLength = result[0].length;\n\n      }\n\n      var header = {\n        comments: [],\n        elements: [],\n        headerLength: headerLength\n      };\n\n      var lines = headerText.split('\\n');\n      var currentElement;\n      var lineType, lineValues;\n\n      function make_ply_element_property(propertValues, propertyNameMapping) {\n\n        var property = {\n          type: propertValues[0]\n        };\n\n        if (property.type === 'list') {\n\n          property.name = propertValues[3];\n          property.countType = propertValues[1];\n          property.itemType = propertValues[2];\n\n        } else {\n\n          property.name = propertValues[1];\n\n        }\n\n        if (property.name in propertyNameMapping) {\n\n          property.name = propertyNameMapping[property.name];\n\n        }\n\n        return property;\n\n      }\n\n      for (var i = 0; i < lines.length; i++) {\n\n        var line = lines[i];\n        line = line.trim();\n\n        if (line === '') continue;\n\n        lineValues = line.split(/\\s+/);\n        lineType = lineValues.shift();\n        line = lineValues.join(' ');\n\n        switch (lineType) {\n\n          case 'format':\n\n            header.format = lineValues[0];\n            header.version = lineValues[1];\n\n            break;\n\n          case 'comment':\n\n            header.comments.push(line);\n\n            break;\n\n          case 'element':\n\n            if (currentElement !== undefined) {\n\n              header.elements.push(currentElement);\n\n            }\n\n            currentElement = {};\n            currentElement.name = lineValues[0];\n            currentElement.count = parseInt(lineValues[1]);\n            currentElement.properties = [];\n\n            break;\n\n          case 'property':\n\n            currentElement.properties.push(make_ply_element_property(lineValues, scope.propertyNameMapping));\n\n            break;\n\n\n          default:\n\n            console.log('unhandled', lineType, lineValues);\n\n        }\n\n      }\n\n      if (currentElement !== undefined) {\n\n        header.elements.push(currentElement);\n\n      }\n\n      return header;\n\n    }\n\n    function parseASCIINumber(n, type) {\n\n      switch (type) {\n\n        case 'char':\n        case 'uchar':\n        case 'short':\n        case 'ushort':\n        case 'int':\n        case 'uint':\n        case 'int8':\n        case 'uint8':\n        case 'int16':\n        case 'uint16':\n        case 'int32':\n        case 'uint32':\n\n          return parseInt(n);\n\n        case 'float':\n        case 'double':\n        case 'float32':\n        case 'float64':\n\n          return parseFloat(n);\n\n      }\n\n    }\n\n    function parseASCIIElement(properties, line) {\n\n      var values = line.split(/\\s+/);\n\n      var element = {};\n\n      for (var i = 0; i < properties.length; i++) {\n\n        if (properties[i].type === 'list') {\n\n          var list = [];\n          var n = parseASCIINumber(values.shift(), properties[i].countType);\n\n          for (var j = 0; j < n; j++) {\n\n            list.push(parseASCIINumber(values.shift(), properties[i].itemType));\n\n          }\n\n          element[properties[i].name] = list;\n\n        } else {\n\n          element[properties[i].name] = parseASCIINumber(values.shift(), properties[i].type);\n\n        }\n\n      }\n\n      return element;\n\n    }\n\n    function parseASCII(data, header) {\n\n      // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n      var buffer = {\n        indices: [],\n        vertices: [],\n        normals: [],\n        uvs: [],\n        colors: []\n      };\n\n      var result;\n\n      var patternBody = /end_header\\s([\\s\\S]*)$/;\n      var body = '';\n      if ((result = patternBody.exec(data)) !== null) {\n\n        body = result[1];\n\n      }\n\n      var lines = body.split('\\n');\n      var currentElement = 0;\n      var currentElementCount = 0;\n\n      for (var i = 0; i < lines.length; i++) {\n\n        var line = lines[i];\n        line = line.trim();\n        if (line === '') {\n\n          continue;\n\n        }\n\n        if (currentElementCount >= header.elements[currentElement].count) {\n\n          currentElement++;\n          currentElementCount = 0;\n\n        }\n\n        var element = parseASCIIElement(header.elements[currentElement].properties, line);\n\n        handleElement(buffer, header.elements[currentElement].name, element);\n\n        currentElementCount++;\n\n      }\n\n      return postProcess(buffer);\n\n    }\n\n    function postProcess(buffer) {\n\n      var geometry = new THREE.BufferGeometry();\n\n      // mandatory buffer data\n\n      if (buffer.indices.length > 0) {\n\n        geometry.setIndex(buffer.indices);\n\n      }\n\n      geometry.addAttribute('position', new THREE.Float32BufferAttribute(buffer.vertices, 3));\n\n      // optional buffer data\n\n      if (buffer.normals.length > 0) {\n\n        geometry.addAttribute('normal', new THREE.Float32BufferAttribute(buffer.normals, 3));\n\n      }\n\n      if (buffer.uvs.length > 0) {\n\n        geometry.addAttribute('uv', new THREE.Float32BufferAttribute(buffer.uvs, 2));\n\n      }\n\n      if (buffer.colors.length > 0) {\n\n        geometry.addAttribute('color', new THREE.Float32BufferAttribute(buffer.colors, 3));\n\n      }\n\n      geometry.computeBoundingSphere();\n\n      return geometry;\n\n    }\n\n    function handleElement(buffer, elementName, element) {\n\n      if (elementName === 'vertex') {\n\n        buffer.vertices.push(element.x, element.y, element.z);\n\n        if ('nx' in element && 'ny' in element && 'nz' in element) {\n\n          buffer.normals.push(element.nx, element.ny, element.nz);\n\n        }\n\n        if ('s' in element && 't' in element) {\n\n          buffer.uvs.push(element.s, element.t);\n\n        }\n\n        if ('red' in element && 'green' in element && 'blue' in element) {\n\n          buffer.colors.push(element.red / 255.0, element.green / 255.0, element.blue / 255.0);\n\n        }\n\n      } else if (elementName === 'face') {\n\n        var vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\n        if (vertex_indices.length === 3) {\n\n          buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[2]);\n\n        } else if (vertex_indices.length === 4) {\n\n          buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[3]);\n          buffer.indices.push(vertex_indices[1], vertex_indices[2], vertex_indices[3]);\n\n        }\n\n      }\n\n    }\n\n    function binaryRead(dataview, at, type, little_endian) {\n\n      switch (type) {\n\n        // corespondences for non-specific length types here match rply:\n        case 'int8':\n        case 'char':\n          return [dataview.getInt8(at), 1];\n        case 'uint8':\n        case 'uchar':\n          return [dataview.getUint8(at), 1];\n        case 'int16':\n        case 'short':\n          return [dataview.getInt16(at, little_endian), 2];\n        case 'uint16':\n        case 'ushort':\n          return [dataview.getUint16(at, little_endian), 2];\n        case 'int32':\n        case 'int':\n          return [dataview.getInt32(at, little_endian), 4];\n        case 'uint32':\n        case 'uint':\n          return [dataview.getUint32(at, little_endian), 4];\n        case 'float32':\n        case 'float':\n          return [dataview.getFloat32(at, little_endian), 4];\n        case 'float64':\n        case 'double':\n          return [dataview.getFloat64(at, little_endian), 8];\n\n      }\n\n    }\n\n    function binaryReadElement(dataview, at, properties, little_endian) {\n\n      var element = {};\n      var result, read = 0;\n\n      for (var i = 0; i < properties.length; i++) {\n\n        if (properties[i].type === 'list') {\n\n          var list = [];\n\n          result = binaryRead(dataview, at + read, properties[i].countType, little_endian);\n          var n = result[0];\n          read += result[1];\n\n          for (var j = 0; j < n; j++) {\n\n            result = binaryRead(dataview, at + read, properties[i].itemType, little_endian);\n            list.push(result[0]);\n            read += result[1];\n\n          }\n\n          element[properties[i].name] = list;\n\n        } else {\n\n          result = binaryRead(dataview, at + read, properties[i].type, little_endian);\n          element[properties[i].name] = result[0];\n          read += result[1];\n\n        }\n\n      }\n\n      return [element, read];\n\n    }\n\n    function parseBinary(data, header) {\n\n      var buffer = {\n        indices: [],\n        vertices: [],\n        normals: [],\n        uvs: [],\n        colors: []\n      };\n\n      var little_endian = (header.format === 'binary_little_endian');\n      var body = new DataView(data, header.headerLength);\n      var result, loc = 0;\n\n      for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\n\n        for (var currentElementCount = 0; currentElementCount < header.elements[currentElement].count; currentElementCount++) {\n\n          result = binaryReadElement(body, loc, header.elements[currentElement].properties, little_endian);\n          loc += result[1];\n          var element = result[0];\n\n          handleElement(buffer, header.elements[currentElement].name, element);\n\n        }\n\n      }\n\n      return postProcess(buffer);\n\n    }\n\n    //\n\n    var geometry;\n    var scope = this;\n\n    if (data instanceof ArrayBuffer) {\n\n      var text = THREE.LoaderUtils.decodeText(new Uint8Array(data));\n      var header = parseHeader(text);\n\n      geometry = header.format === 'ascii' ? parseASCII(text, header) : parseBinary(data, header);\n\n    } else {\n\n      geometry = parseASCII(data, parseHeader(data));\n\n    }\n\n    return geometry;\n\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/PLYLoader.js","import './index.less'\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ThreePly from '../../lib/three-ply';\n\ninterface Props {};\nconst mapDispatchToProps = {};\n\nclass Index extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    this.threeApp = 0;\n  }\n\n  public componentDidMount() {\n    this.threeApp = new ThreePly(\n      this.refs['three-canvas'],\n      './static/Lucy100k.ply',\n      // 'https://threejs.org/examples/models/ply/binary/Lucy100k.ply'\n    );\n  }\n\n  public render() {\n    return (\n      <div className=\"index-container\">\n        <div className=\"index-inner\" ref=\"three-canvas\"></div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return state.index\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/index/index.tsx","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".index-container {\\n  width: 100%;\\n}\\n.index-inner {\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: #fff;\\n  overflow: hidden;\\n}[data-rem=\\\"true\\\"] .index-inner {\\n  width: 10rem\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/happypack/loader.js?id=css!./node_modules/postcss-loader/lib!./node_modules/happypack/loader.js?id=less!./src/component/index/index.less\n// module id = u7lB\n// module chunks = 1"],"sourceRoot":""}