{"version":3,"sources":["webpack:///js/0.a52f112.js","webpack:///./src/component/detail/detail.less","webpack:///./src/lib/three-obj.js","webpack:///./src/lib/OBJLoader.js","webpack:///./src/lib/TrackballControls.js","webpack:///./src/component/detail/detail.tsx","webpack:///./src/lib/MTLLoader.js","webpack:///./src/lib/LoaderSupport.js","webpack:///./src/component/detail/detail.less?bc81"],"names":["webpackJsonp","G3cC","module","exports","__webpack_require__","push","i","VbqQ","ThreeOBJ","element","params","arguments","length","undefined","Error","this","renderer","canvas","aspectRatio","recalcAspectRatio","scene","cameraDefaults","posCamera","THREE","Vector3","posCameraTarget","near","far","fov","camera","cameraTarget","controls","filePath","mtlFilePath","loadedCallback","callback","Object","defineProperty","value","prototype","initGL","WebGLRenderer","antialias","autoClear","setClearColor","Scene","PerspectiveCamera","resetCamera","TrackballControls","domElement","ambientLight","AmbientLight","add","pointLight","PointLight","initContent","scope","mtlLoader","MTLLoader","objLoader","OBJLoader","loadedFunction","geometry","position","y","load","materials","preload","setMaterials","resizeDisplayGL","handleResize","setSize","offsetWidth","offsetHeight","updateCamera","copy","aspect","lookAt","updateProjectionMatrix","render","clear","update","destroy","default","Ww9e","ParserState","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","_finalize","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","manager","DefaultLoadingManager","object_pattern","material_library_pattern","material_use_pattern","constructor","url","onLoad","onProgress","onError","loader","FileLoader","setPath","path","text","parse","console","time","indexOf","replace","lines","split","line","lineFirstChar","result","trimLeft","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","toLowerCase","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","addAttribute","Float32BufferAttribute","computeVertexNormals","createdMaterials","miLen","sourceMaterial","create","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","materialLine","lights","MeshPhongMaterial","flatShading","vertexColors","VertexColors","NoColors","mesh","addGroup","LineSegments","Points","Mesh","timeEnd","YM5a","keydown","event","_this","enabled","window","removeEventListener","_prevState","_state","STATE","NONE","keyCode","keys","ROTATE","noRotate","ZOOM","noZoom","PAN","noPan","keyup","addEventListener","mousedown","preventDefault","stopPropagation","button","_panStart","getMouseOnScreen","pageX","pageY","_panEnd","_zoomStart","_zoomEnd","_moveCurr","getMouseOnCircle","_movePrev","document","mousemove","mouseup","dispatchEvent","startEvent","endEvent","mousewheel","deltaMode","deltaY","touchstart","touches","TOUCH_ROTATE","TOUCH_ZOOM_PAN","dx","dy","_touchZoomDistanceEnd","_touchZoomDistanceStart","Math","sqrt","x","touchmove","touchend","contextmenu","screen","left","top","width","height","rotateSpeed","zoomSpeed","panSpeed","staticMoving","dynamicDampingFactor","minDistance","maxDistance","Infinity","target","lastPosition","_eye","Vector2","_lastAxis","_lastAngle","target0","position0","up0","up","changeEvent","innerWidth","innerHeight","box","getBoundingClientRect","d","ownerDocument","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","handleEvent","vector","set","rotateCamera","angle","axis","quaternion","Quaternion","eyeDirection","objectUpDirection","objectSidewaysDirection","moveDirection","sub","normalize","crossVectors","setLength","setFromAxisAngle","applyQuaternion","zoomCamera","factor","multiplyScalar","panCamera","mouseChange","objectUp","pan","lengthSq","cross","subVectors","checkDistances","addVectors","distanceToSquared","reset","dispose","EventDispatcher","bL3k","__webpack_exports__","mapStateToProps","__WEBPACK_IMPORTED_MODULE_0__detail_less__","__WEBPACK_IMPORTED_MODULE_1_react__","n","__WEBPACK_IMPORTED_MODULE_2_react_redux__","__WEBPACK_IMPORTED_MODULE_3__lib_three_obj__","__WEBPACK_IMPORTED_MODULE_3__lib_three_obj___default","__WEBPACK_IMPORTED_MODULE_4__common_spin__","__extends","extendStatics","setPrototypeOf","__proto__","p","hasOwnProperty","__","mapDispatchToProps","Detail","_super","props","call","isLoading","resizeWindow","threeApp","canvasApp","componentDidMount","refs","setState","requestAnimationFrame","componentWillUnmount","className","spinning","ref","dcbN","setTexturePath","texturePath","setBaseUrl","warn","setCrossOrigin","crossOrigin","setMaterialOptions","materialOptions","info","delimiter_pattern","materialsInfo","pos","key","ss","materialCreator","MaterialCreator","setManager","baseUrl","options","materialsArray","nameLookup","side","FrontSide","wrap","RepeatWrapping","convert","converted","mn","mat","covmat","prop","save","lprop","normalizeRGB","ignoreZeroRGBs","getIndex","materialName","getAsArray","createMaterial_","resolveURL","setMapForType","mapType","texParams","getTextureParams","map","loadTexture","repeat","scale","offset","wrapS","wrapT","color","Color","fromArray","specular","shininess","opacity","transparent","invertTrProperty","matParams","items","bumpScale","join","mapping","texture","Loader","Handlers","get","TextureLoader","l9qI","LoaderSupport","Validator","isValid","input","verifyInput","defaultValue","Callbacks","onMeshAlter","onLoadMaterials","setCallbackOnProgress","callbackOnProgress","setCallbackOnMeshAlter","callbackOnMeshAlter","setCallbackOnLoad","callbackOnLoad","setCallbackOnLoadMaterials","callbackOnLoadMaterials","LoadedMeshUserOverride","disregardMesh","alteredMesh","meshes","addMesh","isDisregardMesh","providesAlteredMeshes","ResourceDescriptor","extension","urlParts","slice","content","setContent","PrepData","modelName","logging","debug","resources","callbacks","setLogging","getCallbacks","addResource","resource","property","checkResourceDescriptorFiles","fileDesc","triple","found","ext","ignore","ArrayBuffer","Uint8Array","String","MeshBuilder","LOADER_MESH_BUILDER_VERSION","init","defaultMaterial","MeshStandardMaterial","defaultVertexColorMaterial","defaultLineMaterial","defaultPointMaterial","runtimeMaterials","updateMaterials","cmd","materialCloneInstructions","serializedMaterials","payload","_setCallbacks","processPayload","buildMeshes","meshPayload","meshName","bufferGeometry","BufferAttribute","Float32Array","buffers","indices","setIndex","Uint32Array","materialNames","createMultiMaterial","multiMaterial","multiMaterials","materialGroup","materialGroups","start","count","callbackOnMeshAlterResult","useOrgMesh","geometryType","detail","computeBoundingSphere","progressMessage","meshNames","progress","numericalValue","toFixed","CustomEvent","materialPayload","materialNameOrg","materialOrg","materialProperties","materialJson","MaterialLoader","getMaterialsJSON","materialsJSON","toJSON","getMaterials","WorkerRunnerRefImpl","scopedRunner","processMessage","self","applyProperties","parser","funcName","values","toLocaleUpperCase","callbackMeshBuilder","postMessage","callbackProgress","Parser","workerScope","log","msg","error","WorkerSupport","WORKER_SUPPORT_VERSION","Worker","Blob","URL","createObjectURL","loaderWorker","LoaderWorker","_reset","worker","runnerImplName","meshBuilder","terminateRequested","queuedMessage","started","forceCopy","setForceCopy","initWorker","code","blob","onmessage","_receiveWorkerMessage","runtimeRef","_postMessage","e","_terminate","setCallbacks","run","setTerminateRequested","terminate","setForceWorkerDataCopy","forceWorkerDataCopy","validate","functionCodeBuilder","parserName","libLocations","libPath","runnerImpl","userWorkerCode","buildObject","buildSingleton","libsContent","loadAllLibraries","locations","loadedLib","contentAsString","fileLoader","setResponseType","shift","fullName","part","objectString","Number","isInteger","internalName","basePrototypeName","ignoreFunctions","funcString","objectPart","constructorString","objectName","toString","inheritanceBlock","WorkerDirector","classDef","LOADER_WORKER_DIRECTOR_VERSION","maxQueueSize","MAX_QUEUE_SIZE","maxWebWorkers","MAX_WEB_WORKER","workerDescription","globalCallbacks","workerSupports","objectsCompleted","instructionQueue","instructionQueuePointer","callbackOnFinishedProcessing","getMaxQueueSize","getMaxWebWorkers","prepareWorkers","min","instanceNo","workerSupport","inUse","enqueueForRun","prepData","isRunning","wsKeys","processQueue","supportDesc","_kickWorkerRun","_deregister","prepDataCallbacks","wrapperOnLoad","wrapperOnProgress","wrapperOnMeshAlter","override","wrapperOnLoadMaterials","_buildLoader","updatedCallbacks","loaderCallbacks","tearDown","u223","hmr","transform","insertInto","locals"],"mappings":"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","file":"js/0.a52f112.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ \"G3cC\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".detail-container {\\n  width: 100%;\\n}\\n.detail-canvas-wrapper {\\n  position: relative;\\n  width: 100vw;\\n  height: 100vw;\\n  background-color: #fff;\\n}[data-rem=\\\"true\\\"] .detail-canvas-wrapper {\\n  width: 10rem;\\n  height: 10rem\\n}\\n.detail-canvas {\\n  width: 100%;\\n  height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"VbqQ\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__webpack_require__(\"YM5a\");\n\n__webpack_require__(\"l9qI\");\n\n__webpack_require__(\"dcbN\");\n\n__webpack_require__(\"Ww9e\");\n\n// import './OBJLoader2';\nfunction ThreeOBJ(element) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!element) {\n    throw new Error('three-obj function paramater {element} is empty');\n  }\n\n  this.renderer = null;\n  this.canvas = element;\n  this.aspectRatio = 1;\n  this.recalcAspectRatio();\n\n  this.scene = null;\n  this.cameraDefaults = {\n    posCamera: new THREE.Vector3(0, 0, 500),\n    posCameraTarget: new THREE.Vector3(0, 0, 0),\n    near: 1,\n    far: 1000,\n    fov: 25\n  };\n  this.camera = null;\n  this.cameraTarget = this.cameraDefaults.posCameraTarget;\n\n  this.controls = null;\n  this.filePath = params.filePath;\n  this.mtlFilePath = params.mtlFilePath;\n  this.loadedCallback = params.callback;\n}\n\nThreeOBJ.prototype.initGL = function () {\n  this.renderer = new THREE.WebGLRenderer({\n    canvas: this.canvas,\n    antialias: true,\n    autoClear: true\n  });\n  this.renderer.setClearColor(0xffffff);\n\n  this.scene = new THREE.Scene();\n\n  this.camera = new THREE.PerspectiveCamera(this.cameraDefaults.fov, this.aspectRatio, this.cameraDefaults.near, this.cameraDefaults.far);\n  this.resetCamera();\n  this.controls = new THREE.TrackballControls(this.camera, this.renderer.domElement);\n\n  // var ambientLight = new THREE.AmbientLight(0x000000);\n  // var directionalLight1 = new THREE.DirectionalLight(0xC0C090);\n  // var directionalLight2 = new THREE.DirectionalLight(0xC0C090);\n\n  // directionalLight1.position.set(-100, -50, 100);\n  // directionalLight2.position.set(100, 50, -100);\n\n  // this.scene.add(directionalLight1);\n  // this.scene.add(directionalLight2);\n  // this.scene.add(ambientLight);\n  var ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n  this.scene.add(ambientLight);\n\n  var pointLight = new THREE.PointLight(0xffffff, 0.8);\n  this.camera.add(pointLight);\n  this.scene.add(this.camera);\n};\n\nThreeOBJ.prototype.initContent = function () {\n\n  var scope = this;\n  var mtlLoader = new THREE.MTLLoader();\n  var objLoader = new THREE.OBJLoader();\n  var loadedFunction = function loadedFunction(geometry) {\n    geometry.position.y = -90;\n    scope.scene.add(geometry);\n    scope.loadedCallback && scope.loadedCallback();\n  };\n\n  if (this.mtlFilePath) {\n    mtlLoader.load(scope.mtlFilePath, function (materials) {\n      materials.preload();\n      objLoader.setMaterials(materials).load(scope.filePath, loadedFunction);\n    });\n  } else {\n    objLoader.load(scope.filePath, loadedFunction);\n  }\n};\n\nThreeOBJ.prototype.resizeDisplayGL = function () {\n  this.controls.handleResize();\n\n  this.recalcAspectRatio();\n  this.renderer.setSize(this.canvas.offsetWidth, this.canvas.offsetHeight, false);\n\n  this.updateCamera();\n};\n\nThreeOBJ.prototype.recalcAspectRatio = function () {\n  this.aspectRatio = this.canvas.offsetHeight === 0 ? 1 : this.canvas.offsetWidth / this.canvas.offsetHeight;\n};\n\nThreeOBJ.prototype.resetCamera = function () {\n  this.camera.position.copy(this.cameraDefaults.posCamera);\n  this.cameraTarget.copy(this.cameraDefaults.posCameraTarget);\n\n  this.updateCamera();\n};\n\nThreeOBJ.prototype.updateCamera = function () {\n  this.camera.aspect = this.aspectRatio;\n  this.camera.lookAt(this.cameraTarget);\n  this.camera.updateProjectionMatrix();\n};\n\nThreeOBJ.prototype.render = function () {\n  if (!this.renderer.autoClear) this.renderer.clear();\n  this.controls.update();\n  this.renderer.render(this.scene, this.camera);\n};\n\nThreeOBJ.prototype.destroy = function () {\n  this.renderer.clear();\n};\n\nexports.default = ThreeOBJ;\n\n/***/ }),\n\n/***/ \"Ww9e\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.OBJLoader = function () {\n\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/;\n  // mtllib file_reference\n  var material_library_pattern = /^mtllib /;\n  // usemtl material_name\n  var material_use_pattern = /^usemtl /;\n\n  function ParserState() {\n\n    var state = {\n      objects: [],\n      object: {},\n\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n\n      materialLibraries: [],\n\n      startObject: function startObject(name, fromDeclaration) {\n\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: []\n          },\n          materials: [],\n          smooth: true,\n\n          startMaterial: function startMaterial(name, libraries) {\n\n            var previous = this._finalize(false);\n\n            // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n\n              clone: function clone(index) {\n\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n\n            this.materials.push(material);\n\n            return material;\n          },\n\n          currentMaterial: function currentMaterial() {\n\n            if (this.materials.length > 0) {\n\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n\n          _finalize: function _finalize(end) {\n\n            var lastMultiMaterial = this.currentMaterial();\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            }\n\n            // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n            if (end && this.materials.length > 1) {\n\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n\n                if (this.materials[mi].groupCount <= 0) {\n\n                  this.materials.splice(mi, 1);\n                }\n              }\n            }\n\n            // Guarantee at least one empty material, this makes the creation later more straight forward.\n            if (end && this.materials.length === 0) {\n\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n\n            return lastMultiMaterial;\n          }\n        };\n\n        // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n\n      finalize: function finalize() {\n\n        if (this.object && typeof this.object._finalize === 'function') {\n\n          this.object._finalize(true);\n        }\n      },\n\n      parseVertexIndex: function parseVertexIndex(value, len) {\n\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n\n      parseNormalIndex: function parseNormalIndex(value, len) {\n\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n\n      parseUVIndex: function parseUVIndex(value, len) {\n\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n\n      addVertex: function addVertex(a, b, c) {\n\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addVertexPoint: function addVertexPoint(a) {\n\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n\n      addVertexLine: function addVertexLine(a) {\n\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n\n      addNormal: function addNormal(a, b, c) {\n\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addColor: function addColor(a, b, c) {\n\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n\n      addUV: function addUV(a, b, c) {\n\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n\n      addUVLine: function addUVLine(a) {\n\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n      },\n\n      addFace: function addFace(a, b, c, ua, ub, uc, na, nb, nc) {\n\n        var vLen = this.vertices.length;\n\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n\n        this.addVertex(ia, ib, ic);\n\n        if (ua !== undefined && ua !== '') {\n\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n        }\n\n        if (na !== undefined && na !== '') {\n\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n\n          this.addNormal(ia, ib, ic);\n        }\n\n        if (this.colors.length > 0) {\n\n          this.addColor(ia, ib, ic);\n        }\n      },\n\n      addPointGeometry: function addPointGeometry(vertices) {\n\n        this.object.geometry.type = 'Points';\n\n        var vLen = this.vertices.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n\n          this.addVertexPoint(this.parseVertexIndex(vertices[vi], vLen));\n        }\n      },\n\n      addLineGeometry: function addLineGeometry(vertices, uvs) {\n\n        this.object.geometry.type = 'Line';\n\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n\n    };\n\n    state.startObject('', false);\n\n    return state;\n  }\n\n  //\n\n  function OBJLoader(manager) {\n\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = {\n\n    constructor: OBJLoader,\n\n    load: function load(url, onLoad, onProgress, onError) {\n\n      var scope = this;\n\n      var loader = new THREE.FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n\n        onLoad(scope.parse(text));\n      }, onProgress, onError);\n    },\n\n    setPath: function setPath(value) {\n\n      this.path = value;\n\n      return this;\n    },\n\n    setMaterials: function setMaterials(materials) {\n\n      this.materials = materials;\n\n      return this;\n    },\n\n    parse: function parse(text) {\n\n      console.time('OBJLoader');\n\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n          lineFirstChar = '';\n      var lineLength = 0;\n      var result = [];\n\n      // Faster to just trim left side of the line. Use if available.\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n\n        line = lines[i];\n\n        line = trimLeft ? line.trimLeft() : line.trim();\n\n        lineLength = line.length;\n\n        if (lineLength === 0) continue;\n\n        lineFirstChar = line.charAt(0);\n\n        // @todo invoke passed in handler if any\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              if (data.length === 8) {\n\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              }\n              break;\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n\n          }\n        } else if (lineFirstChar === 'f') {\n\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = [];\n\n          // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          }\n\n          // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n          var v1 = faceVertices[0];\n\n          for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n\n          var lineParts = line.substring(1).trim().split(\" \");\n          var lineVertices = [],\n              lineUVs = [];\n\n          if (line.indexOf(\"/\") === -1) {\n\n            lineVertices = lineParts;\n          } else {\n\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n\n              var parts = lineParts[li].split(\"/\");\n\n              if (parts[0] !== \"\") lineVertices.push(parts[0]);\n              if (parts[1] !== \"\") lineUVs.push(parts[1]);\n            }\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(\" \");\n\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n\n          // o object_name\n          // or\n          // g group_name\n\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (\" \" + result[0].substr(1).trim()).substr(1);\n\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n\n          // material\n\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n\n          // mtl file\n\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (lineFirstChar === 's') {\n\n          result = line.split(' ');\n\n          // smooth shading\n\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n          if (result.length > 1) {\n\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n\n          throw new Error('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n\n      var container = new THREE.Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n\n      for (var i = 0, l = state.objects.length; i < l; i++) {\n\n        var object = state.objects[i];\n        var geometry = object.geometry;\n        var materials = object.materials;\n        var isLine = geometry.type === 'Line';\n        var isPoints = geometry.type === 'Points';\n        var hasVertexColors = false;\n\n        // Skip o/g line declarations that did not follow with any faces\n        if (geometry.vertices.length === 0) continue;\n\n        var buffergeometry = new THREE.BufferGeometry();\n\n        buffergeometry.addAttribute('position', new THREE.Float32BufferAttribute(geometry.vertices, 3));\n\n        if (geometry.normals.length > 0) {\n\n          buffergeometry.addAttribute('normal', new THREE.Float32BufferAttribute(geometry.normals, 3));\n        } else {\n\n          buffergeometry.computeVertexNormals();\n        }\n\n        if (geometry.colors.length > 0) {\n\n          hasVertexColors = true;\n          buffergeometry.addAttribute('color', new THREE.Float32BufferAttribute(geometry.colors, 3));\n        }\n\n        if (geometry.uvs.length > 0) {\n\n          buffergeometry.addAttribute('uv', new THREE.Float32BufferAttribute(geometry.uvs, 2));\n        }\n\n        // Create materials\n\n        var createdMaterials = [];\n\n        for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n\n          var sourceMaterial = materials[mi];\n          var material = undefined;\n\n          if (this.materials !== null) {\n\n            material = this.materials.create(sourceMaterial.name);\n\n            // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n            if (isLine && material && !(material instanceof THREE.LineBasicMaterial)) {\n\n              var materialLine = new THREE.LineBasicMaterial();\n              materialLine.copy(material);\n              materialLine.lights = false; // TOFIX\n              material = materialLine;\n            } else if (isPoints && material && !(material instanceof THREE.PointsMaterial)) {\n\n              var materialPoints = new THREE.PointsMaterial({\n                size: 10,\n                sizeAttenuation: false\n              });\n              materialLine.copy(material);\n              material = materialPoints;\n            }\n          }\n\n          if (!material) {\n\n            if (isLine) {\n\n              material = new THREE.LineBasicMaterial();\n            } else if (isPoints) {\n\n              material = new THREE.PointsMaterial({\n                size: 1,\n                sizeAttenuation: false\n              });\n            } else {\n\n              material = new THREE.MeshPhongMaterial();\n            }\n\n            material.name = sourceMaterial.name;\n          }\n\n          material.flatShading = sourceMaterial.smooth ? false : true;\n          material.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors;\n\n          createdMaterials.push(material);\n        }\n\n        // Create mesh\n\n        var mesh;\n\n        if (createdMaterials.length > 1) {\n\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n\n            var sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n\n          if (isLine) {\n\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n\n            mesh = new THREE.Points(buffergeometry, createdMaterials);\n          } else {\n\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n\n          if (isLine) {\n\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n\n            mesh = new THREE.Points(buffergeometry, createdMaterials[0]);\n          } else {\n\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n\n        mesh.name = object.name;\n\n        container.add(mesh);\n      }\n\n      console.timeEnd('OBJLoader');\n\n      return container;\n    }\n\n  };\n\n  return OBJLoader;\n}();\n\n/***/ }),\n\n/***/ \"YM5a\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin \t/ http://mark-lundin.com\n * @author Simone Manini / http://daron1337.github.io\n * @author Luca Antiga \t/ http://lantiga.github.io\n */\n\nTHREE.TrackballControls = function (object, domElement) {\n\n\tvar _this = this;\n\tvar STATE = { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n\n\tthis.object = object;\n\tthis.domElement = domElement !== undefined ? domElement : document;\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n\tthis.rotateSpeed = 1.0;\n\tthis.zoomSpeed = 1.2;\n\tthis.panSpeed = 0.3;\n\n\tthis.noRotate = false;\n\tthis.noZoom = false;\n\tthis.noPan = false;\n\n\tthis.staticMoving = false;\n\tthis.dynamicDampingFactor = 0.2;\n\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\tthis.keys = [65 /*A*/, 83 /*S*/, 68 /*D*/];\n\n\t// internals\n\n\tthis.target = new THREE.Vector3();\n\n\tvar EPS = 0.000001;\n\n\tvar lastPosition = new THREE.Vector3();\n\n\tvar _state = STATE.NONE,\n\t    _prevState = STATE.NONE,\n\t    _eye = new THREE.Vector3(),\n\t    _movePrev = new THREE.Vector2(),\n\t    _moveCurr = new THREE.Vector2(),\n\t    _lastAxis = new THREE.Vector3(),\n\t    _lastAngle = 0,\n\t    _zoomStart = new THREE.Vector2(),\n\t    _zoomEnd = new THREE.Vector2(),\n\t    _touchZoomDistanceStart = 0,\n\t    _touchZoomDistanceEnd = 0,\n\t    _panStart = new THREE.Vector2(),\n\t    _panEnd = new THREE.Vector2();\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.up0 = this.object.up.clone();\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\t// methods\n\n\tthis.handleResize = function () {\n\n\t\tif (this.domElement === document) {\n\n\t\t\tthis.screen.left = 0;\n\t\t\tthis.screen.top = 0;\n\t\t\tthis.screen.width = window.innerWidth;\n\t\t\tthis.screen.height = window.innerHeight;\n\t\t} else {\n\n\t\t\tvar box = this.domElement.getBoundingClientRect();\n\t\t\t// adjustments come from similar code in the jquery offset() function\n\t\t\tvar d = this.domElement.ownerDocument.documentElement;\n\t\t\tthis.screen.left = box.left + window.pageXOffset - d.clientLeft;\n\t\t\tthis.screen.top = box.top + window.pageYOffset - d.clientTop;\n\t\t\tthis.screen.width = box.width;\n\t\t\tthis.screen.height = box.height;\n\t\t}\n\t};\n\n\tthis.handleEvent = function (event) {\n\n\t\tif (typeof this[event.type] == 'function') {\n\n\t\t\tthis[event.type](event);\n\t\t}\n\t};\n\n\tvar getMouseOnScreen = function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnScreen(pageX, pageY) {\n\n\t\t\tvector.set((pageX - _this.screen.left) / _this.screen.width, (pageY - _this.screen.top) / _this.screen.height);\n\n\t\t\treturn vector;\n\t\t};\n\t}();\n\n\tvar getMouseOnCircle = function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnCircle(pageX, pageY) {\n\n\t\t\tvector.set((pageX - _this.screen.width * 0.5 - _this.screen.left) / (_this.screen.width * 0.5), (_this.screen.height + 2 * (_this.screen.top - pageY)) / _this.screen.width // screen.width intentional\n\t\t\t);\n\n\t\t\treturn vector;\n\t\t};\n\t}();\n\n\tthis.rotateCamera = function () {\n\n\t\tvar axis = new THREE.Vector3(),\n\t\t    quaternion = new THREE.Quaternion(),\n\t\t    eyeDirection = new THREE.Vector3(),\n\t\t    objectUpDirection = new THREE.Vector3(),\n\t\t    objectSidewaysDirection = new THREE.Vector3(),\n\t\t    moveDirection = new THREE.Vector3(),\n\t\t    angle;\n\n\t\treturn function rotateCamera() {\n\n\t\t\tmoveDirection.set(_moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0);\n\t\t\tangle = moveDirection.length();\n\n\t\t\tif (angle) {\n\n\t\t\t\t_eye.copy(_this.object.position).sub(_this.target);\n\n\t\t\t\teyeDirection.copy(_eye).normalize();\n\t\t\t\tobjectUpDirection.copy(_this.object.up).normalize();\n\t\t\t\tobjectSidewaysDirection.crossVectors(objectUpDirection, eyeDirection).normalize();\n\n\t\t\t\tobjectUpDirection.setLength(_moveCurr.y - _movePrev.y);\n\t\t\t\tobjectSidewaysDirection.setLength(_moveCurr.x - _movePrev.x);\n\n\t\t\t\tmoveDirection.copy(objectUpDirection.add(objectSidewaysDirection));\n\n\t\t\t\taxis.crossVectors(moveDirection, _eye).normalize();\n\n\t\t\t\tangle *= _this.rotateSpeed;\n\t\t\t\tquaternion.setFromAxisAngle(axis, angle);\n\n\t\t\t\t_eye.applyQuaternion(quaternion);\n\t\t\t\t_this.object.up.applyQuaternion(quaternion);\n\n\t\t\t\t_lastAxis.copy(axis);\n\t\t\t\t_lastAngle = angle;\n\t\t\t} else if (!_this.staticMoving && _lastAngle) {\n\n\t\t\t\t_lastAngle *= Math.sqrt(1.0 - _this.dynamicDampingFactor);\n\t\t\t\t_eye.copy(_this.object.position).sub(_this.target);\n\t\t\t\tquaternion.setFromAxisAngle(_lastAxis, _lastAngle);\n\t\t\t\t_eye.applyQuaternion(quaternion);\n\t\t\t\t_this.object.up.applyQuaternion(quaternion);\n\t\t\t}\n\n\t\t\t_movePrev.copy(_moveCurr);\n\t\t};\n\t}();\n\n\tthis.zoomCamera = function () {\n\n\t\tvar factor;\n\n\t\tif (_state === STATE.TOUCH_ZOOM_PAN) {\n\n\t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\t\t\t_eye.multiplyScalar(factor);\n\t\t} else {\n\n\t\t\tfactor = 1.0 + (_zoomEnd.y - _zoomStart.y) * _this.zoomSpeed;\n\n\t\t\tif (factor !== 1.0 && factor > 0.0) {\n\n\t\t\t\t_eye.multiplyScalar(factor);\n\t\t\t}\n\n\t\t\tif (_this.staticMoving) {\n\n\t\t\t\t_zoomStart.copy(_zoomEnd);\n\t\t\t} else {\n\n\t\t\t\t_zoomStart.y += (_zoomEnd.y - _zoomStart.y) * this.dynamicDampingFactor;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.panCamera = function () {\n\n\t\tvar mouseChange = new THREE.Vector2(),\n\t\t    objectUp = new THREE.Vector3(),\n\t\t    pan = new THREE.Vector3();\n\n\t\treturn function panCamera() {\n\n\t\t\tmouseChange.copy(_panEnd).sub(_panStart);\n\n\t\t\tif (mouseChange.lengthSq()) {\n\n\t\t\t\tmouseChange.multiplyScalar(_eye.length() * _this.panSpeed);\n\n\t\t\t\tpan.copy(_eye).cross(_this.object.up).setLength(mouseChange.x);\n\t\t\t\tpan.add(objectUp.copy(_this.object.up).setLength(mouseChange.y));\n\n\t\t\t\t_this.object.position.add(pan);\n\t\t\t\t_this.target.add(pan);\n\n\t\t\t\tif (_this.staticMoving) {\n\n\t\t\t\t\t_panStart.copy(_panEnd);\n\t\t\t\t} else {\n\n\t\t\t\t\t_panStart.add(mouseChange.subVectors(_panEnd, _panStart).multiplyScalar(_this.dynamicDampingFactor));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}();\n\n\tthis.checkDistances = function () {\n\n\t\tif (!_this.noZoom || !_this.noPan) {\n\n\t\t\tif (_eye.lengthSq() > _this.maxDistance * _this.maxDistance) {\n\n\t\t\t\t_this.object.position.addVectors(_this.target, _eye.setLength(_this.maxDistance));\n\t\t\t\t_zoomStart.copy(_zoomEnd);\n\t\t\t}\n\n\t\t\tif (_eye.lengthSq() < _this.minDistance * _this.minDistance) {\n\n\t\t\t\t_this.object.position.addVectors(_this.target, _eye.setLength(_this.minDistance));\n\t\t\t\t_zoomStart.copy(_zoomEnd);\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.update = function () {\n\n\t\t_eye.subVectors(_this.object.position, _this.target);\n\n\t\tif (!_this.noRotate) {\n\n\t\t\t_this.rotateCamera();\n\t\t}\n\n\t\tif (!_this.noZoom) {\n\n\t\t\t_this.zoomCamera();\n\t\t}\n\n\t\tif (!_this.noPan) {\n\n\t\t\t_this.panCamera();\n\t\t}\n\n\t\t_this.object.position.addVectors(_this.target, _eye);\n\n\t\t_this.checkDistances();\n\n\t\t_this.object.lookAt(_this.target);\n\n\t\tif (lastPosition.distanceToSquared(_this.object.position) > EPS) {\n\n\t\t\t_this.dispatchEvent(changeEvent);\n\n\t\t\tlastPosition.copy(_this.object.position);\n\t\t}\n\t};\n\n\tthis.reset = function () {\n\n\t\t_state = STATE.NONE;\n\t\t_prevState = STATE.NONE;\n\n\t\t_this.target.copy(_this.target0);\n\t\t_this.object.position.copy(_this.position0);\n\t\t_this.object.up.copy(_this.up0);\n\n\t\t_eye.subVectors(_this.object.position, _this.target);\n\n\t\t_this.object.lookAt(_this.target);\n\n\t\t_this.dispatchEvent(changeEvent);\n\n\t\tlastPosition.copy(_this.object.position);\n\t};\n\n\t// listeners\n\n\tfunction keydown(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\twindow.removeEventListener('keydown', keydown);\n\n\t\t_prevState = _state;\n\n\t\tif (_state !== STATE.NONE) {\n\n\t\t\treturn;\n\t\t} else if (event.keyCode === _this.keys[STATE.ROTATE] && !_this.noRotate) {\n\n\t\t\t_state = STATE.ROTATE;\n\t\t} else if (event.keyCode === _this.keys[STATE.ZOOM] && !_this.noZoom) {\n\n\t\t\t_state = STATE.ZOOM;\n\t\t} else if (event.keyCode === _this.keys[STATE.PAN] && !_this.noPan) {\n\n\t\t\t_state = STATE.PAN;\n\t\t}\n\t}\n\n\tfunction keyup(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\t_state = _prevState;\n\n\t\twindow.addEventListener('keydown', keydown, false);\n\t}\n\n\tfunction mousedown(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (_state === STATE.NONE) {\n\n\t\t\t_state = event.button;\n\t\t}\n\n\t\tif (_state === STATE.ROTATE && !_this.noRotate) {\n\n\t\t\t_moveCurr.copy(getMouseOnCircle(event.pageX, event.pageY));\n\t\t\t_movePrev.copy(_moveCurr);\n\t\t} else if (_state === STATE.ZOOM && !_this.noZoom) {\n\n\t\t\t_zoomStart.copy(getMouseOnScreen(event.pageX, event.pageY));\n\t\t\t_zoomEnd.copy(_zoomStart);\n\t\t} else if (_state === STATE.PAN && !_this.noPan) {\n\n\t\t\t_panStart.copy(getMouseOnScreen(event.pageX, event.pageY));\n\t\t\t_panEnd.copy(_panStart);\n\t\t}\n\n\t\tdocument.addEventListener('mousemove', mousemove, false);\n\t\tdocument.addEventListener('mouseup', mouseup, false);\n\n\t\t_this.dispatchEvent(startEvent);\n\t}\n\n\tfunction mousemove(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif (_state === STATE.ROTATE && !_this.noRotate) {\n\n\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t_moveCurr.copy(getMouseOnCircle(event.pageX, event.pageY));\n\t\t} else if (_state === STATE.ZOOM && !_this.noZoom) {\n\n\t\t\t_zoomEnd.copy(getMouseOnScreen(event.pageX, event.pageY));\n\t\t} else if (_state === STATE.PAN && !_this.noPan) {\n\n\t\t\t_panEnd.copy(getMouseOnScreen(event.pageX, event.pageY));\n\t\t}\n\t}\n\n\tfunction mouseup(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\t_state = STATE.NONE;\n\n\t\tdocument.removeEventListener('mousemove', mousemove);\n\t\tdocument.removeEventListener('mouseup', mouseup);\n\t\t_this.dispatchEvent(endEvent);\n\t}\n\n\tfunction mousewheel(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tif (_this.noZoom === true) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch (event.deltaMode) {\n\n\t\t\tcase 2:\n\t\t\t\t// Zoom in pages\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.025;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t// Zoom in lines\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.01;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// undefined, 0, assume pixels\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.00025;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent(startEvent);\n\t\t_this.dispatchEvent(endEvent);\n\t}\n\n\tfunction touchstart(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tswitch (event.touches.length) {\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n\t\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// 2 or more\n\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n\t\t\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\t\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n\n\t\t\t\tvar x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n\t\t\t\tvar y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n\t\t\t\t_panStart.copy(getMouseOnScreen(x, y));\n\t\t\t\t_panEnd.copy(_panStart);\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent(startEvent);\n\t}\n\n\tfunction touchmove(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch (event.touches.length) {\n\n\t\t\tcase 1:\n\t\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t\t_moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// 2 or more\n\t\t\t\tvar dx = event.touches[0].pageX - event.touches[1].pageX;\n\t\t\t\tvar dy = event.touches[0].pageY - event.touches[1].pageY;\n\t\t\t\t_touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n\n\t\t\t\tvar x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n\t\t\t\tvar y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n\t\t\t\t_panEnd.copy(getMouseOnScreen(x, y));\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n\n\tfunction touchend(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tswitch (event.touches.length) {\n\n\t\t\tcase 0:\n\t\t\t\t_state = STATE.NONE;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy(getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n\t\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent(endEvent);\n\t}\n\n\tfunction contextmenu(event) {\n\n\t\tif (_this.enabled === false) return;\n\n\t\tevent.preventDefault();\n\t}\n\n\tthis.dispose = function () {\n\n\t\tthis.domElement.removeEventListener('contextmenu', contextmenu, false);\n\t\tthis.domElement.removeEventListener('mousedown', mousedown, false);\n\t\tthis.domElement.removeEventListener('wheel', mousewheel, false);\n\n\t\tthis.domElement.removeEventListener('touchstart', touchstart, false);\n\t\tthis.domElement.removeEventListener('touchend', touchend, false);\n\t\tthis.domElement.removeEventListener('touchmove', touchmove, false);\n\n\t\tdocument.removeEventListener('mousemove', mousemove, false);\n\t\tdocument.removeEventListener('mouseup', mouseup, false);\n\n\t\twindow.removeEventListener('keydown', keydown, false);\n\t\twindow.removeEventListener('keyup', keyup, false);\n\t};\n\n\tthis.domElement.addEventListener('contextmenu', contextmenu, false);\n\tthis.domElement.addEventListener('mousedown', mousedown, false);\n\tthis.domElement.addEventListener('wheel', mousewheel, false);\n\n\tthis.domElement.addEventListener('touchstart', touchstart, false);\n\tthis.domElement.addEventListener('touchend', touchend, false);\n\tthis.domElement.addEventListener('touchmove', touchmove, false);\n\n\twindow.addEventListener('keydown', keydown, false);\n\twindow.addEventListener('keyup', keyup, false);\n\n\tthis.handleResize();\n\n\t// force an update at start\n\tthis.update();\n};\n\nTHREE.TrackballControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nTHREE.TrackballControls.prototype.constructor = THREE.TrackballControls;\n\n/***/ }),\n\n/***/ \"bL3k\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__detail_less__ = __webpack_require__(\"u223\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__detail_less___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__detail_less__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(\"GiK3\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(\"RH2O\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_three_obj__ = __webpack_require__(\"VbqQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_three_obj___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__lib_three_obj__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__common_spin__ = __webpack_require__(\"8b5R\");\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n;\nvar mapDispatchToProps = {};\nvar Detail = /** @class */ (function (_super) {\n    __extends(Detail, _super);\n    function Detail(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = {\n            isLoading: true,\n        };\n        _this.resizeWindow = function () {\n            if (_this.threeApp && _this.threeApp.resizeDisplayGL) {\n                _this.threeApp.resizeDisplayGL();\n            }\n        };\n        _this.canvasApp = 0;\n        return _this;\n    }\n    Detail.prototype.componentDidMount = function () {\n        var _this = this;\n        // 'http://localhost:8999/static/dog.obj',\n        // 'http://localhost:8999/static/male02.obj',\n        // 'http://localhost:8999/static/obj.mtl',\n        this.canvasApp = new __WEBPACK_IMPORTED_MODULE_3__lib_three_obj___default.a(this.refs['three-canvas'], {\n            filePath: './static/male02.obj',\n            callback: function () {\n                _this.setState({\n                    isLoading: false,\n                });\n            }\n        });\n        var render = function () {\n            if (_this.canvasApp) {\n                requestAnimationFrame(render);\n                _this.canvasApp.render();\n            }\n        };\n        window.addEventListener('resize', this.resizeWindow, false);\n        this.canvasApp.initGL();\n        this.canvasApp.resizeDisplayGL();\n        this.canvasApp.initContent();\n        render();\n    };\n    Detail.prototype.componentWillUnmount = function () {\n        window.removeEventListener('resize', this.resizeWindow, false);\n        this.canvasApp.destroy();\n        this.canvasApp = 0;\n    };\n    Detail.prototype.render = function () {\n        return (__WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"div\", { className: \"detail-container\" },\n            __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_4__common_spin__[\"a\" /* default */], { className: \"detail-canvas-wrapper\", spinning: this.state.isLoading },\n                __WEBPACK_IMPORTED_MODULE_1_react__[\"createElement\"](\"canvas\", { className: \"detail-canvas\", ref: \"three-canvas\" }))));\n    };\n    return Detail;\n}(__WEBPACK_IMPORTED_MODULE_1_react__[\"Component\"]));\nfunction mapStateToProps(state) {\n    return state.index;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps, mapDispatchToProps)(Detail));\n\n\n/***/ }),\n\n/***/ \"dcbN\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */\n\nTHREE.MTLLoader = function (manager) {\n\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.MTLLoader.prototype = {\n\n  constructor: THREE.MTLLoader,\n\n  /**\n   * Loads and parses a MTL asset from a URL.\n   *\n   * @param {String} url - URL to the MTL file.\n   * @param {Function} [onLoad] - Callback invoked with the loaded object.\n   * @param {Function} [onProgress] - Callback for download progress.\n   * @param {Function} [onError] - Callback for download errors.\n   *\n   * @see setPath setTexturePath\n   *\n   * @note In order for relative texture references to resolve correctly\n   * you must call setPath and/or setTexturePath explicitly prior to load.\n   */\n  load: function load(url, onLoad, onProgress, onError) {\n\n    var scope = this;\n\n    var loader = new THREE.FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.load(url, function (text) {\n\n      onLoad(scope.parse(text));\n    }, onProgress, onError);\n  },\n\n  /**\n   * Set base path for resolving references.\n   * If set this path will be prepended to each loaded and found reference.\n   *\n   * @see setTexturePath\n   * @param {String} path\n   * @return {THREE.MTLLoader}\n   *\n   * @example\n   *     mtlLoader.setPath( 'assets/obj/' );\n   *     mtlLoader.load( 'my.mtl', ... );\n   */\n  setPath: function setPath(path) {\n\n    this.path = path;\n    return this;\n  },\n\n  /**\n   * Set base path for resolving texture references.\n   * If set this path will be prepended found texture reference.\n   * If not set and setPath is, it will be used as texture base path.\n   *\n   * @see setPath\n   * @param {String} path\n   * @return {THREE.MTLLoader}\n   *\n   * @example\n   *     mtlLoader.setPath( 'assets/obj/' );\n   *     mtlLoader.setTexturePath( 'assets/textures/' );\n   *     mtlLoader.load( 'my.mtl', ... );\n   */\n  setTexturePath: function setTexturePath(path) {\n\n    this.texturePath = path;\n    return this;\n  },\n\n  setBaseUrl: function setBaseUrl(path) {\n\n    console.warn('THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.');\n\n    return this.setTexturePath(path);\n  },\n\n  setCrossOrigin: function setCrossOrigin(value) {\n\n    this.crossOrigin = value;\n    return this;\n  },\n\n  setMaterialOptions: function setMaterialOptions(value) {\n\n    this.materialOptions = value;\n    return this;\n  },\n\n  /**\n   * Parses a MTL file.\n   *\n   * @param {String} text - Content of MTL file\n   * @return {THREE.MTLLoader.MaterialCreator}\n   *\n   * @see setPath setTexturePath\n   *\n   * @note In order for relative texture references to resolve correctly\n   * you must call setPath and/or setTexturePath explicitly prior to parse.\n   */\n  parse: function parse(text) {\n\n    var lines = text.split('\\n');\n    var info = {};\n    var delimiter_pattern = /\\s+/;\n    var materialsInfo = {};\n\n    for (var i = 0; i < lines.length; i++) {\n\n      var line = lines[i];\n      line = line.trim();\n\n      if (line.length === 0 || line.charAt(0) === '#') {\n\n        // Blank line or comment ignore\n        continue;\n      }\n\n      var pos = line.indexOf(' ');\n\n      var key = pos >= 0 ? line.substring(0, pos) : line;\n      key = key.toLowerCase();\n\n      var value = pos >= 0 ? line.substring(pos + 1) : '';\n      value = value.trim();\n\n      if (key === 'newmtl') {\n\n        // New material\n\n        info = {\n          name: value\n        };\n        materialsInfo[value] = info;\n      } else if (info) {\n\n        if (key === 'ka' || key === 'kd' || key === 'ks') {\n\n          var ss = value.split(delimiter_pattern, 3);\n          info[key] = [parseFloat(ss[0]), parseFloat(ss[1]), parseFloat(ss[2])];\n        } else {\n\n          info[key] = value;\n        }\n      }\n    }\n\n    var materialCreator = new THREE.MTLLoader.MaterialCreator(this.texturePath || this.path, this.materialOptions);\n    materialCreator.setCrossOrigin(this.crossOrigin);\n    materialCreator.setManager(this.manager);\n    materialCreator.setMaterials(materialsInfo);\n    return materialCreator;\n  }\n\n};\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nTHREE.MTLLoader.MaterialCreator = function (baseUrl, options) {\n\n  this.baseUrl = baseUrl || '';\n  this.options = options;\n  this.materialsInfo = {};\n  this.materials = {};\n  this.materialsArray = [];\n  this.nameLookup = {};\n\n  this.side = this.options && this.options.side ? this.options.side : THREE.FrontSide;\n  this.wrap = this.options && this.options.wrap ? this.options.wrap : THREE.RepeatWrapping;\n};\n\nTHREE.MTLLoader.MaterialCreator.prototype = {\n\n  constructor: THREE.MTLLoader.MaterialCreator,\n\n  crossOrigin: 'anonymous',\n\n  setCrossOrigin: function setCrossOrigin(value) {\n\n    this.crossOrigin = value;\n    return this;\n  },\n\n  setManager: function setManager(value) {\n\n    this.manager = value;\n  },\n\n  setMaterials: function setMaterials(materialsInfo) {\n\n    this.materialsInfo = this.convert(materialsInfo);\n    this.materials = {};\n    this.materialsArray = [];\n    this.nameLookup = {};\n  },\n\n  convert: function convert(materialsInfo) {\n\n    if (!this.options) return materialsInfo;\n\n    var converted = {};\n\n    for (var mn in materialsInfo) {\n\n      // Convert materials info into normalized form based on options\n\n      var mat = materialsInfo[mn];\n\n      var covmat = {};\n\n      converted[mn] = covmat;\n\n      for (var prop in mat) {\n\n        var save = true;\n        var value = mat[prop];\n        var lprop = prop.toLowerCase();\n\n        switch (lprop) {\n\n          case 'kd':\n          case 'ka':\n          case 'ks':\n\n            // Diffuse color (color under white light) using RGB values\n\n            if (this.options && this.options.normalizeRGB) {\n\n              value = [value[0] / 255, value[1] / 255, value[2] / 255];\n            }\n\n            if (this.options && this.options.ignoreZeroRGBs) {\n\n              if (value[0] === 0 && value[1] === 0 && value[2] === 0) {\n\n                // ignore\n\n                save = false;\n              }\n            }\n\n            break;\n\n          default:\n\n            break;\n\n        }\n\n        if (save) {\n\n          covmat[lprop] = value;\n        }\n      }\n    }\n\n    return converted;\n  },\n\n  preload: function preload() {\n\n    for (var mn in this.materialsInfo) {\n\n      this.create(mn);\n    }\n  },\n\n  getIndex: function getIndex(materialName) {\n\n    return this.nameLookup[materialName];\n  },\n\n  getAsArray: function getAsArray() {\n\n    var index = 0;\n\n    for (var mn in this.materialsInfo) {\n\n      this.materialsArray[index] = this.create(mn);\n      this.nameLookup[mn] = index;\n      index++;\n    }\n\n    return this.materialsArray;\n  },\n\n  create: function create(materialName) {\n\n    if (this.materials[materialName] === undefined) {\n\n      this.createMaterial_(materialName);\n    }\n\n    return this.materials[materialName];\n  },\n\n  createMaterial_: function createMaterial_(materialName) {\n\n    // Create material\n\n    var scope = this;\n    var mat = this.materialsInfo[materialName];\n    var params = {\n\n      name: materialName,\n      side: this.side\n\n    };\n\n    function resolveURL(baseUrl, url) {\n\n      if (typeof url !== 'string' || url === '') return '';\n\n      // Absolute URL\n      if (/^https?:\\/\\//i.test(url)) return url;\n\n      return baseUrl + url;\n    }\n\n    function setMapForType(mapType, value) {\n\n      if (params[mapType]) return; // Keep the first encountered texture\n\n      var texParams = scope.getTextureParams(value, params);\n      var map = scope.loadTexture(resolveURL(scope.baseUrl, texParams.url));\n\n      map.repeat.copy(texParams.scale);\n      map.offset.copy(texParams.offset);\n\n      map.wrapS = scope.wrap;\n      map.wrapT = scope.wrap;\n\n      params[mapType] = map;\n    }\n\n    for (var prop in mat) {\n\n      var value = mat[prop];\n      var n;\n\n      if (value === '') continue;\n\n      switch (prop.toLowerCase()) {\n\n        // Ns is material specular exponent\n\n        case 'kd':\n\n          // Diffuse color (color under white light) using RGB values\n\n          params.color = new THREE.Color().fromArray(value);\n\n          break;\n\n        case 'ks':\n\n          // Specular color (color when light is reflected from shiny surface) using RGB values\n          params.specular = new THREE.Color().fromArray(value);\n\n          break;\n\n        case 'map_kd':\n\n          // Diffuse texture map\n\n          setMapForType(\"map\", value);\n\n          break;\n\n        case 'map_ks':\n\n          // Specular map\n\n          setMapForType(\"specularMap\", value);\n\n          break;\n\n        case 'norm':\n\n          setMapForType(\"normalMap\", value);\n\n          break;\n\n        case 'map_bump':\n        case 'bump':\n\n          // Bump texture map\n\n          setMapForType(\"bumpMap\", value);\n\n          break;\n\n        case 'ns':\n\n          // The specular exponent (defines the focus of the specular highlight)\n          // A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n          params.shininess = parseFloat(value);\n\n          break;\n\n        case 'd':\n          n = parseFloat(value);\n\n          if (n < 1) {\n\n            params.opacity = n;\n            params.transparent = true;\n          }\n\n          break;\n\n        case 'tr':\n          n = parseFloat(value);\n\n          if (this.options && this.options.invertTrProperty) n = 1 - n;\n\n          if (n > 0) {\n\n            params.opacity = 1 - n;\n            params.transparent = true;\n          }\n\n          break;\n\n        default:\n          break;\n\n      }\n    }\n\n    this.materials[materialName] = new THREE.MeshPhongMaterial(params);\n    return this.materials[materialName];\n  },\n\n  getTextureParams: function getTextureParams(value, matParams) {\n\n    var texParams = {\n\n      scale: new THREE.Vector2(1, 1),\n      offset: new THREE.Vector2(0, 0)\n\n    };\n\n    var items = value.split(/\\s+/);\n    var pos;\n\n    pos = items.indexOf('-bm');\n\n    if (pos >= 0) {\n\n      matParams.bumpScale = parseFloat(items[pos + 1]);\n      items.splice(pos, 2);\n    }\n\n    pos = items.indexOf('-s');\n\n    if (pos >= 0) {\n\n      texParams.scale.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n      items.splice(pos, 4); // we expect 3 parameters here!\n    }\n\n    pos = items.indexOf('-o');\n\n    if (pos >= 0) {\n\n      texParams.offset.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n      items.splice(pos, 4); // we expect 3 parameters here!\n    }\n\n    texParams.url = items.join(' ').trim();\n    return texParams;\n  },\n\n  loadTexture: function loadTexture(url, mapping, onLoad, onProgress, onError) {\n\n    var texture;\n    var loader = THREE.Loader.Handlers.get(url);\n    var manager = this.manager !== undefined ? this.manager : THREE.DefaultLoadingManager;\n\n    if (loader === null) {\n\n      loader = new THREE.TextureLoader(manager);\n    }\n\n    if (loader.setCrossOrigin) loader.setCrossOrigin(this.crossOrigin);\n    texture = loader.load(url, onLoad, onProgress, onError);\n\n    if (mapping !== undefined) texture.mapping = mapping;\n\n    return texture;\n  }\n\n};\n\n/***/ }),\n\n/***/ \"l9qI\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n  * @author Kai Salmen / https://kaisalmen.de\n  * Development repository: https://github.com/kaisalmen/WWOBJLoader\n  */\n\n\n\nif (THREE.LoaderSupport === undefined) {\n\tTHREE.LoaderSupport = {};\n}\n\n/**\n * Validation functions.\n * @class\n */\nTHREE.LoaderSupport.Validator = {\n\t/**\n  * If given input is null or undefined, false is returned otherwise true.\n  *\n  * @param input Can be anything\n  * @returns {boolean}\n  */\n\tisValid: function isValid(input) {\n\t\treturn input !== null && input !== undefined;\n\t},\n\t/**\n  * If given input is null or undefined, the defaultValue is returned otherwise the given input.\n  *\n  * @param input Can be anything\n  * @param defaultValue Can be anything\n  * @returns {*}\n  */\n\tverifyInput: function verifyInput(input, defaultValue) {\n\t\treturn input === null || input === undefined ? defaultValue : input;\n\t}\n};\n\n/**\n * Callbacks utilized by loaders and builders.\n * @class\n */\nTHREE.LoaderSupport.Callbacks = function () {\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction Callbacks() {\n\t\tthis.onProgress = null;\n\t\tthis.onMeshAlter = null;\n\t\tthis.onLoad = null;\n\t\tthis.onLoadMaterials = null;\n\t}\n\n\t/**\n  * Register callback function that is invoked by internal function \"announceProgress\" to print feedback.\n  * @memberOf THREE.LoaderSupport.Callbacks\n  *\n  * @param {callback} callbackOnProgress Callback function for described functionality\n  */\n\tCallbacks.prototype.setCallbackOnProgress = function (callbackOnProgress) {\n\t\tthis.onProgress = Validator.verifyInput(callbackOnProgress, this.onProgress);\n\t};\n\n\t/**\n  * Register callback function that is called every time a mesh was loaded.\n  * Use {@link THREE.LoaderSupport.LoadedMeshUserOverride} for alteration instructions (geometry, material or disregard mesh).\n  * @memberOf THREE.LoaderSupport.Callbacks\n  *\n  * @param {callback} callbackOnMeshAlter Callback function for described functionality\n  */\n\tCallbacks.prototype.setCallbackOnMeshAlter = function (callbackOnMeshAlter) {\n\t\tthis.onMeshAlter = Validator.verifyInput(callbackOnMeshAlter, this.onMeshAlter);\n\t};\n\n\t/**\n  * Register callback function that is called once loading of the complete OBJ file is completed.\n  * @memberOf THREE.LoaderSupport.Callbacks\n  *\n  * @param {callback} callbackOnLoad Callback function for described functionality\n  */\n\tCallbacks.prototype.setCallbackOnLoad = function (callbackOnLoad) {\n\t\tthis.onLoad = Validator.verifyInput(callbackOnLoad, this.onLoad);\n\t};\n\n\t/**\n  * Register callback function that is called when materials have been loaded.\n  * @memberOf THREE.LoaderSupport.Callbacks\n  *\n  * @param {callback} callbackOnLoadMaterials Callback function for described functionality\n  */\n\tCallbacks.prototype.setCallbackOnLoadMaterials = function (callbackOnLoadMaterials) {\n\t\tthis.onLoadMaterials = Validator.verifyInput(callbackOnLoadMaterials, this.onLoadMaterials);\n\t};\n\n\treturn Callbacks;\n}();\n\n/**\n * Object to return by callback onMeshAlter. Used to disregard a certain mesh or to return one to many meshes.\n * @class\n *\n * @param {boolean} disregardMesh=false Tell implementation to completely disregard this mesh\n * @param {boolean} disregardMesh=false Tell implementation that mesh(es) have been altered or added\n */\nTHREE.LoaderSupport.LoadedMeshUserOverride = function () {\n\n\tfunction LoadedMeshUserOverride(disregardMesh, alteredMesh) {\n\t\tthis.disregardMesh = disregardMesh === true;\n\t\tthis.alteredMesh = alteredMesh === true;\n\t\tthis.meshes = [];\n\t}\n\n\t/**\n  * Add a mesh created within callback.\n  *\n  * @memberOf THREE.OBJLoader2.LoadedMeshUserOverride\n  *\n  * @param {THREE.Mesh} mesh\n  */\n\tLoadedMeshUserOverride.prototype.addMesh = function (mesh) {\n\t\tthis.meshes.push(mesh);\n\t\tthis.alteredMesh = true;\n\t};\n\n\t/**\n  * Answers if mesh shall be disregarded completely.\n  *\n  * @returns {boolean}\n  */\n\tLoadedMeshUserOverride.prototype.isDisregardMesh = function () {\n\t\treturn this.disregardMesh;\n\t};\n\n\t/**\n  * Answers if new mesh(es) were created.\n  *\n  * @returns {boolean}\n  */\n\tLoadedMeshUserOverride.prototype.providesAlteredMeshes = function () {\n\t\treturn this.alteredMesh;\n\t};\n\n\treturn LoadedMeshUserOverride;\n}();\n\n/**\n * A resource description used by {@link THREE.LoaderSupport.PrepData} and others.\n * @class\n *\n * @param {string} url URL to the file\n * @param {string} extension The file extension (type)\n */\nTHREE.LoaderSupport.ResourceDescriptor = function () {\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction ResourceDescriptor(url, extension) {\n\t\tvar urlParts = url.split('/');\n\n\t\tif (urlParts.length < 2) {\n\n\t\t\tthis.path = null;\n\t\t\tthis.name = url;\n\t\t\tthis.url = url;\n\t\t} else {\n\n\t\t\tthis.path = Validator.verifyInput(urlParts.slice(0, urlParts.length - 1).join('/') + '/', null);\n\t\t\tthis.name = urlParts[urlParts.length - 1];\n\t\t\tthis.url = url;\n\t\t}\n\t\tthis.name = Validator.verifyInput(this.name, 'Unnamed_Resource');\n\t\tthis.extension = Validator.verifyInput(extension, 'default');\n\t\tthis.extension = this.extension.trim();\n\t\tthis.content = null;\n\t}\n\n\t/**\n  * Set the content of this resource\n  * @memberOf THREE.LoaderSupport.ResourceDescriptor\n  *\n  * @param {Object} content The file content as arraybuffer or text\n  */\n\tResourceDescriptor.prototype.setContent = function (content) {\n\t\tthis.content = Validator.verifyInput(content, null);\n\t};\n\n\treturn ResourceDescriptor;\n}();\n\n/**\n * Configuration instructions to be used by run method.\n * @class\n */\nTHREE.LoaderSupport.PrepData = function () {\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction PrepData(modelName) {\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\t\tthis.modelName = Validator.verifyInput(modelName, '');\n\t\tthis.resources = [];\n\t\tthis.callbacks = new THREE.LoaderSupport.Callbacks();\n\t}\n\n\t/**\n  * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n  * @memberOf THREE.LoaderSupport.PrepData\n  *\n  * @param {boolean} enabled True or false.\n  * @param {boolean} debug True or false.\n  */\n\tPrepData.prototype.setLogging = function (enabled, debug) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t};\n\n\t/**\n  * Returns all callbacks as {@link THREE.LoaderSupport.Callbacks}\n  * @memberOf THREE.LoaderSupport.PrepData\n  *\n  * @returns {THREE.LoaderSupport.Callbacks}\n  */\n\tPrepData.prototype.getCallbacks = function () {\n\t\treturn this.callbacks;\n\t};\n\n\t/**\n  * Add a resource description.\n  * @memberOf THREE.LoaderSupport.PrepData\n  *\n  * @param {THREE.LoaderSupport.ResourceDescriptor} Adds a {@link THREE.LoaderSupport.ResourceDescriptor}\n  */\n\tPrepData.prototype.addResource = function (resource) {\n\t\tthis.resources.push(resource);\n\t};\n\n\t/**\n  * Clones this object and returns it afterwards. Callbacks and resources are not cloned deep (references!).\n  * @memberOf THREE.LoaderSupport.PrepData\n  *\n  * @returns {@link THREE.LoaderSupport.PrepData}\n  */\n\tPrepData.prototype.clone = function () {\n\t\tvar clone = new THREE.LoaderSupport.PrepData(this.modelName);\n\t\tclone.logging.enabled = this.logging.enabled;\n\t\tclone.logging.debug = this.logging.debug;\n\t\tclone.resources = this.resources;\n\t\tclone.callbacks = this.callbacks;\n\n\t\tvar property, value;\n\t\tfor (property in this) {\n\n\t\t\tvalue = this[property];\n\t\t\tif (!clone.hasOwnProperty(property) && typeof this[property] !== 'function') {\n\n\t\t\t\tclone[property] = value;\n\t\t\t}\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\t/**\n  * Identify files or content of interest from an Array of {@link THREE.LoaderSupport.ResourceDescriptor}.\n  * @memberOf THREE.LoaderSupport.PrepData\n  *\n  * @param {THREE.LoaderSupport.ResourceDescriptor[]} resources Array of {@link THREE.LoaderSupport.ResourceDescriptor}\n  * @param Object fileDesc Object describing which resources are of interest (ext, type (string or UInt8Array) and ignore (boolean))\n  * @returns {{}} Object with each \"ext\" and the corresponding {@link THREE.LoaderSupport.ResourceDescriptor}\n  */\n\tPrepData.prototype.checkResourceDescriptorFiles = function (resources, fileDesc) {\n\t\tvar resource, triple, i, found;\n\t\tvar result = {};\n\n\t\tfor (var index in resources) {\n\n\t\t\tresource = resources[index];\n\t\t\tfound = false;\n\t\t\tif (!Validator.isValid(resource.name)) continue;\n\t\t\tif (Validator.isValid(resource.content)) {\n\n\t\t\t\tfor (i = 0; i < fileDesc.length && !found; i++) {\n\n\t\t\t\t\ttriple = fileDesc[i];\n\t\t\t\t\tif (resource.extension.toLowerCase() === triple.ext.toLowerCase()) {\n\n\t\t\t\t\t\tif (triple.ignore) {\n\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t} else if (triple.type === \"ArrayBuffer\") {\n\n\t\t\t\t\t\t\t// fast-fail on bad type\n\t\t\t\t\t\t\tif (!(resource.content instanceof ArrayBuffer || resource.content instanceof Uint8Array)) throw 'Provided content is not of type ArrayBuffer! Aborting...';\n\t\t\t\t\t\t\tresult[triple.ext] = resource;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t} else if (triple.type === \"String\") {\n\n\t\t\t\t\t\t\tif (!(typeof resource.content === 'string' || resource.content instanceof String)) throw 'Provided  content is not of type String! Aborting...';\n\t\t\t\t\t\t\tresult[triple.ext] = resource;\n\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!found) throw 'Unidentified resource \"' + resource.name + '\": ' + resource.url;\n\t\t\t} else {\n\n\t\t\t\t// fast-fail on bad type\n\t\t\t\tif (!(typeof resource.name === 'string' || resource.name instanceof String)) throw 'Provided file is not properly defined! Aborting...';\n\t\t\t\tfor (i = 0; i < fileDesc.length && !found; i++) {\n\n\t\t\t\t\ttriple = fileDesc[i];\n\t\t\t\t\tif (resource.extension.toLowerCase() === triple.ext.toLowerCase()) {\n\n\t\t\t\t\t\tif (!triple.ignore) result[triple.ext] = resource;\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!found) throw 'Unidentified resource \"' + resource.name + '\": ' + resource.url;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treturn PrepData;\n}();\n\n/**\n * Builds one or many THREE.Mesh from one raw set of Arraybuffers, materialGroup descriptions and further parameters.\n * Supports vertex, vertexColor, normal, uv and index buffers.\n * @class\n */\nTHREE.LoaderSupport.MeshBuilder = function () {\n\n\tvar LOADER_MESH_BUILDER_VERSION = '1.2.1';\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction MeshBuilder() {\n\t\tconsole.info('Using THREE.LoaderSupport.MeshBuilder version: ' + LOADER_MESH_BUILDER_VERSION);\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\n\t\tthis.callbacks = new THREE.LoaderSupport.Callbacks();\n\t\tthis.materials = [];\n\t}\n\n\t/**\n  * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n  * @memberOf THREE.LoaderSupport.MeshBuilder\n  *\n  * @param {boolean} enabled True or false.\n  * @param {boolean} debug True or false.\n  */\n\tMeshBuilder.prototype.setLogging = function (enabled, debug) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t};\n\n\t/**\n  * Initializes the MeshBuilder (currently only default material initialisation).\n  * @memberOf THREE.LoaderSupport.MeshBuilder\n  *\n  */\n\tMeshBuilder.prototype.init = function () {\n\t\tvar defaultMaterial = new THREE.MeshStandardMaterial({ color: 0xDCF1FF });\n\t\tdefaultMaterial.name = 'defaultMaterial';\n\n\t\tvar defaultVertexColorMaterial = new THREE.MeshStandardMaterial({ color: 0xDCF1FF });\n\t\tdefaultVertexColorMaterial.name = 'defaultVertexColorMaterial';\n\t\tdefaultVertexColorMaterial.vertexColors = THREE.VertexColors;\n\n\t\tvar defaultLineMaterial = new THREE.LineBasicMaterial();\n\t\tdefaultLineMaterial.name = 'defaultLineMaterial';\n\n\t\tvar defaultPointMaterial = new THREE.PointsMaterial({ size: 1 });\n\t\tdefaultPointMaterial.name = 'defaultPointMaterial';\n\n\t\tvar runtimeMaterials = {};\n\t\truntimeMaterials[defaultMaterial.name] = defaultMaterial;\n\t\truntimeMaterials[defaultVertexColorMaterial.name] = defaultVertexColorMaterial;\n\t\truntimeMaterials[defaultLineMaterial.name] = defaultLineMaterial;\n\t\truntimeMaterials[defaultPointMaterial.name] = defaultPointMaterial;\n\n\t\tthis.updateMaterials({\n\t\t\tcmd: 'materialData',\n\t\t\tmaterials: {\n\t\t\t\tmaterialCloneInstructions: null,\n\t\t\t\tserializedMaterials: null,\n\t\t\t\truntimeMaterials: runtimeMaterials\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n  * Set materials loaded by any supplier of an Array of {@link THREE.Material}.\n  * @memberOf THREE.LoaderSupport.MeshBuilder\n  *\n  * @param {THREE.Material[]} materials Array of {@link THREE.Material}\n  */\n\tMeshBuilder.prototype.setMaterials = function (materials) {\n\t\tvar payload = {\n\t\t\tcmd: 'materialData',\n\t\t\tmaterials: {\n\t\t\t\tmaterialCloneInstructions: null,\n\t\t\t\tserializedMaterials: null,\n\t\t\t\truntimeMaterials: Validator.isValid(this.callbacks.onLoadMaterials) ? this.callbacks.onLoadMaterials(materials) : materials\n\t\t\t}\n\t\t};\n\t\tthis.updateMaterials(payload);\n\t};\n\n\tMeshBuilder.prototype._setCallbacks = function (callbacks) {\n\t\tif (Validator.isValid(callbacks.onProgress)) this.callbacks.setCallbackOnProgress(callbacks.onProgress);\n\t\tif (Validator.isValid(callbacks.onMeshAlter)) this.callbacks.setCallbackOnMeshAlter(callbacks.onMeshAlter);\n\t\tif (Validator.isValid(callbacks.onLoad)) this.callbacks.setCallbackOnLoad(callbacks.onLoad);\n\t\tif (Validator.isValid(callbacks.onLoadMaterials)) this.callbacks.setCallbackOnLoadMaterials(callbacks.onLoadMaterials);\n\t};\n\n\t/**\n  * Delegates processing of the payload (mesh building or material update) to the corresponding functions (BW-compatibility).\n  * @memberOf THREE.LoaderSupport.MeshBuilder\n  *\n  * @param {Object} payload Raw Mesh or Material descriptions.\n  * @returns {THREE.Mesh[]} mesh Array of {@link THREE.Mesh} or null in case of material update\n  */\n\tMeshBuilder.prototype.processPayload = function (payload) {\n\t\tif (payload.cmd === 'meshData') {\n\n\t\t\treturn this.buildMeshes(payload);\n\t\t} else if (payload.cmd === 'materialData') {\n\n\t\t\tthis.updateMaterials(payload);\n\t\t\treturn null;\n\t\t}\n\t};\n\n\t/**\n  * Builds one or multiple meshes from the data described in the payload (buffers, params, material info).\n  * @memberOf THREE.LoaderSupport.MeshBuilder\n  *\n  * @param {Object} meshPayload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n  * @returns {THREE.Mesh[]} mesh Array of {@link THREE.Mesh}\n  */\n\tMeshBuilder.prototype.buildMeshes = function (meshPayload) {\n\t\tvar meshName = meshPayload.params.meshName;\n\n\t\tvar bufferGeometry = new THREE.BufferGeometry();\n\t\tbufferGeometry.addAttribute('position', new THREE.BufferAttribute(new Float32Array(meshPayload.buffers.vertices), 3));\n\t\tif (Validator.isValid(meshPayload.buffers.indices)) {\n\n\t\t\tbufferGeometry.setIndex(new THREE.BufferAttribute(new Uint32Array(meshPayload.buffers.indices), 1));\n\t\t}\n\t\tvar haveVertexColors = Validator.isValid(meshPayload.buffers.colors);\n\t\tif (haveVertexColors) {\n\n\t\t\tbufferGeometry.addAttribute('color', new THREE.BufferAttribute(new Float32Array(meshPayload.buffers.colors), 3));\n\t\t}\n\t\tif (Validator.isValid(meshPayload.buffers.normals)) {\n\n\t\t\tbufferGeometry.addAttribute('normal', new THREE.BufferAttribute(new Float32Array(meshPayload.buffers.normals), 3));\n\t\t} else {\n\n\t\t\tbufferGeometry.computeVertexNormals();\n\t\t}\n\t\tif (Validator.isValid(meshPayload.buffers.uvs)) {\n\n\t\t\tbufferGeometry.addAttribute('uv', new THREE.BufferAttribute(new Float32Array(meshPayload.buffers.uvs), 2));\n\t\t}\n\n\t\tvar material, materialName, key;\n\t\tvar materialNames = meshPayload.materials.materialNames;\n\t\tvar createMultiMaterial = meshPayload.materials.multiMaterial;\n\t\tvar multiMaterials = [];\n\t\tfor (key in materialNames) {\n\n\t\t\tmaterialName = materialNames[key];\n\t\t\tmaterial = this.materials[materialName];\n\t\t\tif (createMultiMaterial) multiMaterials.push(material);\n\t\t}\n\t\tif (createMultiMaterial) {\n\n\t\t\tmaterial = multiMaterials;\n\t\t\tvar materialGroups = meshPayload.materials.materialGroups;\n\t\t\tvar materialGroup;\n\t\t\tfor (key in materialGroups) {\n\n\t\t\t\tmaterialGroup = materialGroups[key];\n\t\t\t\tbufferGeometry.addGroup(materialGroup.start, materialGroup.count, materialGroup.index);\n\t\t\t}\n\t\t}\n\n\t\tvar meshes = [];\n\t\tvar mesh;\n\t\tvar callbackOnMeshAlter = this.callbacks.onMeshAlter;\n\t\tvar callbackOnMeshAlterResult;\n\t\tvar useOrgMesh = true;\n\t\tvar geometryType = Validator.verifyInput(meshPayload.geometryType, 0);\n\t\tif (Validator.isValid(callbackOnMeshAlter)) {\n\n\t\t\tcallbackOnMeshAlterResult = callbackOnMeshAlter({\n\t\t\t\tdetail: {\n\t\t\t\t\tmeshName: meshName,\n\t\t\t\t\tbufferGeometry: bufferGeometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tgeometryType: geometryType\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (Validator.isValid(callbackOnMeshAlterResult)) {\n\n\t\t\t\tif (callbackOnMeshAlterResult.isDisregardMesh()) {\n\n\t\t\t\t\tuseOrgMesh = false;\n\t\t\t\t} else if (callbackOnMeshAlterResult.providesAlteredMeshes()) {\n\n\t\t\t\t\tfor (var i in callbackOnMeshAlterResult.meshes) {\n\n\t\t\t\t\t\tmeshes.push(callbackOnMeshAlterResult.meshes[i]);\n\t\t\t\t\t}\n\t\t\t\t\tuseOrgMesh = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (useOrgMesh) {\n\n\t\t\tif (meshPayload.computeBoundingSphere) bufferGeometry.computeBoundingSphere();\n\t\t\tif (geometryType === 0) {\n\n\t\t\t\tmesh = new THREE.Mesh(bufferGeometry, material);\n\t\t\t} else if (geometryType === 1) {\n\n\t\t\t\tmesh = new THREE.LineSegments(bufferGeometry, material);\n\t\t\t} else {\n\n\t\t\t\tmesh = new THREE.Points(bufferGeometry, material);\n\t\t\t}\n\t\t\tmesh.name = meshName;\n\t\t\tmeshes.push(mesh);\n\t\t}\n\n\t\tvar progressMessage;\n\t\tif (Validator.isValid(meshes) && meshes.length > 0) {\n\n\t\t\tvar meshNames = [];\n\t\t\tfor (var i in meshes) {\n\n\t\t\t\tmesh = meshes[i];\n\t\t\t\tmeshNames[i] = mesh.name;\n\t\t\t}\n\t\t\tprogressMessage = 'Adding mesh(es) (' + meshNames.length + ': ' + meshNames + ') from input mesh: ' + meshName;\n\t\t\tprogressMessage += ' (' + (meshPayload.progress.numericalValue * 100).toFixed(2) + '%)';\n\t\t} else {\n\n\t\t\tprogressMessage = 'Not adding mesh: ' + meshName;\n\t\t\tprogressMessage += ' (' + (meshPayload.progress.numericalValue * 100).toFixed(2) + '%)';\n\t\t}\n\t\tvar callbackOnProgress = this.callbacks.onProgress;\n\t\tif (Validator.isValid(callbackOnProgress)) {\n\n\t\t\tvar event = new CustomEvent('MeshBuilderEvent', {\n\t\t\t\tdetail: {\n\t\t\t\t\ttype: 'progress',\n\t\t\t\t\tmodelName: meshPayload.params.meshName,\n\t\t\t\t\ttext: progressMessage,\n\t\t\t\t\tnumericalValue: meshPayload.progress.numericalValue\n\t\t\t\t}\n\t\t\t});\n\t\t\tcallbackOnProgress(event);\n\t\t}\n\n\t\treturn meshes;\n\t};\n\n\t/**\n  * Updates the materials with contained material objects (sync) or from alteration instructions (async).\n  * @memberOf THREE.LoaderSupport.MeshBuilder\n  *\n  * @param {Object} materialPayload Material update instructions\n  */\n\tMeshBuilder.prototype.updateMaterials = function (materialPayload) {\n\t\tvar material, materialName;\n\t\tvar materialCloneInstructions = materialPayload.materials.materialCloneInstructions;\n\t\tif (Validator.isValid(materialCloneInstructions)) {\n\n\t\t\tvar materialNameOrg = materialCloneInstructions.materialNameOrg;\n\t\t\tvar materialOrg = this.materials[materialNameOrg];\n\n\t\t\tif (Validator.isValid(materialNameOrg)) {\n\n\t\t\t\tmaterial = materialOrg.clone();\n\n\t\t\t\tmaterialName = materialCloneInstructions.materialName;\n\t\t\t\tmaterial.name = materialName;\n\n\t\t\t\tvar materialProperties = materialCloneInstructions.materialProperties;\n\t\t\t\tfor (var key in materialProperties) {\n\n\t\t\t\t\tif (material.hasOwnProperty(key) && materialProperties.hasOwnProperty(key)) material[key] = materialProperties[key];\n\t\t\t\t}\n\t\t\t\tthis.materials[materialName] = material;\n\t\t\t} else {\n\n\t\t\t\tconsole.warn('Requested material \"' + materialNameOrg + '\" is not available!');\n\t\t\t}\n\t\t}\n\n\t\tvar materials = materialPayload.materials.serializedMaterials;\n\t\tif (Validator.isValid(materials) && Object.keys(materials).length > 0) {\n\n\t\t\tvar loader = new THREE.MaterialLoader();\n\t\t\tvar materialJson;\n\t\t\tfor (materialName in materials) {\n\n\t\t\t\tmaterialJson = materials[materialName];\n\t\t\t\tif (Validator.isValid(materialJson)) {\n\n\t\t\t\t\tmaterial = loader.parse(materialJson);\n\t\t\t\t\tif (this.logging.enabled) console.info('De-serialized material with name \"' + materialName + '\" will be added.');\n\t\t\t\t\tthis.materials[materialName] = material;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmaterials = materialPayload.materials.runtimeMaterials;\n\t\tif (Validator.isValid(materials) && Object.keys(materials).length > 0) {\n\n\t\t\tfor (materialName in materials) {\n\n\t\t\t\tmaterial = materials[materialName];\n\t\t\t\tif (this.logging.enabled) console.info('Material with name \"' + materialName + '\" will be added.');\n\t\t\t\tthis.materials[materialName] = material;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Returns the mapping object of material name and corresponding jsonified material.\n  *\n  * @returns {Object} Map of Materials in JSON representation\n  */\n\tMeshBuilder.prototype.getMaterialsJSON = function () {\n\t\tvar materialsJSON = {};\n\t\tvar material;\n\t\tfor (var materialName in this.materials) {\n\n\t\t\tmaterial = this.materials[materialName];\n\t\t\tmaterialsJSON[materialName] = material.toJSON();\n\t\t}\n\n\t\treturn materialsJSON;\n\t};\n\n\t/**\n  * Returns the mapping object of material name and corresponding material.\n  *\n  * @returns {Object} Map of {@link THREE.Material}\n  */\n\tMeshBuilder.prototype.getMaterials = function () {\n\t\treturn this.materials;\n\t};\n\n\treturn MeshBuilder;\n}();\n\n/**\n * Default implementation of the WorkerRunner responsible for creation and configuration of the parser within the worker.\n *\n * @class\n */\nTHREE.LoaderSupport.WorkerRunnerRefImpl = function () {\n\n\tfunction WorkerRunnerRefImpl() {\n\t\tvar scope = this;\n\t\tvar scopedRunner = function scopedRunner(event) {\n\t\t\tscope.processMessage(event.data);\n\t\t};\n\t\tself.addEventListener('message', scopedRunner, false);\n\t}\n\n\t/**\n  * Applies values from parameter object via set functions or via direct assignment.\n  * @memberOf THREE.LoaderSupport.WorkerRunnerRefImpl\n  *\n  * @param {Object} parser The parser instance\n  * @param {Object} params The parameter object\n  */\n\tWorkerRunnerRefImpl.prototype.applyProperties = function (parser, params) {\n\t\tvar property, funcName, values;\n\t\tfor (property in params) {\n\t\t\tfuncName = 'set' + property.substring(0, 1).toLocaleUpperCase() + property.substring(1);\n\t\t\tvalues = params[property];\n\n\t\t\tif (typeof parser[funcName] === 'function') {\n\n\t\t\t\tparser[funcName](values);\n\t\t\t} else if (parser.hasOwnProperty(property)) {\n\n\t\t\t\tparser[property] = values;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n  * Configures the Parser implementation according the supplied configuration object.\n  * @memberOf THREE.LoaderSupport.WorkerRunnerRefImpl\n  *\n  * @param {Object} payload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n  */\n\tWorkerRunnerRefImpl.prototype.processMessage = function (payload) {\n\t\tif (payload.cmd === 'run') {\n\n\t\t\tvar callbacks = {\n\t\t\t\tcallbackMeshBuilder: function callbackMeshBuilder(payload) {\n\t\t\t\t\tself.postMessage(payload);\n\t\t\t\t},\n\t\t\t\tcallbackProgress: function callbackProgress(text) {\n\t\t\t\t\tif (payload.logging.enabled && payload.logging.debug) console.debug('WorkerRunner: progress: ' + text);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Parser is expected to be named as such\n\t\t\tvar parser = new Parser();\n\t\t\tif (typeof parser['setLogging'] === 'function') parser.setLogging(payload.logging.enabled, payload.logging.debug);\n\t\t\tthis.applyProperties(parser, payload.params);\n\t\t\tthis.applyProperties(parser, payload.materials);\n\t\t\tthis.applyProperties(parser, callbacks);\n\t\t\tparser.workerScope = self;\n\t\t\tparser.parse(payload.data.input, payload.data.options);\n\n\t\t\tif (payload.logging.enabled) console.log('WorkerRunner: Run complete!');\n\n\t\t\tcallbacks.callbackMeshBuilder({\n\t\t\t\tcmd: 'complete',\n\t\t\t\tmsg: 'WorkerRunner completed run.'\n\t\t\t});\n\t\t} else {\n\n\t\t\tconsole.error('WorkerRunner: Received unknown command: ' + payload.cmd);\n\t\t}\n\t};\n\n\treturn WorkerRunnerRefImpl;\n}();\n\n/**\n * This class provides means to transform existing parser code into a web worker. It defines a simple communication protocol\n * which allows to configure the worker and receive raw mesh data during execution.\n * @class\n */\nTHREE.LoaderSupport.WorkerSupport = function () {\n\n\tvar WORKER_SUPPORT_VERSION = '2.2.0';\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tvar LoaderWorker = function () {\n\n\t\tfunction LoaderWorker() {\n\t\t\tthis._reset();\n\t\t}\n\n\t\tLoaderWorker.prototype._reset = function () {\n\t\t\tthis.logging = {\n\t\t\t\tenabled: true,\n\t\t\t\tdebug: false\n\t\t\t};\n\t\t\tthis.worker = null;\n\t\t\tthis.runnerImplName = null;\n\t\t\tthis.callbacks = {\n\t\t\t\tmeshBuilder: null,\n\t\t\t\tonLoad: null\n\t\t\t};\n\t\t\tthis.terminateRequested = false;\n\t\t\tthis.queuedMessage = null;\n\t\t\tthis.started = false;\n\t\t\tthis.forceCopy = false;\n\t\t};\n\n\t\tLoaderWorker.prototype.setLogging = function (enabled, debug) {\n\t\t\tthis.logging.enabled = enabled === true;\n\t\t\tthis.logging.debug = debug === true;\n\t\t};\n\n\t\tLoaderWorker.prototype.setForceCopy = function (forceCopy) {\n\t\t\tthis.forceCopy = forceCopy === true;\n\t\t};\n\n\t\tLoaderWorker.prototype.initWorker = function (code, runnerImplName) {\n\t\t\tthis.runnerImplName = runnerImplName;\n\t\t\tvar blob = new Blob([code], { type: 'application/javascript' });\n\t\t\tthis.worker = new Worker(window.URL.createObjectURL(blob));\n\t\t\tthis.worker.onmessage = this._receiveWorkerMessage;\n\n\t\t\t// set referemce to this, then processing in worker scope within \"_receiveWorkerMessage\" can access members\n\t\t\tthis.worker.runtimeRef = this;\n\n\t\t\t// process stored queuedMessage\n\t\t\tthis._postMessage();\n\t\t};\n\n\t\t/**\n   * Executed in worker scope\n  \t */\n\t\tLoaderWorker.prototype._receiveWorkerMessage = function (e) {\n\t\t\tvar payload = e.data;\n\t\t\tswitch (payload.cmd) {\n\t\t\t\tcase 'meshData':\n\t\t\t\tcase 'materialData':\n\t\t\t\tcase 'imageData':\n\t\t\t\t\tthis.runtimeRef.callbacks.meshBuilder(payload);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'complete':\n\t\t\t\t\tthis.runtimeRef.queuedMessage = null;\n\t\t\t\t\tthis.started = false;\n\t\t\t\t\tthis.runtimeRef.callbacks.onLoad(payload.msg);\n\n\t\t\t\t\tif (this.runtimeRef.terminateRequested) {\n\n\t\t\t\t\t\tif (this.runtimeRef.logging.enabled) console.info('WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Run is complete. Terminating application on request!');\n\t\t\t\t\t\tthis.runtimeRef._terminate();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'error':\n\t\t\t\t\tconsole.error('WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Reported error: ' + payload.msg);\n\t\t\t\t\tthis.runtimeRef.queuedMessage = null;\n\t\t\t\t\tthis.started = false;\n\t\t\t\t\tthis.runtimeRef.callbacks.onLoad(payload.msg);\n\n\t\t\t\t\tif (this.runtimeRef.terminateRequested) {\n\n\t\t\t\t\t\tif (this.runtimeRef.logging.enabled) console.info('WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Run reported error. Terminating application on request!');\n\t\t\t\t\t\tthis.runtimeRef._terminate();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Received unknown command: ' + payload.cmd);\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t};\n\n\t\tLoaderWorker.prototype.setCallbacks = function (meshBuilder, onLoad) {\n\t\t\tthis.callbacks.meshBuilder = Validator.verifyInput(meshBuilder, this.callbacks.meshBuilder);\n\t\t\tthis.callbacks.onLoad = Validator.verifyInput(onLoad, this.callbacks.onLoad);\n\t\t};\n\n\t\tLoaderWorker.prototype.run = function (payload) {\n\t\t\tif (Validator.isValid(this.queuedMessage)) {\n\n\t\t\t\tconsole.warn('Already processing message. Rejecting new run instruction');\n\t\t\t\treturn;\n\t\t\t} else {\n\n\t\t\t\tthis.queuedMessage = payload;\n\t\t\t\tthis.started = true;\n\t\t\t}\n\t\t\tif (!Validator.isValid(this.callbacks.meshBuilder)) throw 'Unable to run as no \"MeshBuilder\" callback is set.';\n\t\t\tif (!Validator.isValid(this.callbacks.onLoad)) throw 'Unable to run as no \"onLoad\" callback is set.';\n\t\t\tif (payload.cmd !== 'run') payload.cmd = 'run';\n\t\t\tif (Validator.isValid(payload.logging)) {\n\n\t\t\t\tpayload.logging.enabled = payload.logging.enabled === true;\n\t\t\t\tpayload.logging.debug = payload.logging.debug === true;\n\t\t\t} else {\n\n\t\t\t\tpayload.logging = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tdebug: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tthis._postMessage();\n\t\t};\n\n\t\tLoaderWorker.prototype._postMessage = function () {\n\t\t\tif (Validator.isValid(this.queuedMessage) && Validator.isValid(this.worker)) {\n\n\t\t\t\tif (this.queuedMessage.data.input instanceof ArrayBuffer) {\n\n\t\t\t\t\tvar content;\n\t\t\t\t\tif (this.forceCopy) {\n\n\t\t\t\t\t\tcontent = this.queuedMessage.data.input.slice(0);\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontent = this.queuedMessage.data.input;\n\t\t\t\t\t}\n\t\t\t\t\tthis.worker.postMessage(this.queuedMessage, [content]);\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.worker.postMessage(this.queuedMessage);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tLoaderWorker.prototype.setTerminateRequested = function (terminateRequested) {\n\t\t\tthis.terminateRequested = terminateRequested === true;\n\t\t\tif (this.terminateRequested && Validator.isValid(this.worker) && !Validator.isValid(this.queuedMessage) && this.started) {\n\n\t\t\t\tif (this.logging.enabled) console.info('Worker is terminated immediately as it is not running!');\n\t\t\t\tthis._terminate();\n\t\t\t}\n\t\t};\n\n\t\tLoaderWorker.prototype._terminate = function () {\n\t\t\tthis.worker.terminate();\n\t\t\tthis._reset();\n\t\t};\n\n\t\treturn LoaderWorker;\n\t}();\n\n\tfunction WorkerSupport() {\n\t\tconsole.info('Using THREE.LoaderSupport.WorkerSupport version: ' + WORKER_SUPPORT_VERSION);\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\n\t\t// check worker support first\n\t\tif (window.Worker === undefined) throw \"This browser does not support web workers!\";\n\t\tif (window.Blob === undefined) throw \"This browser does not support Blob!\";\n\t\tif (typeof window.URL.createObjectURL !== 'function') throw \"This browser does not support Object creation from URL!\";\n\n\t\tthis.loaderWorker = new LoaderWorker();\n\t}\n\n\t/**\n  * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n  * @memberOf THREE.LoaderSupport.WorkerSupport\n  *\n  * @param {boolean} enabled True or false.\n  * @param {boolean} debug True or false.\n  */\n\tWorkerSupport.prototype.setLogging = function (enabled, debug) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t\tthis.loaderWorker.setLogging(this.logging.enabled, this.logging.debug);\n\t};\n\n\t/**\n  * Forces all ArrayBuffers to be transferred to worker to be copied.\n  * @memberOf THREE.LoaderSupport.WorkerSupport\n  *\n  * @param {boolean} forceWorkerDataCopy True or false.\n  */\n\tWorkerSupport.prototype.setForceWorkerDataCopy = function (forceWorkerDataCopy) {\n\t\tthis.loaderWorker.setForceCopy(forceWorkerDataCopy);\n\t};\n\n\t/**\n  * Validate the status of worker code and the derived worker.\n  * @memberOf THREE.LoaderSupport.WorkerSupport\n  *\n  * @param {Function} functionCodeBuilder Function that is invoked with funcBuildObject and funcBuildSingleton that allows stringification of objects and singletons.\n  * @param {String} parserName Name of the Parser object\n  * @param {String[]} libLocations URL of libraries that shall be added to worker code relative to libPath\n  * @param {String} libPath Base path used for loading libraries\n  * @param {THREE.LoaderSupport.WorkerRunnerRefImpl} runnerImpl The default worker parser wrapper implementation (communication and execution). An extended class could be passed here.\n  */\n\tWorkerSupport.prototype.validate = function (functionCodeBuilder, parserName, libLocations, libPath, runnerImpl) {\n\t\tif (Validator.isValid(this.loaderWorker.worker)) return;\n\n\t\tif (this.logging.enabled) {\n\n\t\t\tconsole.info('WorkerSupport: Building worker code...');\n\t\t\tconsole.time('buildWebWorkerCode');\n\t\t}\n\t\tif (Validator.isValid(runnerImpl)) {\n\n\t\t\tif (this.logging.enabled) console.info('WorkerSupport: Using \"' + runnerImpl.name + '\" as Runner class for worker.');\n\t\t} else {\n\n\t\t\trunnerImpl = THREE.LoaderSupport.WorkerRunnerRefImpl;\n\t\t\tif (this.logging.enabled) console.info('WorkerSupport: Using DEFAULT \"THREE.LoaderSupport.WorkerRunnerRefImpl\" as Runner class for worker.');\n\t\t}\n\n\t\tvar userWorkerCode = functionCodeBuilder(buildObject, buildSingleton);\n\t\tuserWorkerCode += 'var Parser = ' + parserName + ';\\n\\n';\n\t\tuserWorkerCode += buildSingleton(runnerImpl.name, runnerImpl);\n\t\tuserWorkerCode += 'new ' + runnerImpl.name + '();\\n\\n';\n\n\t\tvar scope = this;\n\t\tif (Validator.isValid(libLocations) && libLocations.length > 0) {\n\n\t\t\tvar libsContent = '';\n\t\t\tvar loadAllLibraries = function loadAllLibraries(path, locations) {\n\t\t\t\tif (locations.length === 0) {\n\n\t\t\t\t\tscope.loaderWorker.initWorker(libsContent + userWorkerCode, runnerImpl.name);\n\t\t\t\t\tif (scope.logging.enabled) console.timeEnd('buildWebWorkerCode');\n\t\t\t\t} else {\n\n\t\t\t\t\tvar loadedLib = function loadedLib(contentAsString) {\n\t\t\t\t\t\tlibsContent += contentAsString;\n\t\t\t\t\t\tloadAllLibraries(path, locations);\n\t\t\t\t\t};\n\n\t\t\t\t\tvar fileLoader = new THREE.FileLoader();\n\t\t\t\t\tfileLoader.setPath(path);\n\t\t\t\t\tfileLoader.setResponseType('text');\n\t\t\t\t\tfileLoader.load(locations[0], loadedLib);\n\t\t\t\t\tlocations.shift();\n\t\t\t\t}\n\t\t\t};\n\t\t\tloadAllLibraries(libPath, libLocations);\n\t\t} else {\n\n\t\t\tthis.loaderWorker.initWorker(userWorkerCode, runnerImpl.name);\n\t\t\tif (this.logging.enabled) console.timeEnd('buildWebWorkerCode');\n\t\t}\n\t};\n\n\t/**\n  * Specify functions that should be build when new raw mesh data becomes available and when the parser is finished.\n  * @memberOf THREE.LoaderSupport.WorkerSupport\n  *\n  * @param {Function} meshBuilder The mesh builder function. Default is {@link THREE.LoaderSupport.MeshBuilder}.\n  * @param {Function} onLoad The function that is called when parsing is complete.\n  */\n\tWorkerSupport.prototype.setCallbacks = function (meshBuilder, onLoad) {\n\t\tthis.loaderWorker.setCallbacks(meshBuilder, onLoad);\n\t};\n\n\t/**\n  * Runs the parser with the provided configuration.\n  * @memberOf THREE.LoaderSupport.WorkerSupport\n  *\n  * @param {Object} payload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n  */\n\tWorkerSupport.prototype.run = function (payload) {\n\t\tthis.loaderWorker.run(payload);\n\t};\n\n\t/**\n  * Request termination of worker once parser is finished.\n  * @memberOf THREE.LoaderSupport.WorkerSupport\n  *\n  * @param {boolean} terminateRequested True or false.\n  */\n\tWorkerSupport.prototype.setTerminateRequested = function (terminateRequested) {\n\t\tthis.loaderWorker.setTerminateRequested(terminateRequested);\n\t};\n\n\tvar buildObject = function buildObject(fullName, object) {\n\t\tvar objectString = fullName + ' = {\\n';\n\t\tvar part;\n\t\tfor (var name in object) {\n\n\t\t\tpart = object[name];\n\t\t\tif (typeof part === 'string' || part instanceof String) {\n\n\t\t\t\tpart = part.replace('\\n', '\\\\n');\n\t\t\t\tpart = part.replace('\\r', '\\\\r');\n\t\t\t\tobjectString += '\\t' + name + ': \"' + part + '\",\\n';\n\t\t\t} else if (part instanceof Array) {\n\n\t\t\t\tobjectString += '\\t' + name + ': [' + part + '],\\n';\n\t\t\t} else if (Number.isInteger(part)) {\n\n\t\t\t\tobjectString += '\\t' + name + ': ' + part + ',\\n';\n\t\t\t} else if (typeof part === 'function') {\n\n\t\t\t\tobjectString += '\\t' + name + ': ' + part + ',\\n';\n\t\t\t}\n\t\t}\n\t\tobjectString += '}\\n\\n';\n\n\t\treturn objectString;\n\t};\n\n\tvar buildSingleton = function buildSingleton(fullName, object, internalName, basePrototypeName, ignoreFunctions) {\n\t\tvar objectString = '';\n\t\tvar objectName = Validator.isValid(internalName) ? internalName : object.name;\n\n\t\tvar funcString, objectPart, constructorString;\n\t\tignoreFunctions = Validator.verifyInput(ignoreFunctions, []);\n\t\tfor (var name in object.prototype) {\n\n\t\t\tobjectPart = object.prototype[name];\n\t\t\tif (name === 'constructor') {\n\n\t\t\t\tfuncString = objectPart.toString();\n\t\t\t\tfuncString = funcString.replace('function', '');\n\t\t\t\tconstructorString = '\\tfunction ' + objectName + funcString + ';\\n\\n';\n\t\t\t} else if (typeof objectPart === 'function') {\n\n\t\t\t\tif (ignoreFunctions.indexOf(name) < 0) {\n\n\t\t\t\t\tfuncString = objectPart.toString();\n\t\t\t\t\tobjectString += '\\t' + objectName + '.prototype.' + name + ' = ' + funcString + ';\\n\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tobjectString += '\\treturn ' + objectName + ';\\n';\n\t\tobjectString += '})();\\n\\n';\n\n\t\tvar inheritanceBlock = '';\n\t\tif (Validator.isValid(basePrototypeName)) {\n\n\t\t\tinheritanceBlock += '\\n';\n\t\t\tinheritanceBlock += objectName + '.prototype = Object.create( ' + basePrototypeName + '.prototype );\\n';\n\t\t\tinheritanceBlock += objectName + '.constructor = ' + objectName + ';\\n';\n\t\t\tinheritanceBlock += '\\n';\n\t\t}\n\t\tif (!Validator.isValid(constructorString)) {\n\n\t\t\tconstructorString = fullName + ' = (function () {\\n\\n';\n\t\t\tconstructorString += inheritanceBlock + '\\t' + object.prototype.constructor.toString() + '\\n\\n';\n\t\t\tobjectString = constructorString + objectString;\n\t\t} else {\n\n\t\t\tobjectString = fullName + ' = (function () {\\n\\n' + inheritanceBlock + constructorString + objectString;\n\t\t}\n\n\t\treturn objectString;\n\t};\n\n\treturn WorkerSupport;\n}();\n\n/**\n * Orchestrate loading of multiple OBJ files/data from an instruction queue with a configurable amount of workers (1-16).\n * Workflow:\n *   prepareWorkers\n *   enqueueForRun\n *   processQueue\n *   tearDown (to force stop)\n *\n * @class\n *\n * @param {string} classDef Class definition to be used for construction\n */\nTHREE.LoaderSupport.WorkerDirector = function () {\n\n\tvar LOADER_WORKER_DIRECTOR_VERSION = '2.2.1';\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tvar MAX_WEB_WORKER = 16;\n\tvar MAX_QUEUE_SIZE = 8192;\n\n\tfunction WorkerDirector(classDef) {\n\t\tconsole.info('Using THREE.LoaderSupport.WorkerDirector version: ' + LOADER_WORKER_DIRECTOR_VERSION);\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\n\t\tthis.maxQueueSize = MAX_QUEUE_SIZE;\n\t\tthis.maxWebWorkers = MAX_WEB_WORKER;\n\t\tthis.crossOrigin = 'anonymous';\n\n\t\tif (!Validator.isValid(classDef)) throw 'Provided invalid classDef: ' + classDef;\n\n\t\tthis.workerDescription = {\n\t\t\tclassDef: classDef,\n\t\t\tglobalCallbacks: {},\n\t\t\tworkerSupports: {},\n\t\t\tforceWorkerDataCopy: true\n\t\t};\n\t\tthis.objectsCompleted = 0;\n\t\tthis.instructionQueue = [];\n\t\tthis.instructionQueuePointer = 0;\n\n\t\tthis.callbackOnFinishedProcessing = null;\n\t}\n\n\t/**\n  * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @param {boolean} enabled True or false.\n  * @param {boolean} debug True or false.\n  */\n\tWorkerDirector.prototype.setLogging = function (enabled, debug) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t};\n\n\t/**\n  * Returns the maximum length of the instruction queue.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @returns {number}\n  */\n\tWorkerDirector.prototype.getMaxQueueSize = function () {\n\t\treturn this.maxQueueSize;\n\t};\n\n\t/**\n  * Returns the maximum number of workers.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @returns {number}\n  */\n\tWorkerDirector.prototype.getMaxWebWorkers = function () {\n\t\treturn this.maxWebWorkers;\n\t};\n\n\t/**\n  * Sets the CORS string to be used.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @param {string} crossOrigin CORS value\n  */\n\tWorkerDirector.prototype.setCrossOrigin = function (crossOrigin) {\n\t\tthis.crossOrigin = crossOrigin;\n\t};\n\n\t/**\n  * Forces all ArrayBuffers to be transferred to worker to be copied.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @param {boolean} forceWorkerDataCopy True or false.\n  */\n\tWorkerDirector.prototype.setForceWorkerDataCopy = function (forceWorkerDataCopy) {\n\t\tthis.workerDescription.forceWorkerDataCopy = forceWorkerDataCopy === true;\n\t};\n\n\t/**\n  * Create or destroy workers according limits. Set the name and register callbacks for dynamically created web workers.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @param {THREE.OBJLoader2.WWOBJLoader2.PrepDataCallbacks} globalCallbacks  Register global callbacks used by all web workers\n  * @param {number} maxQueueSize Set the maximum size of the instruction queue (1-1024)\n  * @param {number} maxWebWorkers Set the maximum amount of workers (1-16)\n  */\n\tWorkerDirector.prototype.prepareWorkers = function (globalCallbacks, maxQueueSize, maxWebWorkers) {\n\t\tif (Validator.isValid(globalCallbacks)) this.workerDescription.globalCallbacks = globalCallbacks;\n\t\tthis.maxQueueSize = Math.min(maxQueueSize, MAX_QUEUE_SIZE);\n\t\tthis.maxWebWorkers = Math.min(maxWebWorkers, MAX_WEB_WORKER);\n\t\tthis.maxWebWorkers = Math.min(this.maxWebWorkers, this.maxQueueSize);\n\t\tthis.objectsCompleted = 0;\n\t\tthis.instructionQueue = [];\n\t\tthis.instructionQueuePointer = 0;\n\n\t\tfor (var instanceNo = 0; instanceNo < this.maxWebWorkers; instanceNo++) {\n\n\t\t\tvar workerSupport = new THREE.LoaderSupport.WorkerSupport();\n\t\t\tworkerSupport.setLogging(this.logging.enabled, this.logging.debug);\n\t\t\tworkerSupport.setForceWorkerDataCopy(this.workerDescription.forceWorkerDataCopy);\n\t\t\tthis.workerDescription.workerSupports[instanceNo] = {\n\t\t\t\tinstanceNo: instanceNo,\n\t\t\t\tinUse: false,\n\t\t\t\tterminateRequested: false,\n\t\t\t\tworkerSupport: workerSupport,\n\t\t\t\tloader: null\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n  * Store run instructions in internal instructionQueue.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @param {THREE.LoaderSupport.PrepData} prepData\n  */\n\tWorkerDirector.prototype.enqueueForRun = function (prepData) {\n\t\tif (this.instructionQueue.length < this.maxQueueSize) {\n\t\t\tthis.instructionQueue.push(prepData);\n\t\t}\n\t};\n\n\t/**\n  * Returns if any workers are running.\n  *\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  * @returns {boolean}\n  */\n\tWorkerDirector.prototype.isRunning = function () {\n\t\tvar wsKeys = Object.keys(this.workerDescription.workerSupports);\n\t\treturn this.instructionQueue.length > 0 && this.instructionQueuePointer < this.instructionQueue.length || wsKeys.length > 0;\n\t};\n\n\t/**\n  * Process the instructionQueue until it is depleted.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  */\n\tWorkerDirector.prototype.processQueue = function () {\n\t\tvar prepData, supportDesc;\n\t\tfor (var instanceNo in this.workerDescription.workerSupports) {\n\n\t\t\tsupportDesc = this.workerDescription.workerSupports[instanceNo];\n\t\t\tif (!supportDesc.inUse) {\n\n\t\t\t\tif (this.instructionQueuePointer < this.instructionQueue.length) {\n\n\t\t\t\t\tprepData = this.instructionQueue[this.instructionQueuePointer];\n\t\t\t\t\tthis._kickWorkerRun(prepData, supportDesc);\n\t\t\t\t\tthis.instructionQueuePointer++;\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._deregister(supportDesc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.isRunning() && this.callbackOnFinishedProcessing !== null) {\n\n\t\t\tthis.callbackOnFinishedProcessing();\n\t\t\tthis.callbackOnFinishedProcessing = null;\n\t\t}\n\t};\n\n\tWorkerDirector.prototype._kickWorkerRun = function (prepData, supportDesc) {\n\t\tsupportDesc.inUse = true;\n\t\tsupportDesc.workerSupport.setTerminateRequested(supportDesc.terminateRequested);\n\n\t\tif (this.logging.enabled) console.info('\\nAssigning next item from queue to worker (queue length: ' + this.instructionQueue.length + ')\\n\\n');\n\n\t\tvar scope = this;\n\t\tvar prepDataCallbacks = prepData.getCallbacks();\n\t\tvar globalCallbacks = this.workerDescription.globalCallbacks;\n\t\tvar wrapperOnLoad = function wrapperOnLoad(event) {\n\t\t\tif (Validator.isValid(globalCallbacks.onLoad)) globalCallbacks.onLoad(event);\n\t\t\tif (Validator.isValid(prepDataCallbacks.onLoad)) prepDataCallbacks.onLoad(event);\n\t\t\tscope.objectsCompleted++;\n\t\t\tsupportDesc.inUse = false;\n\n\t\t\tscope.processQueue();\n\t\t};\n\n\t\tvar wrapperOnProgress = function wrapperOnProgress(event) {\n\t\t\tif (Validator.isValid(globalCallbacks.onProgress)) globalCallbacks.onProgress(event);\n\t\t\tif (Validator.isValid(prepDataCallbacks.onProgress)) prepDataCallbacks.onProgress(event);\n\t\t};\n\n\t\tvar wrapperOnMeshAlter = function wrapperOnMeshAlter(event, override) {\n\t\t\tif (Validator.isValid(globalCallbacks.onMeshAlter)) override = globalCallbacks.onMeshAlter(event, override);\n\t\t\tif (Validator.isValid(prepDataCallbacks.onMeshAlter)) override = globalCallbacks.onMeshAlter(event, override);\n\t\t\treturn override;\n\t\t};\n\n\t\tvar wrapperOnLoadMaterials = function wrapperOnLoadMaterials(materials) {\n\t\t\tif (Validator.isValid(globalCallbacks.onLoadMaterials)) materials = globalCallbacks.onLoadMaterials(materials);\n\t\t\tif (Validator.isValid(prepDataCallbacks.onLoadMaterials)) materials = prepDataCallbacks.onLoadMaterials(materials);\n\t\t\treturn materials;\n\t\t};\n\n\t\tsupportDesc.loader = this._buildLoader(supportDesc.instanceNo);\n\n\t\tvar updatedCallbacks = new THREE.LoaderSupport.Callbacks();\n\t\tupdatedCallbacks.setCallbackOnLoad(wrapperOnLoad);\n\t\tupdatedCallbacks.setCallbackOnProgress(wrapperOnProgress);\n\t\tupdatedCallbacks.setCallbackOnMeshAlter(wrapperOnMeshAlter);\n\t\tupdatedCallbacks.setCallbackOnLoadMaterials(wrapperOnLoadMaterials);\n\t\tprepData.callbacks = updatedCallbacks;\n\n\t\tsupportDesc.loader.run(prepData, supportDesc.workerSupport);\n\t};\n\n\tWorkerDirector.prototype._buildLoader = function (instanceNo) {\n\t\tvar classDef = this.workerDescription.classDef;\n\t\tvar loader = Object.create(classDef.prototype);\n\t\tclassDef.call(loader, THREE.DefaultLoadingManager);\n\n\t\t// verify that all required functions are implemented\n\t\tif (!loader.hasOwnProperty('instanceNo')) throw classDef.name + ' has no property \"instanceNo\".';\n\t\tloader.instanceNo = instanceNo;\n\n\t\tif (!loader.hasOwnProperty('workerSupport')) {\n\n\t\t\tthrow classDef.name + ' has no property \"workerSupport\".';\n\t\t}\n\t\tif (typeof loader.run !== 'function') throw classDef.name + ' has no function \"run\".';\n\t\tif (!loader.hasOwnProperty('callbacks') || !Validator.isValid(loader.callbacks)) {\n\n\t\t\tconsole.warn(classDef.name + ' has an invalid property \"callbacks\". Will change to \"THREE.LoaderSupport.Callbacks\"');\n\t\t\tloader.callbacks = new THREE.LoaderSupport.Callbacks();\n\t\t}\n\n\t\treturn loader;\n\t};\n\n\tWorkerDirector.prototype._deregister = function (supportDesc) {\n\t\tif (Validator.isValid(supportDesc)) {\n\n\t\t\tsupportDesc.workerSupport.setTerminateRequested(true);\n\t\t\tif (this.logging.enabled) console.info('Requested termination of worker #' + supportDesc.instanceNo + '.');\n\n\t\t\tvar loaderCallbacks = supportDesc.loader.callbacks;\n\t\t\tif (Validator.isValid(loaderCallbacks.onProgress)) loaderCallbacks.onProgress({ detail: { text: '' } });\n\t\t\tdelete this.workerDescription.workerSupports[supportDesc.instanceNo];\n\t\t}\n\t};\n\n\t/**\n  * Terminate all workers.\n  * @memberOf THREE.LoaderSupport.WorkerDirector\n  *\n  * @param {callback} callbackOnFinishedProcessing Function called once all workers finished processing.\n  */\n\tWorkerDirector.prototype.tearDown = function (callbackOnFinishedProcessing) {\n\t\tif (this.logging.enabled) console.info('WorkerDirector received the deregister call. Terminating all workers!');\n\n\t\tthis.instructionQueuePointer = this.instructionQueue.length;\n\t\tthis.callbackOnFinishedProcessing = Validator.verifyInput(callbackOnFinishedProcessing, null);\n\n\t\tfor (var name in this.workerDescription.workerSupports) {\n\n\t\t\tthis.workerDescription.workerSupports[name].terminateRequested = true;\n\t\t}\n\t};\n\n\treturn WorkerDirector;\n}();\n\n/***/ }),\n\n/***/ \"u223\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar content = __webpack_require__(\"G3cC\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(\"MTIv\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./detail.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./detail.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/0.a52f112.js","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".detail-container {\\n  width: 100%;\\n}\\n.detail-canvas-wrapper {\\n  position: relative;\\n  width: 100vw;\\n  height: 100vw;\\n  background-color: #fff;\\n}[data-rem=\\\"true\\\"] .detail-canvas-wrapper {\\n  width: 10rem;\\n  height: 10rem\\n}\\n.detail-canvas {\\n  width: 100%;\\n  height: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/happypack/loader.js?id=css!./node_modules/postcss-loader/lib!./node_modules/happypack/loader.js?id=less!./src/component/detail/detail.less\n// module id = G3cC\n// module chunks = 0","import './TrackballControls';\nimport './LoaderSupport';\n// import './OBJLoader2';\nimport './MTLLoader';\nimport './OBJLoader';\n\nfunction ThreeOBJ(element, params = {}) {\n  if (!element) {\n    throw new Error('three-obj function paramater {element} is empty');\n  }\n\n  this.renderer = null;\n  this.canvas = element;\n  this.aspectRatio = 1;\n  this.recalcAspectRatio();\n\n  this.scene = null;\n  this.cameraDefaults = {\n    posCamera: new THREE.Vector3(0, 0, 500),\n    posCameraTarget: new THREE.Vector3(0, 0, 0),\n    near: 1,\n    far: 1000,\n    fov: 25\n  };\n  this.camera = null;\n  this.cameraTarget = this.cameraDefaults.posCameraTarget;\n\n  this.controls = null;\n  this.filePath = params.filePath;\n  this.mtlFilePath = params.mtlFilePath;\n  this.loadedCallback = params.callback;\n}\n\nThreeOBJ.prototype.initGL = function () {\n  this.renderer = new THREE.WebGLRenderer({\n    canvas: this.canvas,\n    antialias: true,\n    autoClear: true\n  });\n  this.renderer.setClearColor(0xffffff);\n\n  this.scene = new THREE.Scene();\n\n  this.camera = new THREE.PerspectiveCamera(this.cameraDefaults.fov, this.aspectRatio, this.cameraDefaults.near, this.cameraDefaults.far);\n  this.resetCamera();\n  this.controls = new THREE.TrackballControls(this.camera, this.renderer.domElement);\n\n  // var ambientLight = new THREE.AmbientLight(0x000000);\n  // var directionalLight1 = new THREE.DirectionalLight(0xC0C090);\n  // var directionalLight2 = new THREE.DirectionalLight(0xC0C090);\n\n  // directionalLight1.position.set(-100, -50, 100);\n  // directionalLight2.position.set(100, 50, -100);\n\n  // this.scene.add(directionalLight1);\n  // this.scene.add(directionalLight2);\n  // this.scene.add(ambientLight);\n  var ambientLight = new THREE.AmbientLight(0xffffff, 0.4);\n  this.scene.add(ambientLight);\n\n  var pointLight = new THREE.PointLight(0xffffff, 0.8);\n  this.camera.add(pointLight);\n  this.scene.add(this.camera);\n};\n\nThreeOBJ.prototype.initContent = function () {\n\n  var scope = this;\n  var mtlLoader = new THREE.MTLLoader();\n  var objLoader = new THREE.OBJLoader();\n  var loadedFunction = function (geometry) {\n    geometry.position.y = -90;\n    scope.scene.add(geometry);\n    scope.loadedCallback && scope.loadedCallback();\n  };\n\n  if (this.mtlFilePath) {\n    mtlLoader.load(scope.mtlFilePath, function (materials) {\n      materials.preload();\n      objLoader\n        .setMaterials(materials)\n        .load(scope.filePath, loadedFunction);\n    });\n  } else {\n    objLoader.load(scope.filePath, loadedFunction);\n  }\n};\n\nThreeOBJ.prototype.resizeDisplayGL = function () {\n  this.controls.handleResize();\n\n  this.recalcAspectRatio();\n  this.renderer.setSize(this.canvas.offsetWidth, this.canvas.offsetHeight, false);\n\n  this.updateCamera();\n};\n\nThreeOBJ.prototype.recalcAspectRatio = function () {\n  this.aspectRatio = (this.canvas.offsetHeight === 0) ? 1 : this.canvas.offsetWidth / this.canvas.offsetHeight;\n};\n\nThreeOBJ.prototype.resetCamera = function () {\n  this.camera.position.copy(this.cameraDefaults.posCamera);\n  this.cameraTarget.copy(this.cameraDefaults.posCameraTarget);\n\n  this.updateCamera();\n};\n\nThreeOBJ.prototype.updateCamera = function () {\n  this.camera.aspect = this.aspectRatio;\n  this.camera.lookAt(this.cameraTarget);\n  this.camera.updateProjectionMatrix();\n};\n\nThreeOBJ.prototype.render = function () {\n  if (!this.renderer.autoClear) this.renderer.clear();\n  this.controls.update();\n  this.renderer.render(this.scene, this.camera);\n};\n\nThreeOBJ.prototype.destroy = function() {\n  this.renderer.clear();\n}\n\nexport default ThreeOBJ;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-obj.js","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nTHREE.OBJLoader = (function () {\n\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/;\n  // mtllib file_reference\n  var material_library_pattern = /^mtllib /;\n  // usemtl material_name\n  var material_use_pattern = /^usemtl /;\n\n  function ParserState() {\n\n    var state = {\n      objects: [],\n      object: {},\n\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n\n      materialLibraries: [],\n\n      startObject: function (name, fromDeclaration) {\n\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n\n          this.object.name = name;\n          this.object.fromDeclaration = (fromDeclaration !== false);\n          return;\n\n        }\n\n        var previousMaterial = (this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined);\n\n        if (this.object && typeof this.object._finalize === 'function') {\n\n          this.object._finalize(true);\n\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: (fromDeclaration !== false),\n\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: []\n          },\n          materials: [],\n          smooth: true,\n\n          startMaterial: function (name, libraries) {\n\n            var previous = this._finalize(false);\n\n            // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n\n              this.materials.splice(previous.index, 1);\n\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: (Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : ''),\n              smooth: (previous !== undefined ? previous.smooth : this.smooth),\n              groupStart: (previous !== undefined ? previous.groupEnd : 0),\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n\n              clone: function (index) {\n\n                var cloned = {\n                  index: (typeof index === 'number' ? index : this.index),\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n\n              }\n            };\n\n            this.materials.push(material);\n\n            return material;\n\n          },\n\n          currentMaterial: function () {\n\n            if (this.materials.length > 0) {\n\n              return this.materials[this.materials.length - 1];\n\n            }\n\n            return undefined;\n\n          },\n\n          _finalize: function (end) {\n\n            var lastMultiMaterial = this.currentMaterial();\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n\n            }\n\n            // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n            if (end && this.materials.length > 1) {\n\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n\n                if (this.materials[mi].groupCount <= 0) {\n\n                  this.materials.splice(mi, 1);\n\n                }\n\n              }\n\n            }\n\n            // Guarantee at least one empty material, this makes the creation later more straight forward.\n            if (end && this.materials.length === 0) {\n\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n\n            }\n\n            return lastMultiMaterial;\n\n          }\n        };\n\n        // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n\n        }\n\n        this.objects.push(this.object);\n\n      },\n\n      finalize: function () {\n\n        if (this.object && typeof this.object._finalize === 'function') {\n\n          this.object._finalize(true);\n\n        }\n\n      },\n\n      parseVertexIndex: function (value, len) {\n\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n\n      },\n\n      parseNormalIndex: function (value, len) {\n\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n\n      },\n\n      parseUVIndex: function (value, len) {\n\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n\n      },\n\n      addVertex: function (a, b, c) {\n\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n\n      },\n\n      addVertexPoint: function (a) {\n\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n\n      },\n\n      addVertexLine: function (a) {\n\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n\n      },\n\n      addNormal: function (a, b, c) {\n\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n\n      },\n\n      addColor: function (a, b, c) {\n\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n\n      },\n\n      addUV: function (a, b, c) {\n\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n\n      },\n\n      addUVLine: function (a) {\n\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n\n        dst.push(src[a + 0], src[a + 1]);\n\n      },\n\n      addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n\n        var vLen = this.vertices.length;\n\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n\n        this.addVertex(ia, ib, ic);\n\n        if (ua !== undefined && ua !== '') {\n\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n\n        }\n\n        if (na !== undefined && na !== '') {\n\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n\n          this.addNormal(ia, ib, ic);\n\n        }\n\n        if (this.colors.length > 0) {\n\n          this.addColor(ia, ib, ic);\n\n        }\n\n      },\n\n      addPointGeometry: function (vertices) {\n\n        this.object.geometry.type = 'Points';\n\n        var vLen = this.vertices.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n\n          this.addVertexPoint(this.parseVertexIndex(vertices[vi], vLen));\n\n        }\n\n      },\n\n      addLineGeometry: function (vertices, uvs) {\n\n        this.object.geometry.type = 'Line';\n\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n\n        }\n\n        for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n\n        }\n\n      }\n\n    };\n\n    state.startObject('', false);\n\n    return state;\n\n  }\n\n  //\n\n  function OBJLoader(manager) {\n\n    this.manager = (manager !== undefined) ? manager : THREE.DefaultLoadingManager;\n\n    this.materials = null;\n\n  }\n\n  OBJLoader.prototype = {\n\n    constructor: OBJLoader,\n\n    load: function (url, onLoad, onProgress, onError) {\n\n      var scope = this;\n\n      var loader = new THREE.FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n\n        onLoad(scope.parse(text));\n\n      }, onProgress, onError);\n\n    },\n\n    setPath: function (value) {\n\n      this.path = value;\n\n      return this;\n\n    },\n\n    setMaterials: function (materials) {\n\n      this.materials = materials;\n\n      return this;\n\n    },\n\n    parse: function (text) {\n\n      console.time('OBJLoader');\n\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n        lineFirstChar = '';\n      var lineLength = 0;\n      var result = [];\n\n      // Faster to just trim left side of the line. Use if available.\n      var trimLeft = (typeof ''.trimLeft === 'function');\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n\n        line = lines[i];\n\n        line = trimLeft ? line.trimLeft() : line.trim();\n\n        lineLength = line.length;\n\n        if (lineLength === 0) continue;\n\n        lineFirstChar = line.charAt(0);\n\n        // @todo invoke passed in handler if any\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n\n            case 'v':\n              state.vertices.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3])\n              );\n              if (data.length === 8) {\n\n                state.colors.push(\n                  parseFloat(data[4]),\n                  parseFloat(data[5]),\n                  parseFloat(data[6])\n\n                );\n\n              }\n              break;\n            case 'vn':\n              state.normals.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3])\n              );\n              break;\n            case 'vt':\n              state.uvs.push(\n                parseFloat(data[1]),\n                parseFloat(data[2])\n              );\n              break;\n\n          }\n\n        } else if (lineFirstChar === 'f') {\n\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = [];\n\n          // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n\n            }\n\n          }\n\n          // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n          var v1 = faceVertices[0];\n\n          for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n\n            state.addFace(\n              v1[0], v2[0], v3[0],\n              v1[1], v2[1], v3[1],\n              v1[2], v2[2], v3[2]\n            );\n\n          }\n\n        } else if (lineFirstChar === 'l') {\n\n          var lineParts = line.substring(1).trim().split(\" \");\n          var lineVertices = [],\n            lineUVs = [];\n\n          if (line.indexOf(\"/\") === -1) {\n\n            lineVertices = lineParts;\n\n          } else {\n\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n\n              var parts = lineParts[li].split(\"/\");\n\n              if (parts[0] !== \"\") lineVertices.push(parts[0]);\n              if (parts[1] !== \"\") lineUVs.push(parts[1]);\n\n            }\n\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n\n        } else if (lineFirstChar === 'p') {\n\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(\" \");\n\n          state.addPointGeometry(pointData);\n\n        } else if ((result = object_pattern.exec(line)) !== null) {\n\n          // o object_name\n          // or\n          // g group_name\n\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (\" \" + result[0].substr(1).trim()).substr(1);\n\n          state.startObject(name);\n\n        } else if (material_use_pattern.test(line)) {\n\n          // material\n\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n\n        } else if (material_library_pattern.test(line)) {\n\n          // mtl file\n\n          state.materialLibraries.push(line.substring(7).trim());\n\n        } else if (lineFirstChar === 's') {\n\n          result = line.split(' ');\n\n          // smooth shading\n\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n          if (result.length > 1) {\n\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = (value !== '0' && value !== 'off');\n\n          } else {\n\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n\n          }\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n\n        } else {\n\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n\n          throw new Error('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n\n        }\n\n      }\n\n      state.finalize();\n\n      var container = new THREE.Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n\n      for (var i = 0, l = state.objects.length; i < l; i++) {\n\n        var object = state.objects[i];\n        var geometry = object.geometry;\n        var materials = object.materials;\n        var isLine = (geometry.type === 'Line');\n        var isPoints = (geometry.type === 'Points');\n        var hasVertexColors = false;\n\n        // Skip o/g line declarations that did not follow with any faces\n        if (geometry.vertices.length === 0) continue;\n\n        var buffergeometry = new THREE.BufferGeometry();\n\n        buffergeometry.addAttribute('position', new THREE.Float32BufferAttribute(geometry.vertices, 3));\n\n        if (geometry.normals.length > 0) {\n\n          buffergeometry.addAttribute('normal', new THREE.Float32BufferAttribute(geometry.normals, 3));\n\n        } else {\n\n          buffergeometry.computeVertexNormals();\n\n        }\n\n        if (geometry.colors.length > 0) {\n\n          hasVertexColors = true;\n          buffergeometry.addAttribute('color', new THREE.Float32BufferAttribute(geometry.colors, 3));\n\n        }\n\n        if (geometry.uvs.length > 0) {\n\n          buffergeometry.addAttribute('uv', new THREE.Float32BufferAttribute(geometry.uvs, 2));\n\n        }\n\n        // Create materials\n\n        var createdMaterials = [];\n\n        for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n\n          var sourceMaterial = materials[mi];\n          var material = undefined;\n\n          if (this.materials !== null) {\n\n            material = this.materials.create(sourceMaterial.name);\n\n            // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n            if (isLine && material && !(material instanceof THREE.LineBasicMaterial)) {\n\n              var materialLine = new THREE.LineBasicMaterial();\n              materialLine.copy(material);\n              materialLine.lights = false; // TOFIX\n              material = materialLine;\n\n            } else if (isPoints && material && !(material instanceof THREE.PointsMaterial)) {\n\n              var materialPoints = new THREE.PointsMaterial({\n                size: 10,\n                sizeAttenuation: false\n              });\n              materialLine.copy(material);\n              material = materialPoints;\n\n            }\n\n          }\n\n          if (!material) {\n\n            if (isLine) {\n\n              material = new THREE.LineBasicMaterial();\n\n            } else if (isPoints) {\n\n              material = new THREE.PointsMaterial({\n                size: 1,\n                sizeAttenuation: false\n              });\n\n            } else {\n\n              material = new THREE.MeshPhongMaterial();\n\n            }\n\n            material.name = sourceMaterial.name;\n\n          }\n\n          material.flatShading = sourceMaterial.smooth ? false : true;\n          material.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors;\n\n          createdMaterials.push(material);\n\n        }\n\n        // Create mesh\n\n        var mesh;\n\n        if (createdMaterials.length > 1) {\n\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n\n            var sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n\n          }\n\n          if (isLine) {\n\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials);\n\n          } else if (isPoints) {\n\n            mesh = new THREE.Points(buffergeometry, createdMaterials);\n\n          } else {\n\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials);\n\n          }\n\n        } else {\n\n          if (isLine) {\n\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials[0]);\n\n          } else if (isPoints) {\n\n            mesh = new THREE.Points(buffergeometry, createdMaterials[0]);\n\n          } else {\n\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials[0]);\n\n          }\n\n        }\n\n        mesh.name = object.name;\n\n        container.add(mesh);\n\n      }\n\n      console.timeEnd('OBJLoader');\n\n      return container;\n\n    }\n\n  };\n\n  return OBJLoader;\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/OBJLoader.js","/**\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin \t/ http://mark-lundin.com\n * @author Simone Manini / http://daron1337.github.io\n * @author Luca Antiga \t/ http://lantiga.github.io\n */\n\nTHREE.TrackballControls = function ( object, domElement ) {\n\n\tvar _this = this;\n\tvar STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n\n\tthis.object = object;\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n\tthis.rotateSpeed = 1.0;\n\tthis.zoomSpeed = 1.2;\n\tthis.panSpeed = 0.3;\n\n\tthis.noRotate = false;\n\tthis.noZoom = false;\n\tthis.noPan = false;\n\n\tthis.staticMoving = false;\n\tthis.dynamicDampingFactor = 0.2;\n\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];\n\n\t// internals\n\n\tthis.target = new THREE.Vector3();\n\n\tvar EPS = 0.000001;\n\n\tvar lastPosition = new THREE.Vector3();\n\n\tvar _state = STATE.NONE,\n\t\t_prevState = STATE.NONE,\n\n\t\t_eye = new THREE.Vector3(),\n\n\t\t_movePrev = new THREE.Vector2(),\n\t\t_moveCurr = new THREE.Vector2(),\n\n\t\t_lastAxis = new THREE.Vector3(),\n\t\t_lastAngle = 0,\n\n\t\t_zoomStart = new THREE.Vector2(),\n\t\t_zoomEnd = new THREE.Vector2(),\n\n\t\t_touchZoomDistanceStart = 0,\n\t\t_touchZoomDistanceEnd = 0,\n\n\t\t_panStart = new THREE.Vector2(),\n\t\t_panEnd = new THREE.Vector2();\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.up0 = this.object.up.clone();\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\n\t// methods\n\n\tthis.handleResize = function () {\n\n\t\tif ( this.domElement === document ) {\n\n\t\t\tthis.screen.left = 0;\n\t\t\tthis.screen.top = 0;\n\t\t\tthis.screen.width = window.innerWidth;\n\t\t\tthis.screen.height = window.innerHeight;\n\n\t\t} else {\n\n\t\t\tvar box = this.domElement.getBoundingClientRect();\n\t\t\t// adjustments come from similar code in the jquery offset() function\n\t\t\tvar d = this.domElement.ownerDocument.documentElement;\n\t\t\tthis.screen.left = box.left + window.pageXOffset - d.clientLeft;\n\t\t\tthis.screen.top = box.top + window.pageYOffset - d.clientTop;\n\t\t\tthis.screen.width = box.width;\n\t\t\tthis.screen.height = box.height;\n\n\t\t}\n\n\t};\n\n\tthis.handleEvent = function ( event ) {\n\n\t\tif ( typeof this[ event.type ] == 'function' ) {\n\n\t\t\tthis[ event.type ]( event );\n\n\t\t}\n\n\t};\n\n\tvar getMouseOnScreen = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnScreen( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( pageX - _this.screen.left ) / _this.screen.width,\n\t\t\t\t( pageY - _this.screen.top ) / _this.screen.height\n\t\t\t);\n\n\t\t\treturn vector;\n\n\t\t};\n\n\t}() );\n\n\tvar getMouseOnCircle = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function getMouseOnCircle( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( ( pageX - _this.screen.width * 0.5 - _this.screen.left ) / ( _this.screen.width * 0.5 ) ),\n\t\t\t\t( ( _this.screen.height + 2 * ( _this.screen.top - pageY ) ) / _this.screen.width ) // screen.width intentional\n\t\t\t);\n\n\t\t\treturn vector;\n\n\t\t};\n\n\t}() );\n\n\tthis.rotateCamera = ( function () {\n\n\t\tvar axis = new THREE.Vector3(),\n\t\t\tquaternion = new THREE.Quaternion(),\n\t\t\teyeDirection = new THREE.Vector3(),\n\t\t\tobjectUpDirection = new THREE.Vector3(),\n\t\t\tobjectSidewaysDirection = new THREE.Vector3(),\n\t\t\tmoveDirection = new THREE.Vector3(),\n\t\t\tangle;\n\n\t\treturn function rotateCamera() {\n\n\t\t\tmoveDirection.set( _moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0 );\n\t\t\tangle = moveDirection.length();\n\n\t\t\tif ( angle ) {\n\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\n\t\t\t\teyeDirection.copy( _eye ).normalize();\n\t\t\t\tobjectUpDirection.copy( _this.object.up ).normalize();\n\t\t\t\tobjectSidewaysDirection.crossVectors( objectUpDirection, eyeDirection ).normalize();\n\n\t\t\t\tobjectUpDirection.setLength( _moveCurr.y - _movePrev.y );\n\t\t\t\tobjectSidewaysDirection.setLength( _moveCurr.x - _movePrev.x );\n\n\t\t\t\tmoveDirection.copy( objectUpDirection.add( objectSidewaysDirection ) );\n\n\t\t\t\taxis.crossVectors( moveDirection, _eye ).normalize();\n\n\t\t\t\tangle *= _this.rotateSpeed;\n\t\t\t\tquaternion.setFromAxisAngle( axis, angle );\n\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t\t_lastAxis.copy( axis );\n\t\t\t\t_lastAngle = angle;\n\n\t\t\t} else if ( ! _this.staticMoving && _lastAngle ) {\n\n\t\t\t\t_lastAngle *= Math.sqrt( 1.0 - _this.dynamicDampingFactor );\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\t\t\t\tquaternion.setFromAxisAngle( _lastAxis, _lastAngle );\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t}\n\n\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t};\n\n\t}() );\n\n\n\tthis.zoomCamera = function () {\n\n\t\tvar factor;\n\n\t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {\n\n\t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\t\t\t_eye.multiplyScalar( factor );\n\n\t\t} else {\n\n\t\t\tfactor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * _this.zoomSpeed;\n\n\t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n\n\t\t\t\t_eye.multiplyScalar( factor );\n\n\t\t\t}\n\n\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t} else {\n\n\t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.panCamera = ( function () {\n\n\t\tvar mouseChange = new THREE.Vector2(),\n\t\t\tobjectUp = new THREE.Vector3(),\n\t\t\tpan = new THREE.Vector3();\n\n\t\treturn function panCamera() {\n\n\t\t\tmouseChange.copy( _panEnd ).sub( _panStart );\n\n\t\t\tif ( mouseChange.lengthSq() ) {\n\n\t\t\t\tmouseChange.multiplyScalar( _eye.length() * _this.panSpeed );\n\n\t\t\t\tpan.copy( _eye ).cross( _this.object.up ).setLength( mouseChange.x );\n\t\t\t\tpan.add( objectUp.copy( _this.object.up ).setLength( mouseChange.y ) );\n\n\t\t\t\t_this.object.position.add( pan );\n\t\t\t\t_this.target.add( pan );\n\n\t\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t\t_panStart.copy( _panEnd );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( _this.dynamicDampingFactor ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.checkDistances = function () {\n\n\t\tif ( ! _this.noZoom || ! _this.noPan ) {\n\n\t\t\tif ( _eye.lengthSq() > _this.maxDistance * _this.maxDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.maxDistance ) );\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t}\n\n\t\t\tif ( _eye.lengthSq() < _this.minDistance * _this.minDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.minDistance ) );\n\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.update = function () {\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\tif ( ! _this.noRotate ) {\n\n\t\t\t_this.rotateCamera();\n\n\t\t}\n\n\t\tif ( ! _this.noZoom ) {\n\n\t\t\t_this.zoomCamera();\n\n\t\t}\n\n\t\tif ( ! _this.noPan ) {\n\n\t\t\t_this.panCamera();\n\n\t\t}\n\n\t\t_this.object.position.addVectors( _this.target, _eye );\n\n\t\t_this.checkDistances();\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\tif ( lastPosition.distanceToSquared( _this.object.position ) > EPS ) {\n\n\t\t\t_this.dispatchEvent( changeEvent );\n\n\t\t\tlastPosition.copy( _this.object.position );\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\t_state = STATE.NONE;\n\t\t_prevState = STATE.NONE;\n\n\t\t_this.target.copy( _this.target0 );\n\t\t_this.object.position.copy( _this.position0 );\n\t\t_this.object.up.copy( _this.up0 );\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\t_this.dispatchEvent( changeEvent );\n\n\t\tlastPosition.copy( _this.object.position );\n\n\t};\n\n\t// listeners\n\n\tfunction keydown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\twindow.removeEventListener( 'keydown', keydown );\n\n\t\t_prevState = _state;\n\n\t\tif ( _state !== STATE.NONE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ROTATE ] && ! _this.noRotate ) {\n\n\t\t\t_state = STATE.ROTATE;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ZOOM ] && ! _this.noZoom ) {\n\n\t\t\t_state = STATE.ZOOM;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.PAN ] && ! _this.noPan ) {\n\n\t\t\t_state = STATE.PAN;\n\n\t\t}\n\n\t}\n\n\tfunction keyup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\t_state = _prevState;\n\n\t\twindow.addEventListener( 'keydown', keydown, false );\n\n\t}\n\n\tfunction mousedown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.NONE ) {\n\n\t\t\t_state = event.button;\n\n\t\t}\n\n\t\tif ( _state === STATE.ROTATE && ! _this.noRotate ) {\n\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t} else if ( _state === STATE.ZOOM && ! _this.noZoom ) {\n\n\t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_zoomEnd.copy( _zoomStart );\n\n\t\t} else if ( _state === STATE.PAN && ! _this.noPan ) {\n\n\t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_panEnd.copy( _panStart );\n\n\t\t}\n\n\t\tdocument.addEventListener( 'mousemove', mousemove, false );\n\t\tdocument.addEventListener( 'mouseup', mouseup, false );\n\n\t\t_this.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction mousemove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.ROTATE && ! _this.noRotate ) {\n\n\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.ZOOM && ! _this.noZoom ) {\n\n\t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.PAN && ! _this.noPan ) {\n\n\t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t}\n\n\t}\n\n\tfunction mouseup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\t_state = STATE.NONE;\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove );\n\t\tdocument.removeEventListener( 'mouseup', mouseup );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction mousewheel( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tif ( _this.noZoom === true ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.deltaMode ) {\n\n\t\t\tcase 2:\n\t\t\t\t// Zoom in pages\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.025;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t// Zoom in lines\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.01;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// undefined, 0, assume pixels\n\t\t\t\t_zoomStart.y -= event.deltaY * 0.00025;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( startEvent );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction touchstart( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\tbreak;\n\n\t\t\tdefault: // 2 or more\n\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );\n\t\t\t\t_panEnd.copy( _panStart );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction touchmove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault: // 2 or more\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 0:\n\t\t\t\t_state = STATE.NONE;\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction contextmenu( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t}\n\n\tthis.dispose = function () {\n\n\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\tthis.domElement.removeEventListener( 'mousedown', mousedown, false );\n\t\tthis.domElement.removeEventListener( 'wheel', mousewheel, false );\n\n\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove, false );\n\t\tdocument.removeEventListener( 'mouseup', mouseup, false );\n\n\t\twindow.removeEventListener( 'keydown', keydown, false );\n\t\twindow.removeEventListener( 'keyup', keyup, false );\n\n\t};\n\n\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\tthis.domElement.addEventListener( 'mousedown', mousedown, false );\n\tthis.domElement.addEventListener( 'wheel', mousewheel, false );\n\n\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\twindow.addEventListener( 'keydown', keydown, false );\n\twindow.addEventListener( 'keyup', keyup, false );\n\n\tthis.handleResize();\n\n\t// force an update at start\n\tthis.update();\n\n};\n\nTHREE.TrackballControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.TrackballControls.prototype.constructor = THREE.TrackballControls;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/TrackballControls.js","import './detail.less'\n\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport ThreeObj from '../../lib/three-obj';\nimport Spin from \"../common/spin\";\n\ninterface Props { };\nconst mapDispatchToProps = {};\n\nclass Detail extends React.Component<Props> {\n  private threeApp: number;\n  public state = {\n    isLoading: true,\n  };\n  constructor(props: Props) {\n    super(props);\n    this.canvasApp = 0;\n  }\n\n  public componentDidMount() {\n    // 'http://localhost:8999/static/dog.obj',\n    // 'http://localhost:8999/static/male02.obj',\n    // 'http://localhost:8999/static/obj.mtl',\n    this.canvasApp = new ThreeObj(this.refs['three-canvas'], {\n      filePath: './static/male02.obj',\n      callback: () => {\n        this.setState({\n          isLoading: false,\n        });\n      }\n    });\n\n    const render = () => {\n      if (this.canvasApp) {\n        requestAnimationFrame(render);\n        this.canvasApp.render();\n      }\n    };\n\n    window.addEventListener('resize', this.resizeWindow, false);\n\n    this.canvasApp.initGL();\n    this.canvasApp.resizeDisplayGL();\n    this.canvasApp.initContent();\n\n    render();\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeWindow, false);\n    this.canvasApp.destroy();\n    this.canvasApp = 0;\n  }\n\n  public render() {\n    return (\n      <div className=\"detail-container\">\n        <Spin className=\"detail-canvas-wrapper\" spinning={this.state.isLoading}>\n          <canvas className=\"detail-canvas\" ref=\"three-canvas\"></canvas>\n        </Spin>\n      </div>\n    )\n  }\n\n  private resizeWindow = () => {\n    if (this.threeApp && this.threeApp.resizeDisplayGL) {\n      this.threeApp.resizeDisplayGL();\n    }\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return state.index\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/detail/detail.tsx","/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */\n\nTHREE.MTLLoader = function (manager) {\n\n  this.manager = (manager !== undefined) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.MTLLoader.prototype = {\n\n  constructor: THREE.MTLLoader,\n\n  /**\n   * Loads and parses a MTL asset from a URL.\n   *\n   * @param {String} url - URL to the MTL file.\n   * @param {Function} [onLoad] - Callback invoked with the loaded object.\n   * @param {Function} [onProgress] - Callback for download progress.\n   * @param {Function} [onError] - Callback for download errors.\n   *\n   * @see setPath setTexturePath\n   *\n   * @note In order for relative texture references to resolve correctly\n   * you must call setPath and/or setTexturePath explicitly prior to load.\n   */\n  load: function (url, onLoad, onProgress, onError) {\n\n    var scope = this;\n\n    var loader = new THREE.FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.load(url, function (text) {\n\n      onLoad(scope.parse(text));\n\n    }, onProgress, onError);\n\n  },\n\n  /**\n   * Set base path for resolving references.\n   * If set this path will be prepended to each loaded and found reference.\n   *\n   * @see setTexturePath\n   * @param {String} path\n   * @return {THREE.MTLLoader}\n   *\n   * @example\n   *     mtlLoader.setPath( 'assets/obj/' );\n   *     mtlLoader.load( 'my.mtl', ... );\n   */\n  setPath: function (path) {\n\n    this.path = path;\n    return this;\n\n  },\n\n  /**\n   * Set base path for resolving texture references.\n   * If set this path will be prepended found texture reference.\n   * If not set and setPath is, it will be used as texture base path.\n   *\n   * @see setPath\n   * @param {String} path\n   * @return {THREE.MTLLoader}\n   *\n   * @example\n   *     mtlLoader.setPath( 'assets/obj/' );\n   *     mtlLoader.setTexturePath( 'assets/textures/' );\n   *     mtlLoader.load( 'my.mtl', ... );\n   */\n  setTexturePath: function (path) {\n\n    this.texturePath = path;\n    return this;\n\n  },\n\n  setBaseUrl: function (path) {\n\n    console.warn('THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.');\n\n    return this.setTexturePath(path);\n\n  },\n\n  setCrossOrigin: function (value) {\n\n    this.crossOrigin = value;\n    return this;\n\n  },\n\n  setMaterialOptions: function (value) {\n\n    this.materialOptions = value;\n    return this;\n\n  },\n\n  /**\n   * Parses a MTL file.\n   *\n   * @param {String} text - Content of MTL file\n   * @return {THREE.MTLLoader.MaterialCreator}\n   *\n   * @see setPath setTexturePath\n   *\n   * @note In order for relative texture references to resolve correctly\n   * you must call setPath and/or setTexturePath explicitly prior to parse.\n   */\n  parse: function (text) {\n\n    var lines = text.split('\\n');\n    var info = {};\n    var delimiter_pattern = /\\s+/;\n    var materialsInfo = {};\n\n    for (var i = 0; i < lines.length; i++) {\n\n      var line = lines[i];\n      line = line.trim();\n\n      if (line.length === 0 || line.charAt(0) === '#') {\n\n        // Blank line or comment ignore\n        continue;\n\n      }\n\n      var pos = line.indexOf(' ');\n\n      var key = (pos >= 0) ? line.substring(0, pos) : line;\n      key = key.toLowerCase();\n\n      var value = (pos >= 0) ? line.substring(pos + 1) : '';\n      value = value.trim();\n\n      if (key === 'newmtl') {\n\n        // New material\n\n        info = {\n          name: value\n        };\n        materialsInfo[value] = info;\n\n      } else if (info) {\n\n        if (key === 'ka' || key === 'kd' || key === 'ks') {\n\n          var ss = value.split(delimiter_pattern, 3);\n          info[key] = [parseFloat(ss[0]), parseFloat(ss[1]), parseFloat(ss[2])];\n\n        } else {\n\n          info[key] = value;\n\n        }\n\n      }\n\n    }\n\n    var materialCreator = new THREE.MTLLoader.MaterialCreator(this.texturePath || this.path, this.materialOptions);\n    materialCreator.setCrossOrigin(this.crossOrigin);\n    materialCreator.setManager(this.manager);\n    materialCreator.setMaterials(materialsInfo);\n    return materialCreator;\n\n  }\n\n};\n\n/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nTHREE.MTLLoader.MaterialCreator = function (baseUrl, options) {\n\n  this.baseUrl = baseUrl || '';\n  this.options = options;\n  this.materialsInfo = {};\n  this.materials = {};\n  this.materialsArray = [];\n  this.nameLookup = {};\n\n  this.side = (this.options && this.options.side) ? this.options.side : THREE.FrontSide;\n  this.wrap = (this.options && this.options.wrap) ? this.options.wrap : THREE.RepeatWrapping;\n\n};\n\nTHREE.MTLLoader.MaterialCreator.prototype = {\n\n  constructor: THREE.MTLLoader.MaterialCreator,\n\n  crossOrigin: 'anonymous',\n\n  setCrossOrigin: function (value) {\n\n    this.crossOrigin = value;\n    return this;\n\n  },\n\n  setManager: function (value) {\n\n    this.manager = value;\n\n  },\n\n  setMaterials: function (materialsInfo) {\n\n    this.materialsInfo = this.convert(materialsInfo);\n    this.materials = {};\n    this.materialsArray = [];\n    this.nameLookup = {};\n\n  },\n\n  convert: function (materialsInfo) {\n\n    if (!this.options) return materialsInfo;\n\n    var converted = {};\n\n    for (var mn in materialsInfo) {\n\n      // Convert materials info into normalized form based on options\n\n      var mat = materialsInfo[mn];\n\n      var covmat = {};\n\n      converted[mn] = covmat;\n\n      for (var prop in mat) {\n\n        var save = true;\n        var value = mat[prop];\n        var lprop = prop.toLowerCase();\n\n        switch (lprop) {\n\n          case 'kd':\n          case 'ka':\n          case 'ks':\n\n            // Diffuse color (color under white light) using RGB values\n\n            if (this.options && this.options.normalizeRGB) {\n\n              value = [value[0] / 255, value[1] / 255, value[2] / 255];\n\n            }\n\n            if (this.options && this.options.ignoreZeroRGBs) {\n\n              if (value[0] === 0 && value[1] === 0 && value[2] === 0) {\n\n                // ignore\n\n                save = false;\n\n              }\n\n            }\n\n            break;\n\n          default:\n\n            break;\n\n        }\n\n        if (save) {\n\n          covmat[lprop] = value;\n\n        }\n\n      }\n\n    }\n\n    return converted;\n\n  },\n\n  preload: function () {\n\n    for (var mn in this.materialsInfo) {\n\n      this.create(mn);\n\n    }\n\n  },\n\n  getIndex: function (materialName) {\n\n    return this.nameLookup[materialName];\n\n  },\n\n  getAsArray: function () {\n\n    var index = 0;\n\n    for (var mn in this.materialsInfo) {\n\n      this.materialsArray[index] = this.create(mn);\n      this.nameLookup[mn] = index;\n      index++;\n\n    }\n\n    return this.materialsArray;\n\n  },\n\n  create: function (materialName) {\n\n    if (this.materials[materialName] === undefined) {\n\n      this.createMaterial_(materialName);\n\n    }\n\n    return this.materials[materialName];\n\n  },\n\n  createMaterial_: function (materialName) {\n\n    // Create material\n\n    var scope = this;\n    var mat = this.materialsInfo[materialName];\n    var params = {\n\n      name: materialName,\n      side: this.side\n\n    };\n\n    function resolveURL(baseUrl, url) {\n\n      if (typeof url !== 'string' || url === '')\n        return '';\n\n      // Absolute URL\n      if (/^https?:\\/\\//i.test(url)) return url;\n\n      return baseUrl + url;\n\n    }\n\n    function setMapForType(mapType, value) {\n\n      if (params[mapType]) return; // Keep the first encountered texture\n\n      var texParams = scope.getTextureParams(value, params);\n      var map = scope.loadTexture(resolveURL(scope.baseUrl, texParams.url));\n\n      map.repeat.copy(texParams.scale);\n      map.offset.copy(texParams.offset);\n\n      map.wrapS = scope.wrap;\n      map.wrapT = scope.wrap;\n\n      params[mapType] = map;\n\n    }\n\n    for (var prop in mat) {\n\n      var value = mat[prop];\n      var n;\n\n      if (value === '') continue;\n\n      switch (prop.toLowerCase()) {\n\n        // Ns is material specular exponent\n\n        case 'kd':\n\n          // Diffuse color (color under white light) using RGB values\n\n          params.color = new THREE.Color().fromArray(value);\n\n          break;\n\n        case 'ks':\n\n          // Specular color (color when light is reflected from shiny surface) using RGB values\n          params.specular = new THREE.Color().fromArray(value);\n\n          break;\n\n        case 'map_kd':\n\n          // Diffuse texture map\n\n          setMapForType(\"map\", value);\n\n          break;\n\n        case 'map_ks':\n\n          // Specular map\n\n          setMapForType(\"specularMap\", value);\n\n          break;\n\n        case 'norm':\n\n          setMapForType(\"normalMap\", value);\n\n          break;\n\n        case 'map_bump':\n        case 'bump':\n\n          // Bump texture map\n\n          setMapForType(\"bumpMap\", value);\n\n          break;\n\n        case 'ns':\n\n          // The specular exponent (defines the focus of the specular highlight)\n          // A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n          params.shininess = parseFloat(value);\n\n          break;\n\n        case 'd':\n          n = parseFloat(value);\n\n          if (n < 1) {\n\n            params.opacity = n;\n            params.transparent = true;\n\n          }\n\n          break;\n\n        case 'tr':\n          n = parseFloat(value);\n\n          if (this.options && this.options.invertTrProperty) n = 1 - n;\n\n          if (n > 0) {\n\n            params.opacity = 1 - n;\n            params.transparent = true;\n\n          }\n\n          break;\n\n        default:\n          break;\n\n      }\n\n    }\n\n    this.materials[materialName] = new THREE.MeshPhongMaterial(params);\n    return this.materials[materialName];\n\n  },\n\n  getTextureParams: function (value, matParams) {\n\n    var texParams = {\n\n      scale: new THREE.Vector2(1, 1),\n      offset: new THREE.Vector2(0, 0)\n\n    };\n\n    var items = value.split(/\\s+/);\n    var pos;\n\n    pos = items.indexOf('-bm');\n\n    if (pos >= 0) {\n\n      matParams.bumpScale = parseFloat(items[pos + 1]);\n      items.splice(pos, 2);\n\n    }\n\n    pos = items.indexOf('-s');\n\n    if (pos >= 0) {\n\n      texParams.scale.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n      items.splice(pos, 4); // we expect 3 parameters here!\n\n    }\n\n    pos = items.indexOf('-o');\n\n    if (pos >= 0) {\n\n      texParams.offset.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n      items.splice(pos, 4); // we expect 3 parameters here!\n\n    }\n\n    texParams.url = items.join(' ').trim();\n    return texParams;\n\n  },\n\n  loadTexture: function (url, mapping, onLoad, onProgress, onError) {\n\n    var texture;\n    var loader = THREE.Loader.Handlers.get(url);\n    var manager = (this.manager !== undefined) ? this.manager : THREE.DefaultLoadingManager;\n\n    if (loader === null) {\n\n      loader = new THREE.TextureLoader(manager);\n\n    }\n\n    if (loader.setCrossOrigin) loader.setCrossOrigin(this.crossOrigin);\n    texture = loader.load(url, onLoad, onProgress, onError);\n\n    if (mapping !== undefined) texture.mapping = mapping;\n\n    return texture;\n\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/MTLLoader.js","/**\n  * @author Kai Salmen / https://kaisalmen.de\n  * Development repository: https://github.com/kaisalmen/WWOBJLoader\n  */\n\n'use strict';\n\nif ( THREE.LoaderSupport === undefined ) { THREE.LoaderSupport = {} }\n\n/**\n * Validation functions.\n * @class\n */\nTHREE.LoaderSupport.Validator = {\n\t/**\n\t * If given input is null or undefined, false is returned otherwise true.\n\t *\n\t * @param input Can be anything\n\t * @returns {boolean}\n\t */\n\tisValid: function( input ) {\n\t\treturn ( input !== null && input !== undefined );\n\t},\n\t/**\n\t * If given input is null or undefined, the defaultValue is returned otherwise the given input.\n\t *\n\t * @param input Can be anything\n\t * @param defaultValue Can be anything\n\t * @returns {*}\n\t */\n\tverifyInput: function( input, defaultValue ) {\n\t\treturn ( input === null || input === undefined ) ? defaultValue : input;\n\t}\n};\n\n\n/**\n * Callbacks utilized by loaders and builders.\n * @class\n */\nTHREE.LoaderSupport.Callbacks = (function () {\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction Callbacks() {\n\t\tthis.onProgress = null;\n\t\tthis.onMeshAlter = null;\n\t\tthis.onLoad = null;\n\t\tthis.onLoadMaterials = null;\n\t}\n\n\t/**\n\t * Register callback function that is invoked by internal function \"announceProgress\" to print feedback.\n\t * @memberOf THREE.LoaderSupport.Callbacks\n\t *\n\t * @param {callback} callbackOnProgress Callback function for described functionality\n\t */\n\tCallbacks.prototype.setCallbackOnProgress = function ( callbackOnProgress ) {\n\t\tthis.onProgress = Validator.verifyInput( callbackOnProgress, this.onProgress );\n\t};\n\n\t/**\n\t * Register callback function that is called every time a mesh was loaded.\n\t * Use {@link THREE.LoaderSupport.LoadedMeshUserOverride} for alteration instructions (geometry, material or disregard mesh).\n\t * @memberOf THREE.LoaderSupport.Callbacks\n\t *\n\t * @param {callback} callbackOnMeshAlter Callback function for described functionality\n\t */\n\tCallbacks.prototype.setCallbackOnMeshAlter = function ( callbackOnMeshAlter ) {\n\t\tthis.onMeshAlter = Validator.verifyInput( callbackOnMeshAlter, this.onMeshAlter );\n\t};\n\n\t/**\n\t * Register callback function that is called once loading of the complete OBJ file is completed.\n\t * @memberOf THREE.LoaderSupport.Callbacks\n\t *\n\t * @param {callback} callbackOnLoad Callback function for described functionality\n\t */\n\tCallbacks.prototype.setCallbackOnLoad = function ( callbackOnLoad ) {\n\t\tthis.onLoad = Validator.verifyInput( callbackOnLoad, this.onLoad );\n\t};\n\n\t/**\n\t * Register callback function that is called when materials have been loaded.\n\t * @memberOf THREE.LoaderSupport.Callbacks\n\t *\n\t * @param {callback} callbackOnLoadMaterials Callback function for described functionality\n\t */\n\tCallbacks.prototype.setCallbackOnLoadMaterials = function ( callbackOnLoadMaterials ) {\n\t\tthis.onLoadMaterials = Validator.verifyInput( callbackOnLoadMaterials, this.onLoadMaterials );\n\t};\n\n\treturn Callbacks;\n})();\n\n\n/**\n * Object to return by callback onMeshAlter. Used to disregard a certain mesh or to return one to many meshes.\n * @class\n *\n * @param {boolean} disregardMesh=false Tell implementation to completely disregard this mesh\n * @param {boolean} disregardMesh=false Tell implementation that mesh(es) have been altered or added\n */\nTHREE.LoaderSupport.LoadedMeshUserOverride = (function () {\n\n\tfunction LoadedMeshUserOverride( disregardMesh, alteredMesh ) {\n\t\tthis.disregardMesh = disregardMesh === true;\n\t\tthis.alteredMesh = alteredMesh === true;\n\t\tthis.meshes = [];\n\t}\n\n\t/**\n\t * Add a mesh created within callback.\n\t *\n\t * @memberOf THREE.OBJLoader2.LoadedMeshUserOverride\n\t *\n\t * @param {THREE.Mesh} mesh\n\t */\n\tLoadedMeshUserOverride.prototype.addMesh = function ( mesh ) {\n\t\tthis.meshes.push( mesh );\n\t\tthis.alteredMesh = true;\n\t};\n\n\t/**\n\t * Answers if mesh shall be disregarded completely.\n\t *\n\t * @returns {boolean}\n\t */\n\tLoadedMeshUserOverride.prototype.isDisregardMesh = function () {\n\t\treturn this.disregardMesh;\n\t};\n\n\t/**\n\t * Answers if new mesh(es) were created.\n\t *\n\t * @returns {boolean}\n\t */\n\tLoadedMeshUserOverride.prototype.providesAlteredMeshes = function () {\n\t\treturn this.alteredMesh;\n\t};\n\n\treturn LoadedMeshUserOverride;\n})();\n\n\n/**\n * A resource description used by {@link THREE.LoaderSupport.PrepData} and others.\n * @class\n *\n * @param {string} url URL to the file\n * @param {string} extension The file extension (type)\n */\nTHREE.LoaderSupport.ResourceDescriptor = (function () {\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction ResourceDescriptor( url, extension ) {\n\t\tvar urlParts = url.split( '/' );\n\n\t\tif ( urlParts.length < 2 ) {\n\n\t\t\tthis.path = null;\n\t\t\tthis.name = url;\n\t\t\tthis.url = url;\n\n\t\t} else {\n\n\t\t\tthis.path = Validator.verifyInput( urlParts.slice( 0, urlParts.length - 1).join( '/' ) + '/', null );\n\t\t\tthis.name = urlParts[ urlParts.length - 1 ];\n\t\t\tthis.url = url;\n\n\t\t}\n\t\tthis.name = Validator.verifyInput( this.name, 'Unnamed_Resource' );\n\t\tthis.extension = Validator.verifyInput( extension, 'default' );\n\t\tthis.extension = this.extension.trim();\n\t\tthis.content = null;\n\t}\n\n\t/**\n\t * Set the content of this resource\n\t * @memberOf THREE.LoaderSupport.ResourceDescriptor\n\t *\n\t * @param {Object} content The file content as arraybuffer or text\n\t */\n\tResourceDescriptor.prototype.setContent = function ( content ) {\n\t\tthis.content = Validator.verifyInput( content, null );\n\t};\n\n\treturn ResourceDescriptor;\n})();\n\n\n/**\n * Configuration instructions to be used by run method.\n * @class\n */\nTHREE.LoaderSupport.PrepData = (function () {\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction PrepData( modelName ) {\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\t\tthis.modelName = Validator.verifyInput( modelName, '' );\n\t\tthis.resources = [];\n\t\tthis.callbacks = new THREE.LoaderSupport.Callbacks();\n\t}\n\n\t/**\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n\t * @memberOf THREE.LoaderSupport.PrepData\n\t *\n\t * @param {boolean} enabled True or false.\n\t * @param {boolean} debug True or false.\n\t */\n\tPrepData.prototype.setLogging = function ( enabled, debug ) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t};\n\n\t/**\n\t * Returns all callbacks as {@link THREE.LoaderSupport.Callbacks}\n\t * @memberOf THREE.LoaderSupport.PrepData\n\t *\n\t * @returns {THREE.LoaderSupport.Callbacks}\n\t */\n\tPrepData.prototype.getCallbacks = function () {\n\t\treturn this.callbacks;\n\t};\n\n\t/**\n\t * Add a resource description.\n\t * @memberOf THREE.LoaderSupport.PrepData\n\t *\n\t * @param {THREE.LoaderSupport.ResourceDescriptor} Adds a {@link THREE.LoaderSupport.ResourceDescriptor}\n\t */\n\tPrepData.prototype.addResource = function ( resource ) {\n\t\tthis.resources.push( resource );\n\t};\n\n\t/**\n\t * Clones this object and returns it afterwards. Callbacks and resources are not cloned deep (references!).\n\t * @memberOf THREE.LoaderSupport.PrepData\n\t *\n\t * @returns {@link THREE.LoaderSupport.PrepData}\n\t */\n\tPrepData.prototype.clone = function () {\n\t\tvar clone = new THREE.LoaderSupport.PrepData( this.modelName );\n\t\tclone.logging.enabled = this.logging.enabled;\n\t\tclone.logging.debug = this.logging.debug;\n\t\tclone.resources = this.resources;\n\t\tclone.callbacks = this.callbacks;\n\n\t\tvar property, value;\n\t\tfor ( property in this ) {\n\n\t\t\tvalue = this[ property ];\n\t\t\tif ( ! clone.hasOwnProperty( property ) && typeof this[ property ] !== 'function' ) {\n\n\t\t\t\tclone[ property ] = value;\n\n\t\t\t}\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\n\t/**\n\t * Identify files or content of interest from an Array of {@link THREE.LoaderSupport.ResourceDescriptor}.\n\t * @memberOf THREE.LoaderSupport.PrepData\n\t *\n\t * @param {THREE.LoaderSupport.ResourceDescriptor[]} resources Array of {@link THREE.LoaderSupport.ResourceDescriptor}\n\t * @param Object fileDesc Object describing which resources are of interest (ext, type (string or UInt8Array) and ignore (boolean))\n\t * @returns {{}} Object with each \"ext\" and the corresponding {@link THREE.LoaderSupport.ResourceDescriptor}\n\t */\n\tPrepData.prototype.checkResourceDescriptorFiles = function ( resources, fileDesc ) {\n\t\tvar resource, triple, i, found;\n\t\tvar result = {};\n\n\t\tfor ( var index in resources ) {\n\n\t\t\tresource = resources[ index ];\n\t\t\tfound = false;\n\t\t\tif ( ! Validator.isValid( resource.name ) ) continue;\n\t\t\tif ( Validator.isValid( resource.content ) ) {\n\n\t\t\t\tfor ( i = 0; i < fileDesc.length && !found; i++ ) {\n\n\t\t\t\t\ttriple = fileDesc[ i ];\n\t\t\t\t\tif ( resource.extension.toLowerCase() === triple.ext.toLowerCase() ) {\n\n\t\t\t\t\t\tif ( triple.ignore ) {\n\n\t\t\t\t\t\t\tfound = true;\n\n\t\t\t\t\t\t} else if ( triple.type === \"ArrayBuffer\" ) {\n\n\t\t\t\t\t\t\t// fast-fail on bad type\n\t\t\t\t\t\t\tif ( ! ( resource.content instanceof ArrayBuffer || resource.content instanceof Uint8Array ) ) throw 'Provided content is not of type ArrayBuffer! Aborting...';\n\t\t\t\t\t\t\tresult[ triple.ext ] = resource;\n\t\t\t\t\t\t\tfound = true;\n\n\t\t\t\t\t\t} else if ( triple.type === \"String\" ) {\n\n\t\t\t\t\t\t\tif ( ! ( typeof( resource.content ) === 'string' || resource.content instanceof String) ) throw 'Provided  content is not of type String! Aborting...';\n\t\t\t\t\t\t\tresult[ triple.ext ] = resource;\n\t\t\t\t\t\t\tfound = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif ( !found ) throw 'Unidentified resource \"' + resource.name + '\": ' + resource.url;\n\n\t\t\t} else {\n\n\t\t\t\t// fast-fail on bad type\n\t\t\t\tif ( ! ( typeof( resource.name ) === 'string' || resource.name instanceof String ) ) throw 'Provided file is not properly defined! Aborting...';\n\t\t\t\tfor ( i = 0; i < fileDesc.length && !found; i++ ) {\n\n\t\t\t\t\ttriple = fileDesc[ i ];\n\t\t\t\t\tif ( resource.extension.toLowerCase() === triple.ext.toLowerCase() ) {\n\n\t\t\t\t\t\tif ( ! triple.ignore ) result[ triple.ext ] = resource;\n\t\t\t\t\t\tfound = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif ( !found ) throw 'Unidentified resource \"' + resource.name + '\": ' + resource.url;\n\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treturn PrepData;\n})();\n\n/**\n * Builds one or many THREE.Mesh from one raw set of Arraybuffers, materialGroup descriptions and further parameters.\n * Supports vertex, vertexColor, normal, uv and index buffers.\n * @class\n */\nTHREE.LoaderSupport.MeshBuilder = (function () {\n\n\tvar LOADER_MESH_BUILDER_VERSION = '1.2.1';\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tfunction MeshBuilder() {\n\t\tconsole.info( 'Using THREE.LoaderSupport.MeshBuilder version: ' + LOADER_MESH_BUILDER_VERSION );\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\n\t\tthis.callbacks = new THREE.LoaderSupport.Callbacks();\n\t\tthis.materials = [];\n\t}\n\n\t/**\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n\t * @memberOf THREE.LoaderSupport.MeshBuilder\n\t *\n\t * @param {boolean} enabled True or false.\n\t * @param {boolean} debug True or false.\n\t */\n\tMeshBuilder.prototype.setLogging = function ( enabled, debug ) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t};\n\n\t/**\n\t * Initializes the MeshBuilder (currently only default material initialisation).\n\t * @memberOf THREE.LoaderSupport.MeshBuilder\n\t *\n\t */\n\tMeshBuilder.prototype.init = function () {\n\t\tvar defaultMaterial = new THREE.MeshStandardMaterial( { color: 0xDCF1FF } );\n\t\tdefaultMaterial.name = 'defaultMaterial';\n\n\t\tvar defaultVertexColorMaterial = new THREE.MeshStandardMaterial( { color: 0xDCF1FF } );\n\t\tdefaultVertexColorMaterial.name = 'defaultVertexColorMaterial';\n\t\tdefaultVertexColorMaterial.vertexColors = THREE.VertexColors;\n\n\t\tvar defaultLineMaterial = new THREE.LineBasicMaterial();\n\t\tdefaultLineMaterial.name = 'defaultLineMaterial';\n\n\t\tvar defaultPointMaterial = new THREE.PointsMaterial( { size: 1 } );\n\t\tdefaultPointMaterial.name = 'defaultPointMaterial';\n\n\t\tvar runtimeMaterials = {};\n\t\truntimeMaterials[ defaultMaterial.name ] = defaultMaterial;\n\t\truntimeMaterials[ defaultVertexColorMaterial.name ] = defaultVertexColorMaterial;\n\t\truntimeMaterials[ defaultLineMaterial.name ] = defaultLineMaterial;\n\t\truntimeMaterials[ defaultPointMaterial.name ] = defaultPointMaterial;\n\n\t\tthis.updateMaterials(\n\t\t\t{\n\t\t\t\tcmd: 'materialData',\n\t\t\t\tmaterials: {\n\t\t\t\t\tmaterialCloneInstructions: null,\n\t\t\t\t\tserializedMaterials: null,\n\t\t\t\t\truntimeMaterials: runtimeMaterials\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\t/**\n\t * Set materials loaded by any supplier of an Array of {@link THREE.Material}.\n\t * @memberOf THREE.LoaderSupport.MeshBuilder\n\t *\n\t * @param {THREE.Material[]} materials Array of {@link THREE.Material}\n\t */\n\tMeshBuilder.prototype.setMaterials = function ( materials ) {\n\t\tvar payload = {\n\t\t\tcmd: 'materialData',\n\t\t\tmaterials: {\n\t\t\t\tmaterialCloneInstructions: null,\n\t\t\t\tserializedMaterials: null,\n\t\t\t\truntimeMaterials: Validator.isValid( this.callbacks.onLoadMaterials ) ? this.callbacks.onLoadMaterials( materials ) : materials\n\t\t\t}\n\t\t};\n\t\tthis.updateMaterials( payload );\n\t};\n\n\tMeshBuilder.prototype._setCallbacks = function ( callbacks ) {\n\t\tif ( Validator.isValid( callbacks.onProgress ) ) this.callbacks.setCallbackOnProgress( callbacks.onProgress );\n\t\tif ( Validator.isValid( callbacks.onMeshAlter ) ) this.callbacks.setCallbackOnMeshAlter( callbacks.onMeshAlter );\n\t\tif ( Validator.isValid( callbacks.onLoad ) ) this.callbacks.setCallbackOnLoad( callbacks.onLoad );\n\t\tif ( Validator.isValid( callbacks.onLoadMaterials ) ) this.callbacks.setCallbackOnLoadMaterials( callbacks.onLoadMaterials );\n\t};\n\n\t/**\n\t * Delegates processing of the payload (mesh building or material update) to the corresponding functions (BW-compatibility).\n\t * @memberOf THREE.LoaderSupport.MeshBuilder\n\t *\n\t * @param {Object} payload Raw Mesh or Material descriptions.\n\t * @returns {THREE.Mesh[]} mesh Array of {@link THREE.Mesh} or null in case of material update\n\t */\n\tMeshBuilder.prototype.processPayload = function ( payload ) {\n\t\tif ( payload.cmd === 'meshData' ) {\n\n\t\t\treturn this.buildMeshes( payload );\n\n\t\t} else if ( payload.cmd === 'materialData' ) {\n\n\t\t\tthis.updateMaterials( payload );\n\t\t\treturn null;\n\n\t\t}\n\t};\n\n\t/**\n\t * Builds one or multiple meshes from the data described in the payload (buffers, params, material info).\n\t * @memberOf THREE.LoaderSupport.MeshBuilder\n\t *\n\t * @param {Object} meshPayload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n\t * @returns {THREE.Mesh[]} mesh Array of {@link THREE.Mesh}\n\t */\n\tMeshBuilder.prototype.buildMeshes = function ( meshPayload ) {\n\t\tvar meshName = meshPayload.params.meshName;\n\n\t\tvar bufferGeometry = new THREE.BufferGeometry();\n\t\tbufferGeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( meshPayload.buffers.vertices ), 3 ) );\n\t\tif ( Validator.isValid( meshPayload.buffers.indices ) ) {\n\n\t\t\tbufferGeometry.setIndex( new THREE.BufferAttribute( new Uint32Array( meshPayload.buffers.indices ), 1 ));\n\n\t\t}\n\t\tvar haveVertexColors = Validator.isValid( meshPayload.buffers.colors );\n\t\tif ( haveVertexColors ) {\n\n\t\t\tbufferGeometry.addAttribute( 'color', new THREE.BufferAttribute( new Float32Array( meshPayload.buffers.colors ), 3 ) );\n\n\t\t}\n\t\tif ( Validator.isValid( meshPayload.buffers.normals ) ) {\n\n\t\t\tbufferGeometry.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( meshPayload.buffers.normals ), 3 ) );\n\n\t\t} else {\n\n\t\t\tbufferGeometry.computeVertexNormals();\n\n\t\t}\n\t\tif ( Validator.isValid( meshPayload.buffers.uvs ) ) {\n\n\t\t\tbufferGeometry.addAttribute( 'uv', new THREE.BufferAttribute( new Float32Array( meshPayload.buffers.uvs ), 2 ) );\n\n\t\t}\n\n\t\tvar material, materialName, key;\n\t\tvar materialNames = meshPayload.materials.materialNames;\n\t\tvar createMultiMaterial = meshPayload.materials.multiMaterial;\n\t\tvar multiMaterials = [];\n\t\tfor ( key in materialNames ) {\n\n\t\t\tmaterialName = materialNames[ key ];\n\t\t\tmaterial = this.materials[ materialName ];\n\t\t\tif ( createMultiMaterial ) multiMaterials.push( material );\n\n\t\t}\n\t\tif ( createMultiMaterial ) {\n\n\t\t\tmaterial = multiMaterials;\n\t\t\tvar materialGroups = meshPayload.materials.materialGroups;\n\t\t\tvar materialGroup;\n\t\t\tfor ( key in materialGroups ) {\n\n\t\t\t\tmaterialGroup = materialGroups[ key ];\n\t\t\t\tbufferGeometry.addGroup( materialGroup.start, materialGroup.count, materialGroup.index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar meshes = [];\n\t\tvar mesh;\n\t\tvar callbackOnMeshAlter = this.callbacks.onMeshAlter;\n\t\tvar callbackOnMeshAlterResult;\n\t\tvar useOrgMesh = true;\n\t\tvar geometryType = Validator.verifyInput( meshPayload.geometryType, 0 );\n\t\tif ( Validator.isValid( callbackOnMeshAlter ) ) {\n\n\t\t\tcallbackOnMeshAlterResult = callbackOnMeshAlter(\n\t\t\t\t{\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tmeshName: meshName,\n\t\t\t\t\t\tbufferGeometry: bufferGeometry,\n\t\t\t\t\t\tmaterial: material,\n\t\t\t\t\t\tgeometryType: geometryType\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif ( Validator.isValid( callbackOnMeshAlterResult ) ) {\n\n\t\t\t\tif ( callbackOnMeshAlterResult.isDisregardMesh() ) {\n\n\t\t\t\t\tuseOrgMesh = false;\n\n\t\t\t\t} else if ( callbackOnMeshAlterResult.providesAlteredMeshes() ) {\n\n\t\t\t\t\tfor ( var i in callbackOnMeshAlterResult.meshes ) {\n\n\t\t\t\t\t\tmeshes.push( callbackOnMeshAlterResult.meshes[ i ] );\n\n\t\t\t\t\t}\n\t\t\t\t\tuseOrgMesh = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\tif ( useOrgMesh ) {\n\n\t\t\tif ( meshPayload.computeBoundingSphere ) bufferGeometry.computeBoundingSphere();\n\t\t\tif ( geometryType === 0 ) {\n\n\t\t\t\tmesh = new THREE.Mesh( bufferGeometry, material );\n\n\t\t\t} else if ( geometryType === 1) {\n\n\t\t\t\tmesh = new THREE.LineSegments( bufferGeometry, material );\n\n\t\t\t} else {\n\n\t\t\t\tmesh = new THREE.Points( bufferGeometry, material );\n\n\t\t\t}\n\t\t\tmesh.name = meshName;\n\t\t\tmeshes.push( mesh );\n\n\t\t}\n\n\t\tvar progressMessage;\n\t\tif ( Validator.isValid( meshes ) && meshes.length > 0 ) {\n\n\t\t\tvar meshNames = [];\n\t\t\tfor ( var i in meshes ) {\n\n\t\t\t\tmesh = meshes[ i ];\n\t\t\t\tmeshNames[ i ] = mesh.name;\n\n\t\t\t}\n\t\t\tprogressMessage = 'Adding mesh(es) (' + meshNames.length + ': ' + meshNames + ') from input mesh: ' + meshName;\n\t\t\tprogressMessage += ' (' + ( meshPayload.progress.numericalValue * 100 ).toFixed( 2 ) + '%)';\n\n\t\t} else {\n\n\t\t\tprogressMessage = 'Not adding mesh: ' + meshName;\n\t\t\tprogressMessage += ' (' + ( meshPayload.progress.numericalValue * 100 ).toFixed( 2 ) + '%)';\n\n\t\t}\n\t\tvar callbackOnProgress = this.callbacks.onProgress;\n\t\tif ( Validator.isValid( callbackOnProgress ) ) {\n\n\t\t\tvar event = new CustomEvent( 'MeshBuilderEvent', {\n\t\t\t\tdetail: {\n\t\t\t\t\ttype: 'progress',\n\t\t\t\t\tmodelName: meshPayload.params.meshName,\n\t\t\t\t\ttext: progressMessage,\n\t\t\t\t\tnumericalValue: meshPayload.progress.numericalValue\n\t\t\t\t}\n\t\t\t} );\n\t\t\tcallbackOnProgress( event );\n\n\t\t}\n\n\t\treturn meshes;\n\t};\n\n\t/**\n\t * Updates the materials with contained material objects (sync) or from alteration instructions (async).\n\t * @memberOf THREE.LoaderSupport.MeshBuilder\n\t *\n\t * @param {Object} materialPayload Material update instructions\n\t */\n\tMeshBuilder.prototype.updateMaterials = function ( materialPayload ) {\n\t\tvar material, materialName;\n\t\tvar materialCloneInstructions = materialPayload.materials.materialCloneInstructions;\n\t\tif ( Validator.isValid( materialCloneInstructions ) ) {\n\n\t\t\tvar materialNameOrg = materialCloneInstructions.materialNameOrg;\n\t\t\tvar materialOrg = this.materials[ materialNameOrg ];\n\n\t\t\tif ( Validator.isValid( materialNameOrg ) ) {\n\n\t\t\t\tmaterial = materialOrg.clone();\n\n\t\t\t\tmaterialName = materialCloneInstructions.materialName;\n\t\t\t\tmaterial.name = materialName;\n\n\t\t\t\tvar materialProperties = materialCloneInstructions.materialProperties;\n\t\t\t\tfor ( var key in materialProperties ) {\n\n\t\t\t\t\tif ( material.hasOwnProperty( key ) && materialProperties.hasOwnProperty( key ) ) material[ key ] = materialProperties[ key ];\n\n\t\t\t\t}\n\t\t\t\tthis.materials[ materialName ] = material;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'Requested material \"' + materialNameOrg + '\" is not available!' );\n\n\t\t\t}\n\t\t}\n\n\t\tvar materials = materialPayload.materials.serializedMaterials;\n\t\tif ( Validator.isValid( materials ) && Object.keys( materials ).length > 0 ) {\n\n\t\t\tvar loader = new THREE.MaterialLoader();\n\t\t\tvar materialJson;\n\t\t\tfor ( materialName in materials ) {\n\n\t\t\t\tmaterialJson = materials[ materialName ];\n\t\t\t\tif ( Validator.isValid( materialJson ) ) {\n\n\t\t\t\t\tmaterial = loader.parse( materialJson );\n\t\t\t\t\tif ( this.logging.enabled ) console.info( 'De-serialized material with name \"' + materialName + '\" will be added.' );\n\t\t\t\t\tthis.materials[ materialName ] = material;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tmaterials = materialPayload.materials.runtimeMaterials;\n\t\tif ( Validator.isValid( materials ) && Object.keys( materials ).length > 0 ) {\n\n\t\t\tfor ( materialName in materials ) {\n\n\t\t\t\tmaterial = materials[ materialName ];\n\t\t\t\tif ( this.logging.enabled ) console.info( 'Material with name \"' + materialName + '\" will be added.' );\n\t\t\t\tthis.materials[ materialName ] = material;\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\t/**\n\t * Returns the mapping object of material name and corresponding jsonified material.\n\t *\n\t * @returns {Object} Map of Materials in JSON representation\n\t */\n\tMeshBuilder.prototype.getMaterialsJSON = function () {\n\t\tvar materialsJSON = {};\n\t\tvar material;\n\t\tfor ( var materialName in this.materials ) {\n\n\t\t\tmaterial = this.materials[ materialName ];\n\t\t\tmaterialsJSON[ materialName ] = material.toJSON();\n\t\t}\n\n\t\treturn materialsJSON;\n\t};\n\n\t/**\n\t * Returns the mapping object of material name and corresponding material.\n\t *\n\t * @returns {Object} Map of {@link THREE.Material}\n\t */\n\tMeshBuilder.prototype.getMaterials = function () {\n\t\treturn this.materials;\n\t};\n\n\treturn MeshBuilder;\n})();\n\n/**\n * Default implementation of the WorkerRunner responsible for creation and configuration of the parser within the worker.\n *\n * @class\n */\nTHREE.LoaderSupport.WorkerRunnerRefImpl = (function () {\n\n\tfunction WorkerRunnerRefImpl() {\n\t\tvar scope = this;\n\t\tvar scopedRunner = function( event ) {\n\t\t\tscope.processMessage( event.data );\n\t\t};\n\t\tself.addEventListener( 'message', scopedRunner, false );\n\t}\n\n\t/**\n\t * Applies values from parameter object via set functions or via direct assignment.\n\t * @memberOf THREE.LoaderSupport.WorkerRunnerRefImpl\n\t *\n\t * @param {Object} parser The parser instance\n\t * @param {Object} params The parameter object\n\t */\n\tWorkerRunnerRefImpl.prototype.applyProperties = function ( parser, params ) {\n\t\tvar property, funcName, values;\n\t\tfor ( property in params ) {\n\t\t\tfuncName = 'set' + property.substring( 0, 1 ).toLocaleUpperCase() + property.substring( 1 );\n\t\t\tvalues = params[ property ];\n\n\t\t\tif ( typeof parser[ funcName ] === 'function' ) {\n\n\t\t\t\tparser[ funcName ]( values );\n\n\t\t\t} else if ( parser.hasOwnProperty( property ) ) {\n\n\t\t\t\tparser[ property ] = values;\n\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Configures the Parser implementation according the supplied configuration object.\n\t * @memberOf THREE.LoaderSupport.WorkerRunnerRefImpl\n\t *\n\t * @param {Object} payload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n\t */\n\tWorkerRunnerRefImpl.prototype.processMessage = function ( payload ) {\n\t\tif ( payload.cmd === 'run' ) {\n\n\t\t\tvar callbacks = {\n\t\t\t\tcallbackMeshBuilder: function ( payload ) {\n\t\t\t\t\tself.postMessage( payload );\n\t\t\t\t},\n\t\t\t\tcallbackProgress: function ( text ) {\n\t\t\t\t\tif ( payload.logging.enabled && payload.logging.debug ) console.debug( 'WorkerRunner: progress: ' + text );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Parser is expected to be named as such\n\t\t\tvar parser = new Parser();\n\t\t\tif ( typeof parser[ 'setLogging' ] === 'function' ) parser.setLogging( payload.logging.enabled, payload.logging.debug );\n\t\t\tthis.applyProperties( parser, payload.params );\n\t\t\tthis.applyProperties( parser, payload.materials );\n\t\t\tthis.applyProperties( parser, callbacks );\n\t\t\tparser.workerScope = self;\n\t\t\tparser.parse( payload.data.input, payload.data.options );\n\n\t\t\tif ( payload.logging.enabled ) console.log( 'WorkerRunner: Run complete!' );\n\n\t\t\tcallbacks.callbackMeshBuilder( {\n\t\t\t\tcmd: 'complete',\n\t\t\t\tmsg: 'WorkerRunner completed run.'\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'WorkerRunner: Received unknown command: ' + payload.cmd );\n\n\t\t}\n\t};\n\n\treturn WorkerRunnerRefImpl;\n})();\n\n/**\n * This class provides means to transform existing parser code into a web worker. It defines a simple communication protocol\n * which allows to configure the worker and receive raw mesh data during execution.\n * @class\n */\nTHREE.LoaderSupport.WorkerSupport = (function () {\n\n\tvar WORKER_SUPPORT_VERSION = '2.2.0';\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tvar LoaderWorker = (function () {\n\n\t\tfunction LoaderWorker() {\n\t\t\tthis._reset();\n\t\t}\n\n\t\tLoaderWorker.prototype._reset = function () {\n\t\t\tthis.logging = {\n\t\t\t\tenabled: true,\n\t\t\t\tdebug: false\n\t\t\t};\n\t\t\tthis.worker = null;\n\t\t\tthis.runnerImplName = null;\n\t\t\tthis.callbacks = {\n\t\t\t\tmeshBuilder: null,\n\t\t\t\tonLoad: null\n\t\t\t};\n\t\t\tthis.terminateRequested = false;\n\t\t\tthis.queuedMessage = null;\n\t\t\tthis.started = false;\n\t\t\tthis.forceCopy = false;\n\t\t};\n\n\t\tLoaderWorker.prototype.setLogging = function ( enabled, debug ) {\n\t\t\tthis.logging.enabled = enabled === true;\n\t\t\tthis.logging.debug = debug === true;\n\t\t};\n\n\t\tLoaderWorker.prototype.setForceCopy = function ( forceCopy ) {\n\t\t\tthis.forceCopy = forceCopy === true;\n\t\t};\n\n\t\tLoaderWorker.prototype.initWorker = function ( code, runnerImplName ) {\n\t\t\tthis.runnerImplName = runnerImplName;\n\t\t\tvar blob = new Blob( [ code ], { type: 'application/javascript' } );\n\t\t\tthis.worker = new Worker( window.URL.createObjectURL( blob ) );\n\t\t\tthis.worker.onmessage = this._receiveWorkerMessage;\n\n\t\t\t// set referemce to this, then processing in worker scope within \"_receiveWorkerMessage\" can access members\n\t\t\tthis.worker.runtimeRef = this;\n\n\t\t\t// process stored queuedMessage\n\t\t\tthis._postMessage();\n\t\t};\n\n\t\t/**\n\t\t * Executed in worker scope\n \t\t */\n\t\tLoaderWorker.prototype._receiveWorkerMessage = function ( e ) {\n\t\t\tvar payload = e.data;\n\t\t\tswitch ( payload.cmd ) {\n\t\t\t\tcase 'meshData':\n\t\t\t\tcase 'materialData':\n\t\t\t\tcase 'imageData':\n\t\t\t\t\tthis.runtimeRef.callbacks.meshBuilder( payload );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'complete':\n\t\t\t\t\tthis.runtimeRef.queuedMessage = null;\n\t\t\t\t\tthis.started = false;\n\t\t\t\t\tthis.runtimeRef.callbacks.onLoad( payload.msg );\n\n\t\t\t\t\tif ( this.runtimeRef.terminateRequested ) {\n\n\t\t\t\t\t\tif ( this.runtimeRef.logging.enabled ) console.info( 'WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Run is complete. Terminating application on request!' );\n\t\t\t\t\t\tthis.runtimeRef._terminate();\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'error':\n\t\t\t\t\tconsole.error( 'WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Reported error: ' + payload.msg );\n\t\t\t\t\tthis.runtimeRef.queuedMessage = null;\n\t\t\t\t\tthis.started = false;\n\t\t\t\t\tthis.runtimeRef.callbacks.onLoad( payload.msg );\n\n\t\t\t\t\tif ( this.runtimeRef.terminateRequested ) {\n\n\t\t\t\t\t\tif ( this.runtimeRef.logging.enabled ) console.info( 'WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Run reported error. Terminating application on request!' );\n\t\t\t\t\t\tthis.runtimeRef._terminate();\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'WorkerSupport [' + this.runtimeRef.runnerImplName + ']: Received unknown command: ' + payload.cmd );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t};\n\n\t\tLoaderWorker.prototype.setCallbacks = function ( meshBuilder, onLoad ) {\n\t\t\tthis.callbacks.meshBuilder = Validator.verifyInput( meshBuilder, this.callbacks.meshBuilder );\n\t\t\tthis.callbacks.onLoad = Validator.verifyInput( onLoad, this.callbacks.onLoad );\n\t\t};\n\n\t\tLoaderWorker.prototype.run = function( payload ) {\n\t\t\tif ( Validator.isValid( this.queuedMessage ) ) {\n\n\t\t\t\tconsole.warn( 'Already processing message. Rejecting new run instruction' );\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\tthis.queuedMessage = payload;\n\t\t\t\tthis.started = true;\n\n\t\t\t}\n\t\t\tif ( ! Validator.isValid( this.callbacks.meshBuilder ) ) throw 'Unable to run as no \"MeshBuilder\" callback is set.';\n\t\t\tif ( ! Validator.isValid( this.callbacks.onLoad ) ) throw 'Unable to run as no \"onLoad\" callback is set.';\n\t\t\tif ( payload.cmd !== 'run' ) payload.cmd = 'run';\n\t\t\tif ( Validator.isValid( payload.logging ) ) {\n\n\t\t\t\tpayload.logging.enabled = payload.logging.enabled === true;\n\t\t\t\tpayload.logging.debug = payload.logging.debug === true;\n\n\t\t\t} else {\n\n\t\t\t\tpayload.logging = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tdebug: false\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._postMessage();\n\t\t};\n\n\t\tLoaderWorker.prototype._postMessage = function () {\n\t\t\tif ( Validator.isValid( this.queuedMessage ) && Validator.isValid( this.worker ) ) {\n\n\t\t\t\tif ( this.queuedMessage.data.input instanceof ArrayBuffer ) {\n\n\t\t\t\t\tvar content;\n\t\t\t\t\tif ( this.forceCopy ) {\n\n\t\t\t\t\t\tcontent = this.queuedMessage.data.input.slice( 0 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontent = this.queuedMessage.data.input;\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.worker.postMessage( this.queuedMessage, [ content ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.worker.postMessage( this.queuedMessage );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\n\t\tLoaderWorker.prototype.setTerminateRequested = function ( terminateRequested ) {\n\t\t\tthis.terminateRequested = terminateRequested === true;\n\t\t\tif ( this.terminateRequested && Validator.isValid( this.worker ) && ! Validator.isValid( this.queuedMessage ) && this.started ) {\n\n\t\t\t\tif ( this.logging.enabled ) console.info( 'Worker is terminated immediately as it is not running!' );\n\t\t\t\tthis._terminate();\n\n\t\t\t}\n\t\t};\n\n\t\tLoaderWorker.prototype._terminate = function () {\n\t\t\tthis.worker.terminate();\n\t\t\tthis._reset();\n\t\t};\n\n\t\treturn LoaderWorker;\n\n\t})();\n\n\tfunction WorkerSupport() {\n\t\tconsole.info( 'Using THREE.LoaderSupport.WorkerSupport version: ' + WORKER_SUPPORT_VERSION );\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\n\t\t// check worker support first\n\t\tif ( window.Worker === undefined ) throw \"This browser does not support web workers!\";\n\t\tif ( window.Blob === undefined  ) throw \"This browser does not support Blob!\";\n\t\tif ( typeof window.URL.createObjectURL !== 'function'  ) throw \"This browser does not support Object creation from URL!\";\n\n\t\tthis.loaderWorker = new LoaderWorker();\n\t}\n\n\t/**\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n\t * @memberOf THREE.LoaderSupport.WorkerSupport\n\t *\n\t * @param {boolean} enabled True or false.\n\t * @param {boolean} debug True or false.\n\t */\n\tWorkerSupport.prototype.setLogging = function ( enabled, debug ) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t\tthis.loaderWorker.setLogging( this.logging.enabled, this.logging.debug );\n\t};\n\n\t/**\n\t * Forces all ArrayBuffers to be transferred to worker to be copied.\n\t * @memberOf THREE.LoaderSupport.WorkerSupport\n\t *\n\t * @param {boolean} forceWorkerDataCopy True or false.\n\t */\n\tWorkerSupport.prototype.setForceWorkerDataCopy = function ( forceWorkerDataCopy ) {\n\t\tthis.loaderWorker.setForceCopy( forceWorkerDataCopy );\n\t};\n\n\t/**\n\t * Validate the status of worker code and the derived worker.\n\t * @memberOf THREE.LoaderSupport.WorkerSupport\n\t *\n\t * @param {Function} functionCodeBuilder Function that is invoked with funcBuildObject and funcBuildSingleton that allows stringification of objects and singletons.\n\t * @param {String} parserName Name of the Parser object\n\t * @param {String[]} libLocations URL of libraries that shall be added to worker code relative to libPath\n\t * @param {String} libPath Base path used for loading libraries\n\t * @param {THREE.LoaderSupport.WorkerRunnerRefImpl} runnerImpl The default worker parser wrapper implementation (communication and execution). An extended class could be passed here.\n\t */\n\tWorkerSupport.prototype.validate = function ( functionCodeBuilder, parserName, libLocations, libPath, runnerImpl ) {\n\t\tif ( Validator.isValid( this.loaderWorker.worker ) ) return;\n\n\t\tif ( this.logging.enabled ) {\n\n\t\t\tconsole.info( 'WorkerSupport: Building worker code...' );\n\t\t\tconsole.time( 'buildWebWorkerCode' );\n\n\t\t}\n\t\tif ( Validator.isValid( runnerImpl ) ) {\n\n\t\t\tif ( this.logging.enabled ) console.info( 'WorkerSupport: Using \"' + runnerImpl.name + '\" as Runner class for worker.' );\n\n\t\t} else {\n\n\t\t\trunnerImpl = THREE.LoaderSupport.WorkerRunnerRefImpl;\n\t\t\tif ( this.logging.enabled ) console.info( 'WorkerSupport: Using DEFAULT \"THREE.LoaderSupport.WorkerRunnerRefImpl\" as Runner class for worker.' );\n\n\t\t}\n\n\t\tvar userWorkerCode = functionCodeBuilder( buildObject, buildSingleton );\n\t\tuserWorkerCode += 'var Parser = '+ parserName +  ';\\n\\n';\n\t\tuserWorkerCode += buildSingleton( runnerImpl.name, runnerImpl );\n\t\tuserWorkerCode += 'new ' + runnerImpl.name + '();\\n\\n';\n\n\t\tvar scope = this;\n\t\tif ( Validator.isValid( libLocations ) && libLocations.length > 0 ) {\n\n\t\t\tvar libsContent = '';\n\t\t\tvar loadAllLibraries = function ( path, locations ) {\n\t\t\t\tif ( locations.length === 0 ) {\n\n\t\t\t\t\tscope.loaderWorker.initWorker( libsContent + userWorkerCode, runnerImpl.name );\n\t\t\t\t\tif ( scope.logging.enabled ) console.timeEnd( 'buildWebWorkerCode' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar loadedLib = function ( contentAsString ) {\n\t\t\t\t\t\tlibsContent += contentAsString;\n\t\t\t\t\t\tloadAllLibraries( path, locations );\n\t\t\t\t\t};\n\n\t\t\t\t\tvar fileLoader = new THREE.FileLoader();\n\t\t\t\t\tfileLoader.setPath( path );\n\t\t\t\t\tfileLoader.setResponseType( 'text' );\n\t\t\t\t\tfileLoader.load( locations[ 0 ], loadedLib );\n\t\t\t\t\tlocations.shift();\n\n\t\t\t\t}\n\t\t\t};\n\t\t\tloadAllLibraries( libPath, libLocations );\n\n\t\t} else {\n\n\t\t\tthis.loaderWorker.initWorker( userWorkerCode, runnerImpl.name );\n\t\t\tif ( this.logging.enabled ) console.timeEnd( 'buildWebWorkerCode' );\n\n\t\t}\n\t};\n\n\t/**\n\t * Specify functions that should be build when new raw mesh data becomes available and when the parser is finished.\n\t * @memberOf THREE.LoaderSupport.WorkerSupport\n\t *\n\t * @param {Function} meshBuilder The mesh builder function. Default is {@link THREE.LoaderSupport.MeshBuilder}.\n\t * @param {Function} onLoad The function that is called when parsing is complete.\n\t */\n\tWorkerSupport.prototype.setCallbacks = function ( meshBuilder, onLoad ) {\n\t\tthis.loaderWorker.setCallbacks( meshBuilder, onLoad );\n\t};\n\n\t/**\n\t * Runs the parser with the provided configuration.\n\t * @memberOf THREE.LoaderSupport.WorkerSupport\n\t *\n\t * @param {Object} payload Raw mesh description (buffers, params, materials) used to build one to many meshes.\n\t */\n\tWorkerSupport.prototype.run = function ( payload ) {\n\t\tthis.loaderWorker.run( payload );\n\t};\n\n\t/**\n\t * Request termination of worker once parser is finished.\n\t * @memberOf THREE.LoaderSupport.WorkerSupport\n\t *\n\t * @param {boolean} terminateRequested True or false.\n\t */\n\tWorkerSupport.prototype.setTerminateRequested = function ( terminateRequested ) {\n\t\tthis.loaderWorker.setTerminateRequested( terminateRequested );\n\t};\n\n\tvar buildObject = function ( fullName, object ) {\n\t\tvar objectString = fullName + ' = {\\n';\n\t\tvar part;\n\t\tfor ( var name in object ) {\n\n\t\t\tpart = object[ name ];\n\t\t\tif ( typeof( part ) === 'string' || part instanceof String ) {\n\n\t\t\t\tpart = part.replace( '\\n', '\\\\n' );\n\t\t\t\tpart = part.replace( '\\r', '\\\\r' );\n\t\t\t\tobjectString += '\\t' + name + ': \"' + part + '\",\\n';\n\n\t\t\t} else if ( part instanceof Array ) {\n\n\t\t\t\tobjectString += '\\t' + name + ': [' + part + '],\\n';\n\n\t\t\t} else if ( Number.isInteger( part ) ) {\n\n\t\t\t\tobjectString += '\\t' + name + ': ' + part + ',\\n';\n\n\t\t\t} else if ( typeof part === 'function' ) {\n\n\t\t\t\tobjectString += '\\t' + name + ': ' + part + ',\\n';\n\n\t\t\t}\n\n\t\t}\n\t\tobjectString += '}\\n\\n';\n\n\t\treturn objectString;\n\t};\n\n\tvar buildSingleton = function ( fullName, object, internalName, basePrototypeName, ignoreFunctions ) {\n\t\tvar objectString = '';\n\t\tvar objectName = ( Validator.isValid( internalName ) ) ? internalName : object.name;\n\n\t\tvar funcString, objectPart, constructorString;\n\t\tignoreFunctions = Validator.verifyInput( ignoreFunctions, [] );\n\t\tfor ( var name in object.prototype ) {\n\n\t\t\tobjectPart = object.prototype[ name ];\n\t\t\tif ( name === 'constructor' ) {\n\n\t\t\t\tfuncString = objectPart.toString();\n\t\t\t\tfuncString = funcString.replace( 'function', '' );\n\t\t\t\tconstructorString = '\\tfunction ' + objectName + funcString + ';\\n\\n';\n\n\t\t\t} else if ( typeof objectPart === 'function' ) {\n\n\t\t\t\tif ( ignoreFunctions.indexOf( name ) < 0 ) {\n\n\t\t\t\t\tfuncString = objectPart.toString();\n\t\t\t\t\tobjectString += '\\t' + objectName + '.prototype.' + name + ' = ' + funcString + ';\\n\\n';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\tobjectString += '\\treturn ' + objectName + ';\\n';\n\t\tobjectString += '})();\\n\\n';\n\n\t\tvar inheritanceBlock = '';\n\t\tif ( Validator.isValid( basePrototypeName ) ) {\n\n\t\t\tinheritanceBlock += '\\n';\n\t\t\tinheritanceBlock += objectName + '.prototype = Object.create( ' + basePrototypeName + '.prototype );\\n';\n\t\t\tinheritanceBlock += objectName + '.constructor = ' + objectName + ';\\n';\n\t\t\tinheritanceBlock += '\\n';\n\t\t}\n\t\tif ( ! Validator.isValid( constructorString ) ) {\n\n\t\t\tconstructorString = fullName + ' = (function () {\\n\\n';\n\t\t\tconstructorString += inheritanceBlock + '\\t' + object.prototype.constructor.toString() + '\\n\\n';\n\t\t\tobjectString = constructorString + objectString;\n\n\t\t} else {\n\n\t\t\tobjectString = fullName + ' = (function () {\\n\\n' + inheritanceBlock + constructorString + objectString;\n\n\t\t}\n\n\t\treturn objectString;\n\t};\n\n\treturn WorkerSupport;\n\n})();\n\n/**\n * Orchestrate loading of multiple OBJ files/data from an instruction queue with a configurable amount of workers (1-16).\n * Workflow:\n *   prepareWorkers\n *   enqueueForRun\n *   processQueue\n *   tearDown (to force stop)\n *\n * @class\n *\n * @param {string} classDef Class definition to be used for construction\n */\nTHREE.LoaderSupport.WorkerDirector = (function () {\n\n\tvar LOADER_WORKER_DIRECTOR_VERSION = '2.2.1';\n\n\tvar Validator = THREE.LoaderSupport.Validator;\n\n\tvar MAX_WEB_WORKER = 16;\n\tvar MAX_QUEUE_SIZE = 8192;\n\n\tfunction WorkerDirector( classDef ) {\n\t\tconsole.info( 'Using THREE.LoaderSupport.WorkerDirector version: ' + LOADER_WORKER_DIRECTOR_VERSION );\n\t\tthis.logging = {\n\t\t\tenabled: true,\n\t\t\tdebug: false\n\t\t};\n\n\t\tthis.maxQueueSize = MAX_QUEUE_SIZE ;\n\t\tthis.maxWebWorkers = MAX_WEB_WORKER;\n\t\tthis.crossOrigin = 'anonymous';\n\n\t\tif ( ! Validator.isValid( classDef ) ) throw 'Provided invalid classDef: ' + classDef;\n\n\t\tthis.workerDescription = {\n\t\t\tclassDef: classDef,\n\t\t\tglobalCallbacks: {},\n\t\t\tworkerSupports: {},\n\t\t\tforceWorkerDataCopy: true\n\t\t};\n\t\tthis.objectsCompleted = 0;\n\t\tthis.instructionQueue = [];\n\t\tthis.instructionQueuePointer = 0;\n\n\t\tthis.callbackOnFinishedProcessing = null;\n\t}\n\n\t/**\n\t * Enable or disable logging in general (except warn and error), plus enable or disable debug logging.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @param {boolean} enabled True or false.\n\t * @param {boolean} debug True or false.\n\t */\n\tWorkerDirector.prototype.setLogging = function ( enabled, debug ) {\n\t\tthis.logging.enabled = enabled === true;\n\t\tthis.logging.debug = debug === true;\n\t};\n\n\t/**\n\t * Returns the maximum length of the instruction queue.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @returns {number}\n\t */\n\tWorkerDirector.prototype.getMaxQueueSize = function () {\n\t\treturn this.maxQueueSize;\n\t};\n\n\t/**\n\t * Returns the maximum number of workers.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @returns {number}\n\t */\n\tWorkerDirector.prototype.getMaxWebWorkers = function () {\n\t\treturn this.maxWebWorkers;\n\t};\n\n\t/**\n\t * Sets the CORS string to be used.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @param {string} crossOrigin CORS value\n\t */\n\tWorkerDirector.prototype.setCrossOrigin = function ( crossOrigin ) {\n\t\tthis.crossOrigin = crossOrigin;\n\t};\n\n\t/**\n\t * Forces all ArrayBuffers to be transferred to worker to be copied.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @param {boolean} forceWorkerDataCopy True or false.\n\t */\n\tWorkerDirector.prototype.setForceWorkerDataCopy = function ( forceWorkerDataCopy ) {\n\t\tthis.workerDescription.forceWorkerDataCopy = forceWorkerDataCopy === true;\n\t};\n\n\t/**\n\t * Create or destroy workers according limits. Set the name and register callbacks for dynamically created web workers.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @param {THREE.OBJLoader2.WWOBJLoader2.PrepDataCallbacks} globalCallbacks  Register global callbacks used by all web workers\n\t * @param {number} maxQueueSize Set the maximum size of the instruction queue (1-1024)\n\t * @param {number} maxWebWorkers Set the maximum amount of workers (1-16)\n\t */\n\tWorkerDirector.prototype.prepareWorkers = function ( globalCallbacks, maxQueueSize, maxWebWorkers ) {\n\t\tif ( Validator.isValid( globalCallbacks ) ) this.workerDescription.globalCallbacks = globalCallbacks;\n\t\tthis.maxQueueSize = Math.min( maxQueueSize, MAX_QUEUE_SIZE );\n\t\tthis.maxWebWorkers = Math.min( maxWebWorkers, MAX_WEB_WORKER );\n\t\tthis.maxWebWorkers = Math.min( this.maxWebWorkers, this.maxQueueSize );\n\t\tthis.objectsCompleted = 0;\n\t\tthis.instructionQueue = [];\n\t\tthis.instructionQueuePointer = 0;\n\n\t\tfor ( var instanceNo = 0; instanceNo < this.maxWebWorkers; instanceNo++ ) {\n\n\t\t\tvar workerSupport = new THREE.LoaderSupport.WorkerSupport();\n\t\t\tworkerSupport.setLogging( this.logging.enabled, this.logging.debug );\n\t\t\tworkerSupport.setForceWorkerDataCopy( this.workerDescription.forceWorkerDataCopy );\n\t\t\tthis.workerDescription.workerSupports[ instanceNo ] = {\n\t\t\t\tinstanceNo: instanceNo,\n\t\t\t\tinUse: false,\n\t\t\t\tterminateRequested: false,\n\t\t\t\tworkerSupport: workerSupport,\n\t\t\t\tloader: null\n\t\t\t};\n\n\t\t}\n\t};\n\n\t/**\n\t * Store run instructions in internal instructionQueue.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @param {THREE.LoaderSupport.PrepData} prepData\n\t */\n\tWorkerDirector.prototype.enqueueForRun = function ( prepData ) {\n\t\tif ( this.instructionQueue.length < this.maxQueueSize ) {\n\t\t\tthis.instructionQueue.push( prepData );\n\t\t}\n\t};\n\n\t/**\n\t * Returns if any workers are running.\n\t *\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t * @returns {boolean}\n\t */\n\tWorkerDirector.prototype.isRunning = function () {\n\t\tvar wsKeys = Object.keys( this.workerDescription.workerSupports );\n\t\treturn ( ( this.instructionQueue.length > 0 && this.instructionQueuePointer < this.instructionQueue.length ) || wsKeys.length > 0 );\n\t};\n\n\t/**\n\t * Process the instructionQueue until it is depleted.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t */\n\tWorkerDirector.prototype.processQueue = function () {\n\t\tvar prepData, supportDesc;\n\t\tfor ( var instanceNo in this.workerDescription.workerSupports ) {\n\n\t\t\tsupportDesc = this.workerDescription.workerSupports[ instanceNo ];\n\t\t\tif ( ! supportDesc.inUse ) {\n\n\t\t\t\tif ( this.instructionQueuePointer < this.instructionQueue.length ) {\n\n\t\t\t\t\tprepData = this.instructionQueue[ this.instructionQueuePointer ];\n\t\t\t\t\tthis._kickWorkerRun( prepData, supportDesc );\n\t\t\t\t\tthis.instructionQueuePointer++;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._deregister( supportDesc );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ! this.isRunning() && this.callbackOnFinishedProcessing !== null ) {\n\n\t\t\tthis.callbackOnFinishedProcessing();\n\t\t\tthis.callbackOnFinishedProcessing = null;\n\n\t\t}\n\t};\n\n\tWorkerDirector.prototype._kickWorkerRun = function( prepData, supportDesc ) {\n\t\tsupportDesc.inUse = true;\n\t\tsupportDesc.workerSupport.setTerminateRequested( supportDesc.terminateRequested );\n\n\t\tif ( this.logging.enabled ) console.info( '\\nAssigning next item from queue to worker (queue length: ' + this.instructionQueue.length + ')\\n\\n' );\n\n\t\tvar scope = this;\n\t\tvar prepDataCallbacks = prepData.getCallbacks();\n\t\tvar globalCallbacks = this.workerDescription.globalCallbacks;\n\t\tvar wrapperOnLoad = function ( event ) {\n\t\t\tif ( Validator.isValid( globalCallbacks.onLoad ) ) globalCallbacks.onLoad( event );\n\t\t\tif ( Validator.isValid( prepDataCallbacks.onLoad ) ) prepDataCallbacks.onLoad( event );\n\t\t\tscope.objectsCompleted++;\n\t\t\tsupportDesc.inUse = false;\n\n\t\t\tscope.processQueue();\n\t\t};\n\n\t\tvar wrapperOnProgress = function ( event ) {\n\t\t\tif ( Validator.isValid( globalCallbacks.onProgress ) ) globalCallbacks.onProgress( event );\n\t\t\tif ( Validator.isValid( prepDataCallbacks.onProgress ) ) prepDataCallbacks.onProgress( event );\n\t\t};\n\n\t\tvar wrapperOnMeshAlter = function ( event, override ) {\n\t\t\tif ( Validator.isValid( globalCallbacks.onMeshAlter ) ) override = globalCallbacks.onMeshAlter( event, override );\n\t\t\tif ( Validator.isValid( prepDataCallbacks.onMeshAlter ) ) override = globalCallbacks.onMeshAlter( event, override );\n\t\t\treturn override;\n\t\t};\n\n\t\tvar wrapperOnLoadMaterials = function ( materials ) {\n\t\t\tif ( Validator.isValid( globalCallbacks.onLoadMaterials ) ) materials = globalCallbacks.onLoadMaterials( materials );\n\t\t\tif ( Validator.isValid( prepDataCallbacks.onLoadMaterials ) ) materials = prepDataCallbacks.onLoadMaterials( materials );\n\t\t\treturn materials;\n\t\t};\n\n\t\tsupportDesc.loader = this._buildLoader( supportDesc.instanceNo );\n\n\t\tvar updatedCallbacks = new THREE.LoaderSupport.Callbacks();\n\t\tupdatedCallbacks.setCallbackOnLoad( wrapperOnLoad );\n\t\tupdatedCallbacks.setCallbackOnProgress( wrapperOnProgress );\n\t\tupdatedCallbacks.setCallbackOnMeshAlter( wrapperOnMeshAlter );\n\t\tupdatedCallbacks.setCallbackOnLoadMaterials( wrapperOnLoadMaterials );\n\t\tprepData.callbacks = updatedCallbacks;\n\n\t\tsupportDesc.loader.run( prepData, supportDesc.workerSupport );\n\t};\n\n\tWorkerDirector.prototype._buildLoader = function ( instanceNo ) {\n\t\tvar classDef = this.workerDescription.classDef;\n\t\tvar loader = Object.create( classDef.prototype );\n\t\tclassDef.call( loader, THREE.DefaultLoadingManager );\n\n\t\t// verify that all required functions are implemented\n\t\tif ( ! loader.hasOwnProperty( 'instanceNo' ) ) throw classDef.name + ' has no property \"instanceNo\".';\n\t\tloader.instanceNo = instanceNo;\n\n\t\tif ( ! loader.hasOwnProperty( 'workerSupport' ) ) {\n\n\t\t\tthrow classDef.name + ' has no property \"workerSupport\".';\n\n\t\t}\n\t\tif ( typeof loader.run !== 'function'  ) throw classDef.name + ' has no function \"run\".';\n\t\tif ( ! loader.hasOwnProperty( 'callbacks' ) || ! Validator.isValid( loader.callbacks ) ) {\n\n\t\t\tconsole.warn( classDef.name + ' has an invalid property \"callbacks\". Will change to \"THREE.LoaderSupport.Callbacks\"' );\n\t\t\tloader.callbacks = new THREE.LoaderSupport.Callbacks();\n\n\t\t}\n\n\t\treturn loader;\n\t};\n\n\tWorkerDirector.prototype._deregister = function ( supportDesc ) {\n\t\tif ( Validator.isValid( supportDesc ) ) {\n\n\t\t\tsupportDesc.workerSupport.setTerminateRequested( true );\n\t\t\tif ( this.logging.enabled ) console.info( 'Requested termination of worker #' + supportDesc.instanceNo + '.' );\n\n\t\t\tvar loaderCallbacks = supportDesc.loader.callbacks;\n\t\t\tif ( Validator.isValid( loaderCallbacks.onProgress ) ) loaderCallbacks.onProgress( { detail: { text: '' } } );\n\t\t\tdelete this.workerDescription.workerSupports[ supportDesc.instanceNo ];\n\n\t\t}\n\t};\n\n\t/**\n\t * Terminate all workers.\n\t * @memberOf THREE.LoaderSupport.WorkerDirector\n\t *\n\t * @param {callback} callbackOnFinishedProcessing Function called once all workers finished processing.\n\t */\n\tWorkerDirector.prototype.tearDown = function ( callbackOnFinishedProcessing ) {\n\t\tif ( this.logging.enabled ) console.info( 'WorkerDirector received the deregister call. Terminating all workers!' );\n\n\t\tthis.instructionQueuePointer = this.instructionQueue.length;\n\t\tthis.callbackOnFinishedProcessing = Validator.verifyInput( callbackOnFinishedProcessing, null );\n\n\t\tfor ( var name in this.workerDescription.workerSupports ) {\n\n\t\t\tthis.workerDescription.workerSupports[ name ].terminateRequested = true;\n\n\t\t}\n\t};\n\n\treturn WorkerDirector;\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/LoaderSupport.js","\nvar content = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./detail.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./detail.less\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/happypack/loader.js?id=css!../../../node_modules/postcss-loader/lib/index.js!../../../node_modules/happypack/loader.js?id=less!./detail.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/component/detail/detail.less\n// module id = u223\n// module chunks = 0"],"sourceRoot":""}